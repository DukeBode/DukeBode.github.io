<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2019-nCoV</title>
    <url>/2020/02/26/2019-nCoV/</url>
    <content><![CDATA[<p>疫情下，总结下问题。</p>
<span id="more"></span>

<ol>
<li><p>学生票不能买半程票，必须全程！！！学校附近旅游比回家消费还高！！！</p>
<p> 答：学生票应该改为免费里程计算，根据家校距离免费里程。每次最多抵消一半里程。</p>
</li>
<li><p>火车明明有座位，非要搞个续票，多收好几块钱！！！</p>
<p> 答：铁路局应该先购票，再分配座位。长途优先排座，短途打车也不贵。</p>
</li>
<li><p>网课、社团都喜欢用各种APP，手机都装卡了！！！</p>
<p> 答：系统厂商应该丰富接口，避免安装重复功能，原装功能应当可取代。用户有权利阻止某些app的冗余功能。系统应当考虑到流畅问题。</p>
</li>
<li><p>招聘网站注册账户好烦啊！！！有些公司用的还不是第三方招聘网站，然后只能选一个工作！！！</p>
<p> 答：人社部应该统一就业账户，用户授权即可，数据由企业管理。境内的所有企业应当接入服务。</p>
</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>BeautifulSoup</title>
    <url>/2018/01/23/BeautifulSoup/</url>
    <content><![CDATA[<p>Beautiful Soup提供一些简单的、python式的函数用来处理导航、搜索、修改分析树等功能。它是一个工具箱，通过解析文档为用户提供需要抓取的数据，因为简单，所以不需要多少代码就可以写出一个完整的应用程序</p>
<span id="more"></span>

<h2 id="1-Beautiful-Soup的简介"><a href="#1-Beautiful-Soup的简介" class="headerlink" title="1. Beautiful Soup的简介"></a>1. Beautiful Soup的简介</h2><p>简单来说，Beautiful Soup是python的一个库，最主要的功能是从网页抓取数据。</p>
<p>Beautiful Soup自动将输入文档转换为Unicode编码，输出文档转换为utf-8编码。你不需要考虑编码方式，除非文档没有指定一个编码方式，这时，Beautiful Soup就不能自动识别编码方式了。然后，你仅仅需要说明一下原始编码方式就可以了。<br>Beautiful Soup已成为和lxml、html6lib一样出色的python解释器，为用户灵活地提供不同的解析策略或强劲的速度。</p>
<p>废话不多说，我们来试一下吧~</p>
<h2 id="2-Beautiful-Soup-安装"><a href="#2-Beautiful-Soup-安装" class="headerlink" title="2. Beautiful Soup 安装"></a>2. Beautiful Soup 安装</h2><p>Beautiful Soup 3 目前已经停止开发，推荐在现在的项目中使用Beautiful Soup 4，不过它已经被移植到BS4了，也就是说导入时我们需要 import bs4 。所以这里我们用的版本是 Beautiful Soup 4.3.2 (简称BS4)，另外据说 BS4 对 Python3 的支持不够好，不过我用的是 Python2.7.7，如果有小伙伴用的是 Python3 版本，可以考虑下载 BS3 版本。</p>
<p>可以利用 pip 或者  来安装，以下两种方法均可</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install beautifulsoup4</span><br></pre></td></tr></table></figure>
<p>如果想安装最新的版本，请直接下载安装包来手动安装，也是十分方便的方法。在这里我安装的是 Beautiful Soup 4.3.2<br>Beautiful Soup 3.2.1Beautiful Soup 4.3.2<br>下载完成之后解压<br>运行下面的命令即可完成安装</p>
<p>sudo python setup.py install<br>然后需要安装 lxml</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install lxml</span><br></pre></td></tr></table></figure>

<p>另一个可供选择的解析器是纯Python实现的 html5lib , html5lib的解析方式与浏览器相同,可以选择下列方法来安装html5lib:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install html5lib</span><br></pre></td></tr></table></figure>
<p>Beautiful Soup支持Python标准库中的HTML解析器,还支持一些第三方的解析器，如果我们不安装它，则 Python 会使用 Python默认的解析器，lxml 解析器更加强大，速度更快，推荐安装。<br>&lt;thead”&gt;</p>
<table>
<thead>
<tr>
<th>解析器</th>
<th>使用方法</th>
<th>优势</th>
<th>劣势</th>
</tr>
</thead>
<tbody><tr>
<td>Python标准库</td>
<td>BeautifulSoup(markup, “html.parser”)</td>
<td>Python的内置标准库、执行速度适中、文档容错能力强</td>
<td>Python 2.7.3 or 3.2.2)前 的版本中文档容错能力差</td>
</tr>
<tr>
<td>lxml HTML 解析器</td>
<td>BeautifulSoup(markup, “lxml”)</td>
<td>速度快、文档容错能力强</td>
<td>需要安装C语言库</td>
</tr>
<tr>
<td>lxml XML 解析器</td>
<td>BeautifulSoup(markup, [“lxml”, “xml”])BeautifulSoup(markup, “xml”)</td>
<td>速度快、唯一支持XML的解析器</td>
<td>需要安装C语言库</td>
</tr>
<tr>
<td>html5lib</td>
<td>BeautifulSoup(markup, “html5lib”)</td>
<td>最好的容错性、以浏览器的方式解析文档、生成HTML5格式的文档</td>
<td>速度慢、不依赖外部扩展</td>
</tr>
</tbody></table>
<h2 id="3-开启Beautiful-Soup-之旅"><a href="#3-开启Beautiful-Soup-之旅" class="headerlink" title="3. 开启Beautiful Soup 之旅"></a>3. 开启Beautiful Soup 之旅</h2><p>在这里先分享官方文档链接，不过内容是有些多，也不够条理，在此本文章做一下整理方便大家参考。<br>官方文档</p>
<h2 id="4-创建-Beautiful-Soup-对象"><a href="#4-创建-Beautiful-Soup-对象" class="headerlink" title="4. 创建 Beautiful Soup 对象"></a>4. 创建 Beautiful Soup 对象</h2><p>首先必须要导入 bs4 库</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br></pre></td></tr></table></figure>
<p>1、 我们创建一个字符串，后面的例子我们便会用它来演示</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>The Dormouse&#x27;s story<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span> <span class="attr">name</span>=<span class="string">&quot;dromouse&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>The Dormouse&#x27;s story<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;story&quot;</span>&gt;</span></span><br><span class="line">    Once upon a time there were three little sisters; and their names were</span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://example.com/elsie&quot;</span> <span class="attr">class</span>=<span class="string">&quot;sister&quot;</span> <span class="attr">id</span>=<span class="string">&quot;link1&quot;</span>&gt;</span><span class="comment">&lt;!-- Elsie --&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    ,<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://example.com/lacie&quot;</span> <span class="attr">class</span>=<span class="string">&quot;sister&quot;</span> <span class="attr">id</span>=<span class="string">&quot;link2&quot;</span>&gt;</span>Lacie<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    and<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://example.com/tillie&quot;</span> <span class="attr">class</span>=<span class="string">&quot;sister&quot;</span> <span class="attr">id</span>=<span class="string">&quot;link3&quot;</span>&gt;</span>Tillie<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    ;and they lived at the bottom of a well.</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;story&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>创建 beautifulsoup 对象</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">soup = BeautifulSoup(html)</span><br></pre></td></tr></table></figure>
<p>另外，我们还可以用本地 HTML 文件来创建对象，例如</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">soup = BeautifulSoup(<span class="built_in">open</span>(<span class="string">&#x27;index.html&#x27;</span>))</span><br></pre></td></tr></table></figure>
<p>上面这句代码便是将本地 index.html 文件打开，用它来创建 soup 对象<br>下面我们来打印一下 soup 对象的内容，格式化输出</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="built_in">print</span> soup.prettify()</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;title&gt;</span><br><span class="line">            The Dormouse<span class="string">&#x27;s story</span></span><br><span class="line"><span class="string">        &lt;/title&gt;</span></span><br></pre></td></tr></table></figure>

<p>以上便是输出结果，格式化打印出了它的内容，这个函数经常用到，小伙伴们要记好咯。<br>5. 四大对象种类<br>Beautiful Soup将复杂HTML文档转换成一个复杂的树形结构,每个节点都是Python对象,所有对象可以归纳为4种:<br>Tag、NavigableString、BeautifulSoup、Comment<br>下面我们进行一一介绍</p>
<p>（1）Tag</p>
<p>Tag 是什么？通俗点讲就是 HTML 中的一个个标签，例如</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>The Dormouse&#x27;s story<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;sister&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://example.com/elsie&quot;</span> <span class="attr">id</span>=<span class="string">&quot;link1&quot;</span>&gt;</span>Elsie<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>上面的 title a 等等 HTML 标签加上里面包括的内容就是 Tag，下面我们来感受一下怎样用 Beautiful Soup 来方便地获取 Tags<br>下面每一段代码中注释部分即为运行结果</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span> soup.title</span><br><span class="line"><span class="comment">#&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;</span></span><br><span class="line"><span class="built_in">print</span> soup.head</span><br><span class="line"><span class="comment">#&lt;head&gt;&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;&lt;/head&gt;</span></span><br><span class="line"><span class="built_in">print</span> soup.a</span><br><span class="line"><span class="comment">#&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;</span></span><br><span class="line"><span class="built_in">print</span> soup.p</span><br><span class="line"><span class="comment">#&lt;p class=&quot;title&quot; name=&quot;dromouse&quot;&gt;&lt;b&gt;The Dormouse&#x27;s story&lt;/b&gt;&lt;/p&gt;</span></span><br></pre></td></tr></table></figure>
<p>我们可以利用 soup加标签名轻松地获取这些标签的内容，是不是感觉比正则表达式方便多了？不过有一点是，它查找的是在所有内容中的第一个符合要求的标签，如果要查询所有的标签，我们在后面进行介绍。</p>
<p>我们可以验证一下这些对象的类型</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span> <span class="built_in">type</span>(soup.a)</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;bs4.element.Tag&#x27;</span>&gt;</span><br></pre></td></tr></table></figure>
<p>对于 Tag，它有两个重要的属性，是 name 和 attrs，下面我们分别来感受一下<br>name</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span> soup.name</span><br><span class="line">[document]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span> soup.head.name</span><br><span class="line">head</span><br></pre></td></tr></table></figure>
<p>soup 对象本身比较特殊，它的 name 即为 [document]，对于其他内部标签，输出的值便为标签本身的名称。<br>attrs</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span> soup.p.attrs</span><br><span class="line"><span class="comment">#&#123;&#x27;class&#x27;: [&#x27;title&#x27;], &#x27;name&#x27;: &#x27;dromouse&#x27;&#125;</span></span><br></pre></td></tr></table></figure>
<p>在这里，我们把 p 标签的所有属性打印输出了出来，得到的类型是一个字典。<br>如果我们想要单独获取某个属性，可以这样，例如我们获取它的 class 叫什么</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span> soup.p[<span class="string">&#x27;class&#x27;</span>]</span><br><span class="line">[<span class="string">&#x27;title&#x27;</span>]</span><br></pre></td></tr></table></figure>
<p>还可以这样，利用get方法，传入属性的名称，二者是等价的</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span> soup.p.get(<span class="string">&#x27;class&#x27;</span>)</span><br><span class="line"><span class="comment">#[&#x27;title&#x27;]</span></span><br></pre></td></tr></table></figure>
<p>我们可以对这些属性和内容等等进行修改，例如</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">soup.p[<span class="string">&#x27;class&#x27;</span>]=<span class="string">&quot;newClass&quot;</span></span><br><span class="line"><span class="built_in">print</span> soup.p</span><br><span class="line"><span class="comment">#&lt;p class=&quot;newClass&quot; name=&quot;dromouse&quot;&gt;&lt;b&gt;The Dormouse&#x27;s story&lt;/b&gt;&lt;/p&gt;</span></span><br></pre></td></tr></table></figure>
<p>还可以对这个属性进行删除，例如</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">del</span> soup.p[<span class="string">&#x27;class&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span> soup.p</span><br><span class="line"><span class="comment">#&lt;p name=&quot;dromouse&quot;&gt;&lt;b&gt;The Dormouse&#x27;s story&lt;/b&gt;&lt;/p&gt;</span></span><br></pre></td></tr></table></figure>
<p>不过，对于修改删除的操作，不是我们的主要用途，在此不做详细介绍了，如果有需要，请查看前面提供的官方文档</p>
<p>（2）NavigableString</p>
<p>既然我们已经得到了标签的内容，那么问题来了，我们要想获取标签内部的文字怎么办呢？很简单，用 .string 即可，例如</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span> soup.p.string</span><br><span class="line"><span class="comment">#The Dormouse&#x27;s story</span></span><br></pre></td></tr></table></figure>
<p>这样我们就轻松获取到了标签里面的内容，想想如果用正则表达式要多麻烦。它的类型是一个 NavigableString，翻译过来叫 可以遍历的字符串，不过我们最好还是称它英文名字吧。<br>来检查一下它的类型</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span> <span class="built_in">type</span>(soup.p.string)</span><br><span class="line"><span class="comment">#&lt;class &#x27;bs4.element.NavigableString&#x27;&gt;</span></span><br></pre></td></tr></table></figure>
<p>（3）BeautifulSoup<br>BeautifulSoup 对象表示的是一个文档的全部内容.大部分时候,可以把它当作 Tag 对象，是一个特殊的 Tag，我们可以分别获取它的类型，名称，以及属性来感受一下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span> <span class="built_in">type</span>(soup.name)</span><br><span class="line"><span class="comment">#&lt;type &#x27;unicode&#x27;&gt;</span></span><br><span class="line"><span class="built_in">print</span> soup.name </span><br><span class="line"><span class="comment"># [document]</span></span><br><span class="line"><span class="built_in">print</span> soup.attrs </span><br><span class="line"><span class="comment">#&#123;&#125; 空字典</span></span><br></pre></td></tr></table></figure>
<p>（4）Comment<br>Comment 对象是一个特殊类型的 NavigableString 对象，其实输出的内容仍然不包括注释符号，但是如果不好好处理它，可能会对我们的文本处理造成意想不到的麻烦。<br>我们找一个带注释的标签</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span> soup.a</span><br><span class="line"><span class="comment"># &lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;</span></span><br><span class="line"><span class="built_in">print</span> soup.a.string</span><br><span class="line"><span class="comment"># Elsie</span></span><br><span class="line"><span class="built_in">print</span> <span class="built_in">type</span>(soup.a.string)</span><br><span class="line"><span class="comment"># &lt;class &#x27;bs4.element.Comment&#x27;&gt;</span></span><br></pre></td></tr></table></figure>

<p>a 标签里的内容实际上是注释，但是如果我们利用 .string 来输出它的内容，我们发现它已经把注释符号去掉了，所以这可能会给我们带来不必要的麻烦。<br>另外我们打印输出下它的类型，发现它是一个 Comment 类型，所以，我们在使用前最好做一下判断，判断代码如下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="built_in">type</span>(soup.a.string)==bs4.element.Comment:</span><br><span class="line">    <span class="built_in">print</span> soup.a.string</span><br></pre></td></tr></table></figure>
<p>上面的代码中，我们首先判断了它的类型，是否为 Comment 类型，然后再进行其他操作，如打印输出。</p>
<ol start="6">
<li>遍历文档树</li>
</ol>
<p>（1）直接子节点<br>要点：.contents  .children  属性<br>.contents<br>tag 的 .content 属性可以将tag的子节点以列表的方式输出</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span> soup.head.contents </span><br><span class="line"><span class="comment">#[&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;]</span></span><br></pre></td></tr></table></figure>
<p>输出方式为列表，我们可以用列表索引来获取它的某一个元素</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span> soup.head.contents[<span class="number">0</span>]</span><br><span class="line"><span class="comment">#&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;</span></span><br></pre></td></tr></table></figure>
<p>.children<br>它返回的不是一个 list，不过我们可以通过遍历获取所有子节点。<br>我们打印输出 .children 看一下，可以发现它是一个 list 生成器对象</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span> soup.head.children</span><br><span class="line"><span class="comment">#&lt;listiterator object at 0x7f71457f5710&gt;</span></span><br></pre></td></tr></table></figure>
<p>我们怎样获得里面的内容呢？很简单，遍历一下就好了，代码及结果如下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> child <span class="keyword">in</span>  soup.body.children:</span><br><span class="line">    <span class="built_in">print</span> child</span><br><span class="line"></span><br><span class="line"><span class="comment"># &lt;p class=&quot;title&quot; name=&quot;dromouse&quot;&gt;&lt;b&gt;The Dormouse&#x27;s story&lt;/b&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &lt;p class=&quot;story&quot;&gt;Once upon a time there were three little sisters; and their names were&lt;/p&gt;</span></span><br><span class="line"><span class="comment"># &lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;,</span></span><br><span class="line"><span class="comment"># &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;</span></span><br></pre></td></tr></table></figure>
<p> （2）所有子孙节点<br>知识点：.descendants 属性<br>.descendants<br>.contents 和 .children 属性仅包含tag的直接子节点，.descendants 属性可以对所有tag的子孙节点进行递归循环，和 children类似，我们也需要遍历获取其中的内容。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> child <span class="keyword">in</span> soup.descendants:</span><br><span class="line">    <span class="built_in">print</span> child</span><br></pre></td></tr></table></figure>
<p>运行结果如下，可以发现，所有的节点都被打印出来了，先生最外层的 HTML标签，其次从 head 标签一个个剥离，以此类推。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>The Dormouse&#x27;s story<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span> <span class="attr">name</span>=<span class="string">&quot;dromouse&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>The Dormouse&#x27;s story<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;story&quot;</span>&gt;</span>Once upon a time there were three little sisters; and their names were</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;sister&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://example.com/elsie&quot;</span> <span class="attr">id</span>=<span class="string">&quot;link1&quot;</span>&gt;</span><span class="comment">&lt;!-- Elsie --&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>,</span><br></pre></td></tr></table></figure>
<p> （3）节点内容<br>知识点：.string 属性<br>如果tag只有一个 NavigableString 类型子节点,那么这个tag可以使用 .string 得到子节点。如果一个tag仅有一个子节点,那么这个tag也可以使用 .string 方法,输出结果与当前唯一子节点的 .string 结果相同。<br>通俗点说就是：如果一个标签里面没有标签了，那么 .string 就会返回标签里面的内容。如果标签里面只有唯一的一个标签了，那么 .string 也会返回最里面的内容。例如</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span> soup.head.string</span><br><span class="line"><span class="comment"># The Dormouse&#x27;s story</span></span><br><span class="line"><span class="built_in">print</span> soup.title.string</span><br><span class="line"><span class="comment"># The Dormouse&#x27;s story</span></span><br></pre></td></tr></table></figure>
<p>如果tag包含了多个子节点,tag就无法确定，string 方法应该调用哪个子节点的内容, .string 的输出结果是 None</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span> soup.html.string</span><br><span class="line"><span class="comment"># None</span></span><br></pre></td></tr></table></figure>
<p>（4）多个内容<br>知识点： .strings  .stripped_strings 属性<br>.strings<br>获取多个内容，不过需要遍历获取，比如下面的例子</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> string <span class="keyword">in</span> soup.strings:</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">repr</span>(string))</span><br><span class="line">    <span class="comment"># u&quot;The Dormouse&#x27;s story&quot;</span></span><br><span class="line">    <span class="comment"># u&#x27;\n\n&#x27;</span></span><br><span class="line">    <span class="comment"># u&quot;The Dormouse&#x27;s story&quot;</span></span><br><span class="line">    <span class="comment"># u&#x27;\n\n&#x27;</span></span><br><span class="line">    <span class="comment"># u&#x27;Once upon a time there were three little sisters; and their names were\n&#x27;</span></span><br><span class="line">    <span class="comment"># u&#x27;Elsie&#x27;</span></span><br><span class="line">    <span class="comment"># u&#x27;,\n&#x27;</span></span><br><span class="line">    <span class="comment"># u&#x27;Lacie&#x27;</span></span><br><span class="line">    <span class="comment"># u&#x27; and\n&#x27;</span></span><br><span class="line">    <span class="comment"># u&#x27;Tillie&#x27;</span></span><br><span class="line">    <span class="comment"># u&#x27;;\nand they lived at the bottom of a well.&#x27;</span></span><br><span class="line">    <span class="comment"># u&#x27;\n\n&#x27;</span></span><br><span class="line">    <span class="comment"># u&#x27;...&#x27;</span></span><br><span class="line">    <span class="comment"># u&#x27;\n&#x27;</span></span><br></pre></td></tr></table></figure>
<p>.stripped_strings<br>输出的字符串中可能包含了很多空格或空行,使用 .stripped_strings 可以去除多余空白内容</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> string <span class="keyword">in</span> soup.stripped_strings:</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">repr</span>(string))</span><br><span class="line">    <span class="comment"># u&quot;The Dormouse&#x27;s story&quot;</span></span><br><span class="line">    <span class="comment"># u&quot;The Dormouse&#x27;s story&quot;</span></span><br><span class="line">    <span class="comment"># u&#x27;Once upon a time there were three little sisters; and their names were&#x27;</span></span><br><span class="line">    <span class="comment"># u&#x27;Elsie&#x27;</span></span><br><span class="line">    <span class="comment"># u&#x27;,&#x27;</span></span><br><span class="line">    <span class="comment"># u&#x27;Lacie&#x27;</span></span><br><span class="line">    <span class="comment"># u&#x27;and&#x27;</span></span><br><span class="line">    <span class="comment"># u&#x27;Tillie&#x27;</span></span><br><span class="line">    <span class="comment"># u&#x27;;\nand they lived at the bottom of a well.&#x27;</span></span><br><span class="line">    <span class="comment"># u&#x27;...&#x27;</span></span><br></pre></td></tr></table></figure>
<p>（5）父节点<br> 知识点： .parent 属性</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">p = soup.p</span><br><span class="line"><span class="built_in">print</span> p.parent.name</span><br><span class="line"><span class="comment">#body</span></span><br><span class="line"></span><br><span class="line">content = soup.head.title.string</span><br><span class="line"><span class="built_in">print</span> content.parent.name</span><br><span class="line"><span class="comment">#title</span></span><br></pre></td></tr></table></figure>
<p>（6）全部父节点<br>知识点：.parents 属性<br>通过元素的 .parents 属性可以递归得到元素的所有父辈节点，例如</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">content = soup.head.title.string</span><br><span class="line"><span class="keyword">for</span> parent <span class="keyword">in</span>  content.parents:</span><br><span class="line">    <span class="built_in">print</span> parent.name</span><br><span class="line"></span><br><span class="line">title</span><br><span class="line">head</span><br><span class="line">html</span><br><span class="line">[document]</span><br></pre></td></tr></table></figure>
<p> （7）兄弟节点<br>知识点：.next_sibling  .previous_sibling 属性<br>兄弟节点可以理解为和本节点处在统一级的节点，.next_sibling 属性获取了该节点的下一个兄弟节点，.previous_sibling 则与之相反，如果节点不存在，则返回 None<br>注意：实际文档中的tag的 .next_sibling 和 .previous_sibling 属性通常是字符串或空白，因为空白或者换行也可以被视作一个节点，所以得到的结果可能是空白或者换行</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span> soup.p.next_sibling</span><br><span class="line"><span class="comment">#       实际该处为空白</span></span><br><span class="line"><span class="built_in">print</span> soup.p.prev_sibling</span><br><span class="line"><span class="comment">#None   没有前一个兄弟节点，返回 None</span></span><br><span class="line"><span class="built_in">print</span> soup.p.next_sibling.next_sibling</span><br><span class="line"><span class="comment">#&lt;p class=&quot;story&quot;&gt;Once upon a time there were three little sisters; and their names were</span></span><br><span class="line"><span class="comment">#&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#&lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt; and</span></span><br><span class="line"><span class="comment">#&lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;;</span></span><br><span class="line"><span class="comment">#and they lived at the bottom of a well.&lt;/p&gt;</span></span><br><span class="line"><span class="comment">#下一个节点的下一个兄弟节点是我们可以看到的节点</span></span><br></pre></td></tr></table></figure>
<p>（8）全部兄弟节点<br>知识点：.next_siblings  .previous_siblings 属性<br>通过 .next_siblings 和 .previous_siblings 属性可以对当前节点的兄弟节点迭代输出</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> sibling <span class="keyword">in</span> soup.a.next_siblings:</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">repr</span>(sibling))</span><br><span class="line">    <span class="comment"># u&#x27;,\n&#x27;</span></span><br><span class="line">    <span class="comment"># &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;</span></span><br><span class="line">    <span class="comment"># u&#x27; and\n&#x27;</span></span><br><span class="line">    <span class="comment"># &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;</span></span><br><span class="line">    <span class="comment"># u&#x27;; and they lived at the bottom of a well.&#x27;</span></span><br><span class="line">    <span class="comment"># None</span></span><br></pre></td></tr></table></figure>
<p>（9）前后节点<br>知识点：.next_element  .previous_element 属性<br>与 .next_sibling  .previous_sibling 不同，它并不是针对于兄弟节点，而是在所有节点，不分层次<br>比如 head 节点为</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>The Dormouse&#x27;s story<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>那么它的下一个节点便是 title，它是不分层次关系的</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span> soup.head.next_element</span><br><span class="line"><span class="comment"># &lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;</span></span><br></pre></td></tr></table></figure>
<p>（10）所有前后节点<br>知识点：.next_elements  .previous_elements 属性<br>通过 .next_elements 和 .previous_elements 的迭代器就可以向前或向后访问文档的解析内容,就好像文档正在被解析一样</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> element <span class="keyword">in</span> last_a_tag.next_elements:</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">repr</span>(element))</span><br><span class="line"><span class="comment"># u&#x27;Tillie&#x27;</span></span><br><span class="line"><span class="comment"># u&#x27;;\nand they lived at the bottom of a well.&#x27;</span></span><br><span class="line"><span class="comment"># u&#x27;\n\n&#x27;</span></span><br><span class="line"><span class="comment"># &lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;</span></span><br><span class="line"><span class="comment"># u&#x27;...&#x27;</span></span><br><span class="line"><span class="comment"># u&#x27;\n&#x27;</span></span><br><span class="line"><span class="comment"># None</span></span><br></pre></td></tr></table></figure>
<p>以上是遍历文档树的基本用法。<br>7.搜索文档树<br>（1）find_all( name , attrs , recursive , text , **kwargs )<br>find_all() 方法搜索当前tag的所有tag子节点,并判断是否符合过滤器的条件<br>1）name 参数<br>name 参数可以查找所有名字为 name 的tag,字符串对象会被自动忽略掉<br>A.传字符串<br>最简单的过滤器是字符串.在搜索方法中传入一个字符串参数,Beautiful Soup会查找与字符串完整匹配的内容,下面的例子用于查找文档中所有的<code>&lt;b&gt;</code>标签</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">soup.find_all(<span class="string">&#x27;b&#x27;</span>)</span><br><span class="line"><span class="comment"># [&lt;b&gt;The Dormouse&#x27;s story&lt;/b&gt;]</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> soup.find_all(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line"><span class="comment">#[&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;, &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;, &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span></span><br></pre></td></tr></table></figure>
<p>B.传正则表达式<br>如果传入正则表达式作为参数,Beautiful Soup会通过正则表达式的 match() 来匹配内容.下面例子中找出所有以b开头的标签,这表示<code>&lt;body&gt;</code>和<code>&lt;b&gt;</code>标签都应该被找到</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="keyword">import</span> re</span><br><span class="line">&gt;&gt;&gt;<span class="keyword">for</span> tag <span class="keyword">in</span> soup.find_all(re.<span class="built_in">compile</span>(<span class="string">&quot;^b&quot;</span>)):</span><br><span class="line"><span class="meta">... </span>   <span class="built_in">print</span>(tag.name)</span><br><span class="line">body</span><br><span class="line">b</span><br></pre></td></tr></table></figure>
<p>C.传列表<br>如果传入列表参数,Beautiful Soup会将与列表中任一元素匹配的内容返回.下面代码找到文档中所有<code>&lt;a&gt;</code>标签和<code>&lt;b&gt;</code>标签</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">soup.find_all([<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>])</span><br><span class="line"><span class="comment"># [&lt;b&gt;The Dormouse&#x27;s story&lt;/b&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span></span><br></pre></td></tr></table></figure>
<p>D.传 True<br>True 可以匹配任何值,下面代码查找到所有的tag,但是不会返回字符串节点</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">for tag in soup.find_all(True):</span><br><span class="line">    print(tag.name)</span><br><span class="line"># html</span><br><span class="line"># head</span><br><span class="line"># title</span><br><span class="line"># body</span><br><span class="line"># p</span><br><span class="line"># b</span><br><span class="line"># p</span><br><span class="line"># a</span><br><span class="line"># a</span><br></pre></td></tr></table></figure>
<p>E.传方法<br>如果没有合适过滤器,那么还可以定义一个方法,方法只接受一个元素参数 [4] ,如果这个方法返回 True 表示当前元素匹配并且被找到,如果不是则反回 False<br>下面方法校验了当前元素,如果包含 class 属性却不包含 id 属性,那么将返回 True:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">has_class_but_no_id</span>(<span class="params">tag</span>):</span><br><span class="line">    <span class="keyword">return</span> tag.has_attr(<span class="string">&#x27;class&#x27;</span>) <span class="keyword">and</span> <span class="keyword">not</span> tag.has_attr(<span class="string">&#x27;id&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>将这个方法作为参数传入 find_all() 方法,将得到所有<code>&lt;p&gt;</code>标签:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">soup.find_all(has_class_but_no_id)</span><br><span class="line"><span class="comment"># [&lt;p class=&quot;title&quot;&gt;&lt;b&gt;The Dormouse&#x27;s story&lt;/b&gt;&lt;/p&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;p class=&quot;story&quot;&gt;Once upon a time there were...&lt;/p&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;]</span></span><br></pre></td></tr></table></figure>
<p>2）keyword 参数<br>注意：如果一个指定名字的参数不是搜索内置的参数名,搜索时会把该参数当作指定名字tag的属性来搜索,如果包含一个名字为 id 的参数,Beautiful Soup会搜索每个tag的”id”属性</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>soup.find_all(<span class="built_in">id</span>=<span class="string">&#x27;link2&#x27;</span>)</span><br><span class="line">[&lt;a <span class="keyword">class</span>=<span class="string">&quot;sister&quot;</span> href=<span class="string">&quot;http://example.com/lacie&quot;</span> <span class="built_in">id</span>=<span class="string">&quot;link2&quot;</span>&gt;Lacie&lt;/a&gt;]</span><br></pre></td></tr></table></figure>
<p>如果传入 href 参数,Beautiful Soup会搜索每个tag的”href”属性</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>soup.find_all(href=re.<span class="built_in">compile</span>(<span class="string">&quot;elsie&quot;</span>))</span><br><span class="line">[&lt;a <span class="keyword">class</span>=<span class="string">&quot;sister&quot;</span> href=<span class="string">&quot;http://example.com/elsie&quot;</span> <span class="built_in">id</span>=<span class="string">&quot;link1&quot;</span>&gt;Elsie&lt;/a&gt;]</span><br></pre></td></tr></table></figure>
<p>使用多个指定名字的参数可以同时过滤tag的多个属性</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>soup.find_all(href=re.<span class="built_in">compile</span>(<span class="string">&quot;elsie&quot;</span>), <span class="built_in">id</span>=<span class="string">&#x27;link1&#x27;</span>)</span><br><span class="line">[&lt;a <span class="keyword">class</span>=<span class="string">&quot;sister&quot;</span> href=<span class="string">&quot;http://example.com/elsie&quot;</span> <span class="built_in">id</span>=<span class="string">&quot;link1&quot;</span>&gt;three&lt;/a&gt;]</span><br></pre></td></tr></table></figure>
<p>在这里我们想用 class 过滤，不过 class 是 python 的关键词，这怎么办？加个下划线就可以</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>soup.find_all(<span class="string">&quot;a&quot;</span>, class_=<span class="string">&quot;sister&quot;</span>)</span><br><span class="line">[&lt;a <span class="keyword">class</span>=<span class="string">&quot;sister&quot;</span> href=<span class="string">&quot;http://example.com/elsie&quot;</span> <span class="built_in">id</span>=<span class="string">&quot;link1&quot;</span>&gt;Elsie&lt;/a&gt;,</span><br><span class="line">&lt;a <span class="keyword">class</span>=<span class="string">&quot;sister&quot;</span> href=<span class="string">&quot;http://example.com/lacie&quot;</span> <span class="built_in">id</span>=<span class="string">&quot;link2&quot;</span>&gt;Lacie&lt;/a&gt;,</span><br><span class="line">&lt;a <span class="keyword">class</span>=<span class="string">&quot;sister&quot;</span> href=<span class="string">&quot;http://example.com/tillie&quot;</span> <span class="built_in">id</span>=<span class="string">&quot;link3&quot;</span>&gt;Tillie&lt;/a&gt;]</span><br></pre></td></tr></table></figure>
<p>有些tag属性在搜索不能使用,比如HTML5中的 data-* 属性</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>data_soup = BeautifulSoup(<span class="string">&#x27;&lt;div data-foo=&quot;value&quot;&gt;foo!&lt;/div&gt;&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>data_soup.find_all(data-foo=<span class="string">&quot;value&quot;</span>)</span><br><span class="line">SyntaxError: keyword can<span class="string">&#x27;t be an expression</span></span><br></pre></td></tr></table></figure>
<p>但是可以通过 find_all() 方法的 attrs 参数定义一个字典参数来搜索包含特殊属性的tag</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>data_soup.find_all(attrs=&#123;<span class="string">&quot;data-foo&quot;</span>: <span class="string">&quot;value&quot;</span>&#125;)</span><br><span class="line">[&lt;div data-foo=<span class="string">&quot;value&quot;</span>&gt;foo!&lt;/div&gt;]</span><br></pre></td></tr></table></figure>
<p>3）text 参数<br>通过 text 参数可以搜搜文档中的字符串内容.与 name 参数的可选值一样, text 参数接受 字符串 , 正则表达式 , 列表, True</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">soup.find_all(text=<span class="string">&quot;Elsie&quot;</span>)</span><br><span class="line"><span class="comment"># [u&#x27;Elsie&#x27;]</span></span><br><span class="line"> </span><br><span class="line">soup.find_all(text=[<span class="string">&quot;Tillie&quot;</span>, <span class="string">&quot;Elsie&quot;</span>, <span class="string">&quot;Lacie&quot;</span>])</span><br><span class="line"><span class="comment"># [u&#x27;Elsie&#x27;, u&#x27;Lacie&#x27;, u&#x27;Tillie&#x27;]</span></span><br><span class="line"> </span><br><span class="line">soup.find_all(text=re.<span class="built_in">compile</span>(<span class="string">&quot;Dormouse&quot;</span>))</span><br><span class="line">[<span class="string">u&quot;The Dormouse&#x27;s story&quot;</span>, <span class="string">u&quot;The Dormouse&#x27;s story&quot;</span>]</span><br></pre></td></tr></table></figure>
<p>4）limit 参数<br>find_all() 方法返回全部的搜索结构,如果文档树很大那么搜索会很慢.如果我们不需要全部结果,可以使用 limit 参数限制返回结果的数量.效果与SQL中的limit关键字类似,当搜索到的结果数量达到 limit 的限制时,就停止搜索返回结果.<br>文档树中有3个tag符合搜索条件,但结果只返回了2个,因为我们限制了返回数量</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">soup.find_all(<span class="string">&quot;a&quot;</span>, limit=<span class="number">2</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;]</span></span><br></pre></td></tr></table></figure>
<p>5）recursive 参数<br>调用tag的 find_all() 方法时,Beautiful Soup会检索当前tag的所有子孙节点,如果只想搜索tag的直接子节点,可以使用参数 recursive&#x3D;False .<br>一段简单的文档:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span></span><br><span class="line">   The Dormouse&#x27;s story</span><br><span class="line">  <span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>是否使用 recursive 参数的搜索结果:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">soup.html.find_all(<span class="string">&quot;title&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;]</span></span><br><span class="line"> </span><br><span class="line">soup.html.find_all(<span class="string">&quot;title&quot;</span>, recursive=<span class="literal">False</span>)</span><br><span class="line"><span class="comment"># []</span></span><br></pre></td></tr></table></figure>
<p>（2）find( name , attrs , recursive , text , **kwargs )</p>
<blockquote>
<p>它与 find_all() 方法唯一的区别是 find_all() 方法的返回结果是值包含一个元素的列表,而 find() 方法直接返回结果</p>
</blockquote>
<p>（3）find_parents()  find_parent()</p>
<blockquote>
<p>find_all() 和 find() 只搜索当前节点的所有子节点,孙子节点等. find_parents() 和 find_parent() 用来搜索当前节点的父辈节点,搜索方法与普通tag的搜索方法相同,搜索文档搜索文档包含的内容</p>
</blockquote>
<p>（4）find_next_siblings()  find_next_sibling()</p>
<blockquote>
<p>这2个方法通过 .next_siblings 属性对当 tag 的所有后面解析的兄弟 tag 节点进行迭代, find_next_siblings() 方法返回所有符合条件的后面的兄弟节点,find_next_sibling() 只返回符合条件的后面的第一个tag节点</p>
</blockquote>
<p>（5）find_previous_siblings()  find_previous_sibling()</p>
<blockquote>
<p>这2个方法通过 .previous_siblings 属性对当前 tag 的前面解析的兄弟 tag 节点进行迭代, find_previous_siblings() 方法返回所有符合条件的前面的兄弟节点, find_previous_sibling() 方法返回第一个符合条件的前面的兄弟节点</p>
</blockquote>
<p>（6）find_all_next()  find_next()</p>
<blockquote>
<p>这2个方法通过 .next_elements 属性对当前 tag 的之后的 tag 和字符串进行迭代, find_all_next() 方法返回所有符合条件的节点, find_next() 方法返回第一个符合条件的节点</p>
</blockquote>
<p>（7）find_all_previous() 和 find_previous()</p>
<blockquote>
<p>这2个方法通过 .previous_elements 属性对当前节点前面的 tag 和字符串进行迭代, find_all_previous() 方法返回所有符合条件的节点, find_previous()方法返回第一个符合条件的节点</p>
</blockquote>
<p>注：以上（2）（3）（4）（5）（6）（7）方法参数用法与 find_all() 完全相同，原理均类似，在此不再赘述。<br>8.CSS选择器<br>我们在写 CSS 时，标签名不加任何修饰，类名前加点，id名前加 #，在这里我们也可以利用类似的方法来筛选元素，用到的方法是 soup.select()，返回类型是 list</p>
<p>（1）通过标签名查找</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span> soup.select(<span class="string">&#x27;title&#x27;</span>) </span><br><span class="line">[&lt;title&gt;The Dormouse<span class="string">&#x27;s story&lt;/title&gt;]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt;&gt;&gt; print soup.select(&#x27;</span>a<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">[&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;, &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;, &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt;&gt;&gt; print soup.select(&#x27;</span><span class="string">b&#x27;)</span></span><br><span class="line"><span class="string">[&lt;b&gt;The Dormouse&#x27;</span>s story&lt;/b&gt;]</span><br></pre></td></tr></table></figure>
<p>（2）通过类名查找</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span> soup.select(<span class="string">&#x27;.sister&#x27;</span>)</span><br><span class="line"><span class="comment">#[&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;, &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;, &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span></span><br></pre></td></tr></table></figure>
<p>（3）通过 id 名查找</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span> soup.select(<span class="string">&#x27;#link1&#x27;</span>)</span><br><span class="line"><span class="comment">#[&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;]</span></span><br></pre></td></tr></table></figure>
<p>（4）组合查找<br>组合查找即和写 class 文件时，标签名与类名、id名进行的组合原理是一样的，例如查找 p 标签中，id 等于 link1的内容，二者需要用空格分开</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span> soup.select(<span class="string">&#x27;p #link1&#x27;</span>)</span><br><span class="line"><span class="comment">#[&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;]</span></span><br></pre></td></tr></table></figure>
<p>直接子标签查找</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span> soup.select(<span class="string">&quot;head &gt; title&quot;</span>)</span><br><span class="line"><span class="comment">#[&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;]</span></span><br></pre></td></tr></table></figure>
<p>（5）属性查找<br>查找时还可以加入属性元素，属性需要用中括号括起来，注意属性和标签属于同一节点，所以中间不能加空格，否则会无法匹配到。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span> soup.select(<span class="string">&#x27;a[class=&quot;sister&quot;]&#x27;</span>)</span><br><span class="line"><span class="comment">#[&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;, &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;, &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> soup.select(<span class="string">&#x27;a[href=&quot;http://example.com/elsie&quot;]&#x27;</span>)</span><br><span class="line"><span class="comment">#[&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;]</span></span><br></pre></td></tr></table></figure>
<p>同样，属性仍然可以与上述查找方式组合，不在同一节点的空格隔开，同一节点的不加空格</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span> soup.select(<span class="string">&#x27;p a[href=&quot;http://example.com/elsie&quot;]&#x27;</span>)</span><br><span class="line"><span class="comment">#[&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;]</span></span><br></pre></td></tr></table></figure>
<p>以上的 select 方法返回的结果都是列表形式，可以遍历形式输出，然后用 get_text() 方法来获取它的内容。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(soup.select(<span class="string">&#x27;title&#x27;</span>)))</span><br><span class="line"><span class="built_in">print</span> soup.select(<span class="string">&#x27;title&#x27;</span>)[<span class="number">0</span>].get_text()</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> title <span class="keyword">in</span> soup.select(<span class="string">&#x27;title&#x27;</span>):</span><br><span class="line">    <span class="built_in">print</span> title.get_text()</span><br></pre></td></tr></table></figure>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>本篇内容比较多，把 Beautiful Soup 的方法进行了大部分整理和总结，不过这还不算完全，仍然有 Beautiful Soup 的修改删除功能，不过这些功能用得比较少，只整理了查找提取的方法，希望对大家有帮助！小伙伴们加油！<br>熟练掌握了 Beautiful Soup，一定会给你带来太多方便，加油吧！</p>
]]></content>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>Blazor-WebAssembly</title>
    <url>/2021/01/04/Blazor-WebAssembly/</url>
    <content><![CDATA[<span id="more"></span>

<h2 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h2><h3 id="Blazor-WebAssembly"><a href="#Blazor-WebAssembly" class="headerlink" title="Blazor WebAssembly"></a>Blazor WebAssembly</h3><blockquote>
<p>Blazor WebAssembly 是单页应用 (SPA) 框架，用于使用 .NET 生成交互式客户端 Web 应用。 Blazor WebAssembly 使用无插件或将代码重新编译为其他语言的开放式 Web 标准。 Blazor WebAssembly 适用于所有新式 Web 浏览器，包括移动浏览器。</p>
</blockquote>
<h3 id="Blazor"><a href="#Blazor" class="headerlink" title="Blazor"></a>Blazor</h3><blockquote>
<p>Blazor 是一个使用 .NET 生成交互式客户端 Web UI 的框架。使用 C# 代替 JavaScript 来编写代码，创建信息丰富的交互式 UI，共享使用 .NET 编写的服务器端和客户端应用逻辑。</p>
</blockquote>
<h3 id="WebAssembly"><a href="#WebAssembly" class="headerlink" title="WebAssembly"></a>WebAssembly</h3><blockquote>
<p>WebAssembly（缩写为 wasm），是针对快速下载和最大执行速度优化的压缩字节码格式。 WebAssembly 是开放的 Web 标准，支持用于无插件的 Web 浏览器。通过 JavaScript（称为 JavaScript 互操作性，通常简称为 JavaScript 互操作或 JS 互操作）访问浏览器的完整功能 。 通过浏览器中的 WebAssembly 执行的 .NET 代码在浏览器的 JavaScript 沙盒中运行，沙盒提供的保护可防御客户端计算机上的恶意操作。</p>
</blockquote>
<p>Razor 组件文件名要求首字母大写，文件以razor为后缀。</p>
]]></content>
  </entry>
  <entry>
    <title>Docker</title>
    <url>/2019/06/07/Docker/</url>
    <content><![CDATA[<span id="more"></span>

<h1 id="部署-nginx"><a href="#部署-nginx" class="headerlink" title="部署 nginx"></a>部署 nginx</h1><ul>
<li>仓库查找镜像 <code>docker search nginx</code></li>
<li>拉取官网镜像 <code>docker pull nginx</code></li>
<li>查看本地镜像 <code>docker images</code></li>
<li>启动所需容器 <code>docker run -d -p 80:80 nginx</code></li>
<li>80端口打开</li>
</ul>
]]></content>
      <tags>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux</title>
    <url>/2019/07/29/Linux/</url>
    <content><![CDATA[<p>Linux Frequently Asked Questions</p>
<span id="more"></span>

<h1 id="yum"><a href="#yum" class="headerlink" title="yum"></a>yum</h1><p>查看yum源Java包<br>yum list <em>java</em></p>
<h2 id="Linux-基础"><a href="#Linux-基础" class="headerlink" title="Linux 基础"></a>Linux 基础</h2><p><a href="#%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95">文件目录</a></p>
<h2 id="使用nohup-和-amp-让命令后台执行"><a href="#使用nohup-和-amp-让命令后台执行" class="headerlink" title="使用nohup 和 &amp; 让命令后台执行"></a>使用nohup 和 &amp; 让命令后台执行</h2><ul>
<li><a href="https://www.cnblogs.com/jinxiao-pu/p/9131057.html">https://www.cnblogs.com/jinxiao-pu/p/9131057.html</a></li>
<li><a href="https://www.jb51.net/article/169783.htm">Linux nohup实现后台运行程序及查看（nohup与&amp;）</a></li>
</ul>
<p><a href="https://ywnz.com/linuxyffq/4544.html">在RHEL 8&#x2F;CentOS 8上安装LEMP（Nginx、MariaDB、PHP7.2）的方法</a></p>
<p><a href="https://opsx.alibaba.com/mirror/search?q=dnf&lang=zh-CN">https://opsx.alibaba.com/mirror/search?q=dnf&amp;lang=zh-CN</a></p>
<h2 id="文件目录"><a href="#文件目录" class="headerlink" title="文件目录"></a>文件目录</h2><p><img src="/img/linux/%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.png" alt="目录结构"></p>
<table>
<thead>
<tr>
<th>根目录</th>
<th>-</th>
<th>-</th>
</tr>
</thead>
<tbody><tr>
<td>bin -&gt; usr&#x2F;bin</td>
<td>存放二进制可执行文件(ls,cat,mkdir等)，常用命令 普通用户命令</td>
<td></td>
</tr>
<tr>
<td>boot</td>
<td>系统启动相关文件</td>
<td></td>
</tr>
<tr>
<td>dev</td>
<td>设备文件</td>
<td></td>
</tr>
<tr>
<td>etc</td>
<td>存放系统管理和配置文件</td>
<td></td>
</tr>
<tr>
<td>home</td>
<td>普通用户家目录 存放所有用户文件的根目录，是用户主目录的基点</td>
<td></td>
</tr>
<tr>
<td>lib -&gt; usr&#x2F;lib</td>
<td>系统库文件 存放着和系统运行相关的库文件</td>
<td></td>
</tr>
<tr>
<td>lib64 -&gt; usr&#x2F;lib64</td>
<td></td>
<td></td>
</tr>
<tr>
<td>media</td>
<td>媒介目录</td>
<td></td>
</tr>
<tr>
<td>mnt</td>
<td>临时挂载目录 系统管理员安装临时文件系统的安装点，系统提供这个目录是让用户临时挂载其他的文件系统；</td>
<td></td>
</tr>
<tr>
<td>proc</td>
<td>虚拟文件系统目录，是系统内存的映射。可直接访问这个目录来获取系统信息；</td>
<td></td>
</tr>
<tr>
<td>root</td>
<td>root的Home</td>
<td></td>
</tr>
<tr>
<td>run</td>
<td>临时文件</td>
<td></td>
</tr>
<tr>
<td>sbin -&gt; usr&#x2F;sbin</td>
<td>root用户命令</td>
<td></td>
</tr>
<tr>
<td>srv</td>
<td>服务产生文件</td>
<td></td>
</tr>
<tr>
<td>sys</td>
<td>系统内核</td>
<td></td>
</tr>
<tr>
<td>tmp</td>
<td>临时目录，用于存放各种临时文件，是公用的临时文件存储点；</td>
<td></td>
</tr>
<tr>
<td>usr</td>
<td>程序目录</td>
<td></td>
</tr>
<tr>
<td>var</td>
<td>存放日志 用于存放运行时需要改变数据的文件，也是某些大文件的溢出区，比方说各种服务的日志文件（系统启动日志等。）等</td>
<td></td>
</tr>
</tbody></table>
<ul>
<li>&#x2F;lost+found 这个目录平时是空的，系统非正常关机而留下“无家可归”的文件（windows下叫什么.chk）就在这里。</li>
<li>&#x2F;opt 额外安装的可选应用程序包所放置的位置。一般情况下，我们可以把tomcat等都安装到这里；</li>
<li>&#x2F;proc 系统启动的进程文件<ul>
<li>Linux 内核的窗口，只存在于内存中，并不占用磁盘空间</li>
<li>进程信息：进程项、进程参数列表、进程环境、进程可执行文件、进程文件描述符、进程内存统计信息等</li>
<li>硬件信息：CPU信息、设备信息、PCI总线信息、串口信息等</li>
<li>内核信息：版本信息、主机名与与域名信息、内存使用等</li>
<li>设备、挂载点与文件系统</li>
</ul>
</li>
</ul>
<h2 id="Linux-Setting"><a href="#Linux-Setting" class="headerlink" title="Linux Setting"></a>Linux Setting</h2><h3 id="DNF"><a href="#DNF" class="headerlink" title="DNF"></a>DNF</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># /etc/yum.repos.d/dnf.repo</span></span><br><span class="line">wget https://mirrors.aliyun.com/centos/7.5.1804/extras/x86_64/Packages/centos-release-yum4-1-2.el7.centos.noarch.rpm</span><br><span class="line">yum install centos-release-yum4-1-2.el7.centos.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># install DNF</span></span><br><span class="line">yum install dnf</span><br><span class="line">dnf upgrade</span><br></pre></td></tr></table></figure>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">dnf -y groupinstall <span class="string">&quot;Development Tools&quot;</span></span><br><span class="line">dnf -y install bzip2-devel sqlite-devel readline-devel libffi-devel systemtap-sdt-devel openssl-static  lzma tk-devel xz-devel  ncurses-devel gdbm-devel  gcc</span><br><span class="line"><span class="comment"># zlib 实现 gzip 压缩解压缩功能</span></span><br><span class="line"><span class="comment"># pcre 实现配置文件里的正则表达式解析功能</span></span><br><span class="line"><span class="comment"># openssl 实现 SSL 功能</span></span><br><span class="line">dnf -y install zlib zlib-devel openssl openssl-devel pcre pcre-devel</span><br></pre></td></tr></table></figure>

<h2 id="文件校验"><a href="#文件校验" class="headerlink" title="文件校验"></a>文件校验</h2><p>linux</p>
<p>md5sum hero.png<br>fefd01c9db6e3e83b978eff1b7a67c02  hero.png</p>
<p>sha1sum hero.png<br>f1e929db9cef34a8786ee4b6246fb739566c799d  hero.png</p>
<p>sha256sum hero.png<br>5b654b2297f17d9106388db31c1190240cfb359144925e892468b40d692c780f  hero.png</p>
<p>windows</p>
<p>E:&gt;certutil -hashfile hero.png md5<br>MD5 哈希(文件 hero.png):<br>fefd01c9db6e3e83b978eff1b7a67c02<br>CertUtil: -hashfile 命令成功完成。</p>
<p>E:&gt;certutil -hashfile hero.png SHA1<br>SHA1 哈希(文件 hero.png):<br>f1e929db9cef34a8786ee4b6246fb739566c799d<br>CertUtil: -hashfile 命令成功完成。</p>
<p>E:&gt;certutil -hashfile hero.png SHA256<br>SHA256 哈希(文件 hero.png):<br>5b654b2297f17d9106388db31c1190240cfb359144925e892468b40d692c780f<br>CertUtil: -hashfile 命令成功完成。</p>
]]></content>
      <tags>
        <tag>FAQ</tag>
      </tags>
  </entry>
  <entry>
    <title>Office-Excel</title>
    <url>/2021/07/26/Office-Excel/</url>
    <content><![CDATA[<span id="more"></span>

<h3 id="EXCEL-批量添加图片"><a href="#EXCEL-批量添加图片" class="headerlink" title="EXCEL 批量添加图片"></a>EXCEL 批量添加图片</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;图片链接&quot;</span> <span class="attr">height</span>=<span class="string">&quot;42&quot;</span> <span class="attr">width</span>=<span class="string">&quot;42&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p>宽高可提前修改为对应值<br>复制html文本，选择性粘贴”，选择Unicode文本。</p>
<p>可用于条码的批量生成，早期有规律的网络图片爬虫。</p>
<p>实例网址 <a href="https://image-charts.com/chart?chs=150x150&cht=qr&chl=Hello%20world&choe=UTF-8">https://image-charts.com/chart?chs=150x150&amp;cht=qr&amp;chl=Hello%20world&amp;choe=UTF-8</a></p>
<h3 id="EXCEL-图片居中"><a href="#EXCEL-图片居中" class="headerlink" title="EXCEL 图片居中"></a>EXCEL 图片居中</h3><figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Sub</span> dq()</span><br><span class="line"><span class="keyword">Dim</span> shp <span class="keyword">As</span> Shape</span><br><span class="line"><span class="keyword">For</span> <span class="keyword">Each</span> shp <span class="keyword">In</span> ActiveSheet.Shapes</span><br><span class="line">shp.Left = (shp.TopLeftCell.Width - shp.Width) / <span class="number">2</span> + shp.TopLeftCell.Left</span><br><span class="line">shp.Top = (shp.TopLeftCell.Height - shp.Height) / <span class="number">2</span> + shp.TopLeftCell.Top</span><br><span class="line"><span class="keyword">Next</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>SSH 配置</title>
    <url>/2018/06/11/SSH/</url>
    <content><![CDATA[<span id="more"></span>

<h2 id="口令登录"><a href="#口令登录" class="headerlink" title="口令登录"></a>口令登录</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ssh [-p 22] [user@]host</span><br></pre></td></tr></table></figure>

<p>说明：</p>
<ul>
<li>默认端口22可省略</li>
<li>用户名与本地用户名相同时可省略</li>
</ul>
<h2 id="公钥登录"><a href="#公钥登录" class="headerlink" title="公钥登录"></a>公钥登录</h2><pre><code>1. 生成公钥
</code></pre>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 格式 </span></span><br><span class="line"><span class="comment"># ssh-keygen -t rsa -C &quot;通常为邮箱&quot; -f &quot;私钥文件绝对路径&quot;</span></span><br><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure>

<p>说明：</p>
<ul>
<li>私钥口令 passphrase，若担心私钥的安全，设置一个</li>
<li>公钥 id_rsa.pub，私钥 id_rsa<ol start="2">
<li>复制公钥至主机</li>
</ol>
</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> pub_file_path | ssh  root@host <span class="string">&#x27;cat &gt;&gt; .ssh/authorized_keys&#x27;</span></span><br><span class="line"><span class="comment"># 首次登录使用，覆盖已有的 id_rsa 之后即可无密码登录，如果设置了 passphrase 登录时需要输入 passphrase</span></span><br><span class="line">ssh-keygen; <span class="built_in">cat</span> ~/.ssh/id_*.pub | ssh  root@host <span class="string">&#x27;cat &gt;&gt; .ssh/authorized_keys&#x27;</span>; ssh user@host</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">host ecs（主机别名）</span><br><span class="line">HostName 主机地址</span><br><span class="line">User 用户名</span><br><span class="line">Port 22（sshd 端口号）</span><br><span class="line">IdentitiesOnly yes</span><br><span class="line">IdentityFile 私钥路径</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">PermitRootLogin yes</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>Screenshot 截图其实很简单</title>
    <url>/2019/05/31/Screenshot/</url>
    <content><![CDATA[<blockquote>
<p>截图是现代数字用户人人必会的技能，掌握一种或多种截图方法有助于在使用数字产品中避免一些琐碎的问题。在问题咨询、操作记录、问题复现等有着消除行业隔阂，快速描述的巨大的作用。</p>
</blockquote>
<span id="more"></span>

<h3 id="Windows-截图-——-截图其实不需要装软件"><a href="#Windows-截图-——-截图其实不需要装软件" class="headerlink" title="Windows 截图 —— 截图其实不需要装软件"></a>Windows 截图 —— 截图其实不需要装软件</h3><ul>
<li>PrintScreen （全屏截图）</li>
<li>Win + Shift + s （Windows 新版截图）<br>如果没有，需要更新系统啦</li>
</ul>
<h3 id="Snipaste-——-Window-平台最好的截图"><a href="#Snipaste-——-Window-平台最好的截图" class="headerlink" title="Snipaste —— Window 平台最好的截图"></a>Snipaste —— Window 平台最好的截图</h3><p><a href="%22https://www.snipaste.com/%22">Snipaste 官网</a></p>
<ul>
<li>F1<br>有时候会被个别软件的F1帮助占用</li>
<li>设置 PrintScreen，截图就应该用截图键</li>
</ul>
<ol>
<li>任务栏鼠标右击 Snipaste 图标</li>
<li>鼠标左键点击“首选项”按钮</li>
<li>鼠标左键点击“快捷键”按钮</li>
<li>鼠标左键点击“F1”文本</li>
<li>按 PrintScreen 键，“F1”将变为“PrtSC”</li>
<li>点 PrintScreen 键，开始截图</li>
<li>点 F1 键，照常查看帮助</li>
</ol>
<h3 id="Chrome-——-相当不稳定"><a href="#Chrome-——-相当不稳定" class="headerlink" title="Chrome —— 相当不稳定"></a>Chrome —— 相当不稳定</h3><ul>
<li>操作步骤</li>
</ul>
<ol>
<li>打开开发者工具（F12），或者在页面任何地方点击鼠标右键，在弹出菜单中选择“检查（Inspect）”选项。</li>
<li>使用快捷键<code>Ctrl/Command + Shift + P</code>打开命令行（command palette）。</li>
<li>键入“Screenshot”</li>
<li>根据字面含义，选择Capture为首的截图操作，其中<code>Capture full size screenshot</code>意思是截取整个网页。</li>
</ol>
<h3 id="QQ-x2F-TIM-截图-——-上个世纪的截图软件"><a href="#QQ-x2F-TIM-截图-——-上个世纪的截图软件" class="headerlink" title="QQ&#x2F;TIM 截图 —— 上个世纪的截图软件"></a>QQ&#x2F;TIM 截图 —— 上个世纪的截图软件</h3><ul>
<li>Ctrl + Alt + A</li>
</ul>
]]></content>
      <tags>
        <tag>新手技能</tag>
      </tags>
  </entry>
  <entry>
    <title>URL Protocol</title>
    <url>/2021/08/10/URL_Protocol/</url>
    <content><![CDATA[<span id="more"></span>

<p>C#</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 为指定程序注册URL Protocol,方便浏览器调用</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;ProtocolName&quot;&gt;</span>协议名称<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;path&quot;&gt;</span>程序的完整路径<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;Exists&quot;&gt;</span>写入前存在状态<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;Override&quot;&gt;</span>如果存在是否重写数据，默认 false 不重写<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;exception cref=&quot;ArgumentException&quot;&gt;</span>参数异常<span class="doctag">&lt;/exception&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">RegisterUrlProtocol</span>(<span class="params"><span class="built_in">string</span> ProtocolName, <span class="built_in">string</span> path, <span class="keyword">out</span> <span class="built_in">bool</span> Exists, <span class="built_in">bool</span> Override = <span class="literal">false</span></span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">string</span>.IsNullOrWhiteSpace(ProtocolName))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentException(<span class="string">&quot;协议名称为空！！！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Microsoft.Win32.RegistryKey key = Microsoft.Win32.Registry.ClassesRoot.OpenSubKey(ProtocolName, <span class="literal">true</span>);</span><br><span class="line">    Exists = key != <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (Exists &amp;&amp; !Override)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">string</span>.IsNullOrWhiteSpace(path))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentException(<span class="string">&quot;关联程序路径为空！！！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!File.Exists(path))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentException(<span class="string">&quot;关联程序不存在！！！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    key = key ?? Microsoft.Win32.Registry.ClassesRoot.CreateSubKey(ProtocolName);</span><br><span class="line">    key.SetValue(<span class="string">&quot;&quot;</span>, <span class="string">$&quot;<span class="subst">&#123;ProtocolName&#125;</span> Protocol&quot;</span>, Microsoft.Win32.RegistryValueKind.String);</span><br><span class="line">    key.SetValue(<span class="string">&quot;URL Protocol&quot;</span>, path, Microsoft.Win32.RegistryValueKind.String);</span><br><span class="line">    key.CreateSubKey(<span class="string">&quot;DefaultIcon&quot;</span>).SetValue(<span class="string">&quot;&quot;</span>, <span class="string">$&quot;<span class="subst">&#123;path&#125;</span>,1&quot;</span>, Microsoft.Win32.RegistryValueKind.String);</span><br><span class="line">    key.CreateSubKey(<span class="string">&quot;shell&quot;</span>).CreateSubKey(<span class="string">&quot;open&quot;</span>).CreateSubKey(<span class="string">&quot;command&quot;</span>)</span><br><span class="line">        .SetValue(<span class="string">&quot;&quot;</span>, <span class="string">$&quot;\&quot;<span class="subst">&#123;path&#125;</span>\&quot; \&quot;%1\&quot;&quot;</span>, Microsoft.Win32.RegistryValueKind.String);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>alpine</title>
    <url>/2023/05/18/alpine/</url>
    <content><![CDATA[<span id="more"></span>


]]></content>
      <tags>
        <tag>无纸化</tag>
      </tags>
  </entry>
  <entry>
    <title>汇编语言基础</title>
    <url>/2018/11/10/asm-base/</url>
    <content><![CDATA[<span id="more"></span>

<h1 id="PC-硬件的基本特征"><a href="#PC-硬件的基本特征" class="headerlink" title="PC 硬件的基本特征"></a>PC 硬件的基本特征</h1><h2 id="1、计算机存储单位"><a href="#1、计算机存储单位" class="headerlink" title="1、计算机存储单位"></a>1、计算机存储单位</h2><ol>
<li>位 bit(Binary digit))<blockquote>
<p>一个位表示 0 或 1</p>
</blockquote>
</li>
<li>字节<blockquote>
<p>一组 9 个相关的位称为字节，它代表内存储器和外部设备的一个存储单元</p>
</blockquote>
<ul>
<li>每个字节由 8 个数据位和 1 个奇偶位组成（<a href="">奇偶校验</a>）</li>
<li>一个字节中的各位从右到左是按 0 到 7 编号的</li>
<li>在存储器中的每个字节都有一个唯一的地址。第一个字节在最低的存储器单元中，编号为 0 ， 第二个字节编号为 1</li>
</ul>
</li>
<li>字<blockquote>
<p>2 字节（16位）数据项</p>
</blockquote>
</li>
<li>双字<blockquote>
<p>4 字节（32位）数据项</p>
</blockquote>
</li>
<li>匹字<blockquote>
<p>8 字节（64位）数据项</p>
</blockquote>
</li>
<li>小段<blockquote>
<p>16字节（128位）区</p>
</blockquote>
</li>
<li>千字节（KB）<blockquote>
<p>2^10等于1024字节</p>
</blockquote>
</li>
<li>兆字节（MB）<blockquote>
<p>2^20等于1048576字节</p>
</blockquote>
</li>
</ol>
<h2 id="2、二进制数系统"><a href="#2、二进制数系统" class="headerlink" title="2、二进制数系统"></a>2、二进制数系统</h2><blockquote>
<p>位的集合可以表示任何数字的值。</p>
</blockquote>
<ul>
<li>二进制数的值是由为 1 的位及其相关的位置所决定的。</li>
</ul>
<table>
<thead>
<tr>
<th>位编号</th>
<th></th>
<th>11</th>
<th>10</th>
<th>9</th>
<th>8</th>
<th></th>
<th>7</th>
<th>6</th>
<th>5</th>
<th>4</th>
<th></th>
<th>3</th>
<th>2</th>
<th>1</th>
<th>0</th>
</tr>
</thead>
<tbody><tr>
<td>位的值</td>
<td></td>
<td>1</td>
<td>1</td>
<td>1</td>
<td>1</td>
<td></td>
<td>1</td>
<td>1</td>
<td>1</td>
<td>1</td>
<td></td>
<td>1</td>
<td>1</td>
<td>1</td>
<td>1</td>
</tr>
<tr>
<td>位置的值</td>
<td></td>
<td>2048</td>
<td>1024</td>
<td>512</td>
<td>256</td>
<td></td>
<td>128</td>
<td>64</td>
<td>32</td>
<td>16</td>
<td></td>
<td>8</td>
<td>4</td>
<td>2</td>
<td>1</td>
</tr>
</tbody></table>
<h2 id="3、十六进制表示"><a href="#3、十六进制表示" class="headerlink" title="3、十六进制表示"></a>3、十六进制表示</h2><table>
<thead>
<tr>
<th align="center">十进制</th>
<th align="center">二进制</th>
<th align="center">十六进制</th>
<th align="center">峘进制</th>
<th>huán</th>
</tr>
</thead>
<tbody><tr>
<td align="center">0</td>
<td align="center">0000</td>
<td align="center">0</td>
<td align="center">零</td>
<td></td>
</tr>
<tr>
<td align="center">1</td>
<td align="center">0001</td>
<td align="center">1</td>
<td align="center">壹</td>
<td></td>
</tr>
<tr>
<td align="center">2</td>
<td align="center">0010</td>
<td align="center">2</td>
<td align="center">贰</td>
<td></td>
</tr>
<tr>
<td align="center">3</td>
<td align="center">0011</td>
<td align="center">3</td>
<td align="center">叁</td>
<td></td>
</tr>
<tr>
<td align="center">4</td>
<td align="center">0100</td>
<td align="center">4</td>
<td align="center">肆</td>
<td></td>
</tr>
<tr>
<td align="center">5</td>
<td align="center">0101</td>
<td align="center">5</td>
<td align="center">伍</td>
<td></td>
</tr>
<tr>
<td align="center">6</td>
<td align="center">0110</td>
<td align="center">6</td>
<td align="center">陆</td>
<td></td>
</tr>
<tr>
<td align="center">7</td>
<td align="center">0111</td>
<td align="center">7</td>
<td align="center">柒</td>
<td></td>
</tr>
<tr>
<td align="center">8</td>
<td align="center">1000</td>
<td align="center">8</td>
<td align="center">捌</td>
<td></td>
</tr>
<tr>
<td align="center">9</td>
<td align="center">1001</td>
<td align="center">9</td>
<td align="center">玖</td>
<td></td>
</tr>
<tr>
<td align="center">10</td>
<td align="center">1010</td>
<td align="center">A</td>
<td align="center">拾</td>
<td></td>
</tr>
<tr>
<td align="center">11</td>
<td align="center">1011</td>
<td align="center">B</td>
<td align="center">屲</td>
<td>wā</td>
</tr>
<tr>
<td align="center">12</td>
<td align="center">1100</td>
<td align="center">C</td>
<td align="center">亗</td>
<td>suì</td>
</tr>
<tr>
<td align="center">13</td>
<td align="center">1101</td>
<td align="center">D</td>
<td align="center">岌</td>
<td>jí</td>
</tr>
<tr>
<td align="center">14</td>
<td align="center">1110</td>
<td align="center">E</td>
<td align="center">岄</td>
<td>yuè</td>
</tr>
<tr>
<td align="center">15</td>
<td align="center">1111</td>
<td align="center">F</td>
<td align="center">岪</td>
<td>fú</td>
</tr>
</tbody></table>
<h2 id="4、PC-的组成"><a href="#4、PC-的组成" class="headerlink" title="4、PC 的组成"></a>4、PC 的组成</h2><blockquote>
<p>PC 的主要组成部分是它的主板。它包括<code>处理器</code>、<code>协处理器</code>、<code>主存储器</code>、<code>接插件</code>以及为可选电路卡用的<code>扩展槽</code>。这些槽和接插件为下面部件提供了出入口，比如<code>只读存储器 ROM、随机存取存储器 RAM、硬盘、CD-ROM 设备、附加的主存储器、显示设备、键盘、鼠标、并行与串行设备、声音合成器以及高速缓冲存储器等</code>。处理器利用高速缓冲存储器，减少对较低速主存储器的访问。</p>
</blockquote>
<ol>
<li><p>处理器</p>
<blockquote>
<p>处理器，也称中央处理器或 CPU ，用来完成所有的指令执行与数据处理。</p>
</blockquote>
<ul>
<li>8088</li>
</ul>
</li>
</ol>
<h3 id="段寄存器"><a href="#段寄存器" class="headerlink" title="段寄存器"></a>段寄存器</h3><table>
<thead>
<tr>
<th>标志</th>
<th>名称</th>
</tr>
</thead>
<tbody><tr>
<td>CS</td>
<td>代码段(Code Segment)</td>
</tr>
<tr>
<td>DS</td>
<td>数据段(Data Segment)</td>
</tr>
<tr>
<td>SS</td>
<td>堆栈段(Stack Segment)</td>
</tr>
<tr>
<td>ES</td>
<td>附加段指针(Extra Segment)</td>
</tr>
<tr>
<td>FS</td>
<td>附加段指针</td>
</tr>
<tr>
<td>GS</td>
<td>附加段指针</td>
</tr>
</tbody></table>
<h3 id="通用寄存器"><a href="#通用寄存器" class="headerlink" title="通用寄存器"></a>通用寄存器</h3><table>
<thead>
<tr>
<th>寄存器</th>
<th>名称</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>EAX</td>
<td>主累加器(accumulator)寄存器</td>
<td></td>
</tr>
<tr>
<td>EBX</td>
<td>基址(base)寄存器</td>
<td></td>
</tr>
<tr>
<td>ECX</td>
<td>计数(count)寄存器</td>
<td></td>
</tr>
<tr>
<td>EDX</td>
<td>数据(data)寄存器</td>
<td></td>
</tr>
<tr>
<td>EDI</td>
<td>目的变址(Destination Index)寄存器</td>
<td></td>
</tr>
<tr>
<td>ESI</td>
<td>源变址(Source Index)寄存器</td>
<td></td>
</tr>
<tr>
<td>ESP</td>
<td>堆栈指针(Stack Pointer)寄存器</td>
<td></td>
</tr>
<tr>
<td>EBP</td>
<td>基址指针(Base Pointer)寄存器</td>
<td></td>
</tr>
<tr>
<td>EIP</td>
<td>指令指针(Instruction Pointer)寄存器</td>
<td>下一条指令的偏移地址</td>
</tr>
</tbody></table>
<h3 id="标志寄存器"><a href="#标志寄存器" class="headerlink" title="标志寄存器"></a>标志寄存器</h3><table>
<thead>
<tr>
<th align="center">位编号</th>
<th align="center">符号</th>
<th>标志(Flag)</th>
<th>置位符号 1</th>
<th>复位符号 0</th>
</tr>
</thead>
<tbody><tr>
<td align="center">0</td>
<td align="center">CF</td>
<td>进位(carry)标志</td>
<td>CY(carry)</td>
<td>NY(no carry)</td>
</tr>
<tr>
<td align="center">1</td>
<td align="center">1</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">2</td>
<td align="center">PF</td>
<td>奇偶校验(parity)标志</td>
<td>PE(parity even)</td>
<td>PO(parity odd)</td>
</tr>
<tr>
<td align="center">3</td>
<td align="center">0</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">4</td>
<td align="center">AF</td>
<td>辅助进位(auxiliary carry)标志</td>
<td>AC(auxiliary carry)</td>
<td>NA(no auxiliary)</td>
</tr>
<tr>
<td align="center">5</td>
<td align="center">0</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">6</td>
<td align="center">ZF</td>
<td>零(zero)标志</td>
<td>ZR(zero)</td>
<td>NZ(no zero)</td>
</tr>
<tr>
<td align="center">7</td>
<td align="center">SF</td>
<td>符号(sign)标志</td>
<td>NG(negative)</td>
<td>PL(plus)</td>
</tr>
<tr>
<td align="center">8</td>
<td align="center">TF</td>
<td>陷阱(trap)标志</td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">9</td>
<td align="center">IF</td>
<td>中断允许(interrupt)标志</td>
<td>EI(enable interrupt)</td>
<td>DI(disable interrupt)</td>
</tr>
<tr>
<td align="center">A</td>
<td align="center">DF</td>
<td>方向(direction)标志</td>
<td>DN(down)</td>
<td>UP(up)</td>
</tr>
<tr>
<td align="center">B</td>
<td align="center">OF</td>
<td>溢出(overflow)标志</td>
<td>OV(overflow)</td>
<td>NV(no overflow)</td>
</tr>
<tr>
<td align="center">C</td>
<td align="center">IOPL</td>
<td>I&#x2F;O 特权级(I&#x2F;O Privilege Level)</td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">D</td>
<td align="center">IOPL</td>
<td>I&#x2F;O 特权级(I&#x2F;O Privilege Level)</td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">E</td>
<td align="center">NT</td>
<td>嵌套任务(Nested Task)标志</td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">F</td>
<td align="center">0</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">10</td>
<td align="center">RF</td>
<td>恢复(Resume)标志</td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">11</td>
<td align="center">VM</td>
<td>虚拟8086模式(Virtual 8086 Mode)</td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">12</td>
<td align="center">AC</td>
<td>对齐检查(Alignment Check)</td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">13</td>
<td align="center">VIF</td>
<td>虚拟中断(Virtual Interrupt)标志</td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">14</td>
<td align="center">VIP</td>
<td>虚拟中断挂起(Virtual Interrupt Pending)</td>
<td></td>
<td></td>
</tr>
<tr>
<td align="center">15</td>
<td align="center">ID</td>
<td>标志(Identification)标识</td>
<td></td>
<td></td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>Assembly</tag>
      </tags>
  </entry>
  <entry>
    <title>汇编语言</title>
    <url>/2018/11/10/asm-code/</url>
    <content><![CDATA[<span id="more"></span>

<h2 id="程序注释"><a href="#程序注释" class="headerlink" title="程序注释"></a>程序注释</h2><ul>
<li>“;”开头，右边为注释内容</li>
</ul>
<h2 id="保留字"><a href="#保留字" class="headerlink" title="保留字"></a>保留字</h2><ul>
<li>指令</li>
<li>伪操作</li>
<li>操作符</li>
<li>预定义符号</li>
</ul>
<h1 id="符号指令系统"><a href="#符号指令系统" class="headerlink" title="符号指令系统"></a>符号指令系统</h1><table>
<thead>
<tr>
<th>指令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>ADC</td>
<td>带进位加法(and with carry)</td>
</tr>
<tr>
<td>ADD</td>
<td>二进制数加法(add)</td>
</tr>
<tr>
<td>DEC</td>
<td>减一(decrease 1)</td>
</tr>
<tr>
<td>DIV</td>
<td>无符号数除法(divide)</td>
</tr>
<tr>
<td>IDIV</td>
<td>带符号数整数除法(integer divide)</td>
</tr>
<tr>
<td>IMUL</td>
<td>带符号数整数乘法(integer multiplication)</td>
</tr>
<tr>
<td>INC</td>
<td>加一(increase 1)</td>
</tr>
<tr>
<td>MUL</td>
<td>无符号数乘法(multiplication)</td>
</tr>
<tr>
<td>NEG</td>
<td>求补(negative)</td>
</tr>
<tr>
<td>SBB</td>
<td>带借位减法(substract with borrow)</td>
</tr>
<tr>
<td>SUB</td>
<td>二进制减法(substact)</td>
</tr>
<tr>
<td>XADD</td>
<td>交换并相加</td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>Assembly</tag>
      </tags>
  </entry>
  <entry>
    <title>汇编语言环境搭建</title>
    <url>/2019/07/09/asm-env/</url>
    <content><![CDATA[<span id="more"></span>

<p>DOSBOX 配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 挂载程序目录</span><br><span class="line">mount c D:\Programs_Add\ASM</span><br><span class="line"># 挂载工作目录</span><br><span class="line">mount d E:\DukeLab\ASM</span><br><span class="line"># 将程序加入 path 环境</span><br><span class="line">set path=%path%;c:\;</span><br><span class="line"># 切换到工作目录</span><br><span class="line">d:</span><br><span class="line"># 清屏</span><br><span class="line">cls</span><br></pre></td></tr></table></figure>

<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul>
<li><a href="https://www.dosbox.com/">DOSBOX 官网</a></li>
</ul>
]]></content>
      <tags>
        <tag>Assembly</tag>
      </tags>
  </entry>
  <entry>
    <title>博客环境，让我们专注写笔记</title>
    <url>/2019/09/08/blog-env/</url>
    <content><![CDATA[<p>| <a href="https://nodejs.org/">NodeJS 官网</a><br>| <a href="https://yarnpkg.com/">yarn 官网</a><br>| <a href="https://git-scm.com/">git 官网</a><br>| <a href="https://code.visualstudio.com/">VScode 官网</a></p>
<span id="more"></span>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl https://mirrors.huaweicloud.com/nodejs/v10.16.3/node-v10.16.3-win-x64.zip</span><br><span class="line"></span><br><span class="line">https://mirrors.huaweicloud.com/yarn/v1.17.3/yarn-1.17.3.msi</span><br><span class="line"><span class="variable">$git</span>=<span class="string">&#x27;2.23.0&#x27;</span>;curl (<span class="string">&#x27;https://mirrors.huaweicloud.com/git-for-windows/v&#x27;</span>+<span class="variable">$git</span>+<span class="string">&#x27;.windows.1/MinGit-&#x27;</span>+<span class="variable">$git</span>+<span class="string">&#x27;-64-bit.zip&#x27;</span>) -o (<span class="string">&#x27;MinGit-&#x27;</span>+<span class="variable">$git</span>+<span class="string">&#x27;-64-bit.zip&#x27;</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li><p>hexo </p>
</li>
<li><p>docusaurus</p>
</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">yarn global add docusaurus-init</span><br></pre></td></tr></table></figure>

<ol>
<li><p>安装 node、yarn、git、vscode</p>
</li>
<li><p>yarn global add hexo-cli</p>
</li>
<li><p>hexo init blog</p>
</li>
<li><p>配置 git 本地配置</p>
</li>
<li><p>配置 github 用户 ssh</p>
</li>
<li><p>ssh -T <a href="mailto:&#x67;&#105;&#116;&#x40;&#x67;&#x69;&#116;&#x68;&#117;&#x62;&#x2e;&#x63;&#x6f;&#x6d;">&#x67;&#105;&#116;&#x40;&#x67;&#x69;&#116;&#x68;&#117;&#x62;&#x2e;&#x63;&#x6f;&#x6d;</a></p>
</li>
<li><p>创建<code>用户名.github.io</code>仓库</p>
</li>
<li><p>git clone <code>git@github.com:用户名/用户名.github.io.git</code></p>
</li>
<li><p>将 blog 中所有文件移动至 <code>用户名.github.io</code>文件夹中</p>
</li>
<li><p>配置 config 中的 deploy 参数</p>
</li>
<li><p>hexo -d</p>
</li>
<li><p>git pull</p>
</li>
</ol>
<p><a href="https://hexo.io/">hexo 官网</a></p>
<h2 id="软件-x2F-插件"><a href="#软件-x2F-插件" class="headerlink" title="软件&#x2F;插件"></a>软件&#x2F;插件</h2><p><a href="https://nodejs.org/">NodeJS 官网</a> |<br><a href="https://code.visualstudio.com/">VSCode 官网</a> |<br><a href="https://marketplace.visualstudio.com/items?itemName=MS-CEINTL.vscode-language-pack-zh-hans">VSCode 中文插件</a> |<br><a href="https://marketplace.visualstudio.com/items?itemName=codeyu.vscode-hexo">VSCode Hexo 插件</a></p>
<ul>
<li>依次到相应官网下载相应软件并自行安装</li>
<li>插件安装时需要打开 VScode</li>
<li>shell 执行<br><code>npm install hexo-cli -g</code> 命令安装  hexo-cli</li>
</ul>
<h2 id="记事本"><a href="#记事本" class="headerlink" title="记事本"></a>记事本</h2><p>首行 .LOG</p>
]]></content>
      <tags>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>gitpage 从笔记到博客</title>
    <url>/2019/09/08/blog-gitpage/</url>
    <content><![CDATA[<h2 id="读前准备"><a href="#读前准备" class="headerlink" title="读前准备"></a>读前准备</h2><ul>
<li><input checked="" disabled="" type="checkbox"> node install</li>
<li><input checked="" disabled="" type="checkbox"> hexo project</li>
<li><input disabled="" type="checkbox"> hexo-generator-feed</li>
<li><input checked="" disabled="" type="checkbox"> hexo-deployer-git</li>
</ul>
<span id="more"></span>

<h3 id="创建-GitPage-仓库"><a href="#创建-GitPage-仓库" class="headerlink" title="创建 GitPage 仓库"></a>创建 GitPage 仓库</h3><p>登录 GitHub,在相关位置输入上文记录的内容。<a href="https://github.com/login">登录地址</a></p>
<p><img src="/img/blog/2.png" alt="GitHub 登录界面"></p>
<p>如图所示，新建仓库，输入相关信息。仓库名（用户名.github.io）为 GitPage 固定写法。<a href="https://github.com/new">新建仓库地址</a></p>
<p><img src="/img/gitpage/2.png" alt="仓库创建界面"></p>
<h3 id="配置config"><a href="#配置config" class="headerlink" title="配置config"></a>配置config</h3><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"># _config.yml</span><br><span class="line"><span class="deletion">- type</span></span><br><span class="line"><span class="addition">+ - type: git</span></span><br><span class="line"><span class="addition">+   repo: git@github.com:DukeBode/DukeBode.github.io.git</span></span><br><span class="line"><span class="addition">+   branch: master</span></span><br></pre></td></tr></table></figure>

<p><img src="/img/gitpage/4.png" alt="config配置"></p>
<p>git</p>
<ul>
<li>install</li>
</ul>
<p>GitHub</p>
<ul>
<li>账户</li>
<li>ssh 免密访问</li>
</ul>
<p>gitpage</p>
<ul>
<li>gitpage 仓库</li>
</ul>
<p>analytics</p>
<ul>
<li>confing</li>
</ul>
<p>search</p>
]]></content>
      <tags>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>blog-hexo-gitpage</title>
    <url>/2021/02/25/blog-hexo-gitpage/</url>
    <content><![CDATA[<span id="more"></span>

<p>Creating a repository for your site</p>
]]></content>
  </entry>
  <entry>
    <title>HEXO 进阶操作</title>
    <url>/2019/09/22/blog-hexo/</url>
    <content><![CDATA[<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<span id="more"></span>

<h2 id="初始化博客环境"><a href="#初始化博客环境" class="headerlink" title="初始化博客环境"></a>初始化博客环境</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure>

<h2 id="404-页面"><a href="#404-页面" class="headerlink" title="404 页面"></a>404 页面</h2><p>source 目录下新建 404.md 文件</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span><br><span class="line">location.href=&quot;https://dukebode.github.io/&quot;;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<h2 id="CNAME"><a href="#CNAME" class="headerlink" title="CNAME"></a>CNAME</h2><p>source&#x2F;CNAME</p>
<h2 id="主题设置"><a href="#主题设置" class="headerlink" title="主题设置"></a>主题设置</h2><p>theme: duke</p>
<h2 id="部署至-GitPage"><a href="#部署至-GitPage" class="headerlink" title="部署至 GitPage"></a>部署至 GitPage</h2><p>配置config</p>
<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">_config.yml</span><br><span class="line"></span><br><span class="line"><span class="deletion">- type</span></span><br><span class="line"><span class="addition">+ - type: git</span></span><br><span class="line"><span class="addition">+   repo: git@github.com:DukeBode/DukeBode.github.io.git</span></span><br><span class="line"><span class="addition">+   branch: master</span></span><br></pre></td></tr></table></figure>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装插件</span></span><br><span class="line">yarn add hexo-deployer-git</span><br><span class="line"><span class="comment"># 部署</span></span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<h2 id="git-备份"><a href="#git-备份" class="headerlink" title="git 备份"></a>git 备份</h2><p>我们将采用 gitpage 的 backup 分支来备份</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># git 仓库</span></span><br><span class="line">git init</span><br><span class="line"><span class="comment"># 添加文件</span></span><br><span class="line">git add *</span><br><span class="line"><span class="comment"># 提交至版本库</span></span><br><span class="line">git commit -m <span class="string">&quot;hexo backup&quot;</span></span><br><span class="line"><span class="comment"># 添加远程仓库</span></span><br><span class="line">git remote add origin git@github.com:DukeBode/DukeBode.github.io.git</span><br><span class="line"><span class="comment"># 创建 backup 分支</span></span><br><span class="line">git branch backup</span><br><span class="line"><span class="comment"># 切换 backup 分支</span></span><br><span class="line">git checkout backup</span><br><span class="line"><span class="comment"># 删除 master 分支</span></span><br><span class="line">git branch -d master</span><br><span class="line"><span class="comment"># 推送 backup 分支</span></span><br><span class="line">git push -u origin backup</span><br></pre></td></tr></table></figure>

<h2 id="git-恢复"><a href="#git-恢复" class="headerlink" title="git 恢复"></a>git 恢复</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b backup git@github.com:DukeBode/DukeBode.github.io.git blog</span><br></pre></td></tr></table></figure>

<h2 id="多机编写"><a href="#多机编写" class="headerlink" title="多机编写"></a>多机编写</h2><h2 id="网站地图"><a href="#网站地图" class="headerlink" title="网站地图"></a>网站地图</h2><blockquote>
<p>为搜索引擎提供搜索依据</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">yarn add hexo-generator-sitemap</span><br></pre></td></tr></table></figure>

<h2 id="RSS-订阅"><a href="#RSS-订阅" class="headerlink" title="RSS 订阅"></a>RSS 订阅</h2><blockquote>
<p>方便用户订阅</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">yarn add hexo-generator-feed</span><br></pre></td></tr></table></figure>

<h2 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h2><ul>
<li>gitalk</li>
</ul>
]]></content>
      <tags>
        <tag>blog</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>init</title>
    <url>/2021/02/19/blog-init/</url>
    <content><![CDATA[<span id="more"></span>

<h1 id="about-execution-policies"><a href="#about-execution-policies" class="headerlink" title="about_execution_policies"></a>about_execution_policies</h1><figure class="highlight ps1"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Get-ExecutionPolicy</span></span><br><span class="line"><span class="built_in">Set-ExecutionPolicy</span> <span class="literal">-ExecutionPolicy</span> RemoteSigned <span class="literal">-Scope</span> CurrentUser</span><br></pre></td></tr></table></figure>

<figure class="highlight ps1"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 检查程序版本，确认所需程序存在。</span></span><br><span class="line">node <span class="literal">-v</span>; git version; npm <span class="literal">-v</span>; npx <span class="literal">-v</span></span><br><span class="line"><span class="comment"># 创建并切换到工作目录</span></span><br><span class="line">mkdir blog; <span class="built_in">cd</span> blog</span><br><span class="line"><span class="comment"># 初始化 项目，git 仓库</span></span><br><span class="line">npx hexo init; git init</span><br><span class="line"><span class="comment"># rss,sitemap</span></span><br><span class="line">npm install hexo<span class="literal">-generator-feed</span> hexo<span class="literal">-generator-sitemap</span> hexo<span class="literal">-deployer-git</span></span><br><span class="line"><span class="comment"># 创建CNAME,404,README</span></span><br><span class="line"><span class="built_in">cd</span> source</span><br><span class="line"><span class="string">&quot;&quot;</span> &gt; CNAME</span><br><span class="line"><span class="string">&quot;---&quot;</span> &gt;&gt; <span class="number">404</span>.md; <span class="string">&quot;permalink: /404.html&quot;</span> &gt;&gt; <span class="number">404</span>.md; <span class="string">&quot;---&quot;</span> &gt;&gt; <span class="number">404</span>.md</span><br><span class="line"><span class="string">&quot;&quot;</span> &gt; README.md</span><br><span class="line"><span class="built_in">cd</span> ../</span><br><span class="line"><span class="comment"># 创建项目简介</span></span><br><span class="line"><span class="string">&quot;&quot;</span>&gt; README.md</span><br><span class="line"><span class="comment"># 为项目建立捐助方式</span></span><br><span class="line">mkdir .github;<span class="built_in">cd</span> .github;<span class="string">&quot;custom: [&#x27;https://DukeBode.github.io/sponsor&#x27;]&quot;</span> &gt; FUNDING.yml;<span class="built_in">cd</span> ../</span><br><span class="line"><span class="comment"># 安装 hexo-theme-next 主题</span></span><br><span class="line">npm install hexo<span class="literal">-theme-next</span>; <span class="built_in">cp</span> node_modules/hexo<span class="literal">-theme-next</span>/_config.yml _config.next.yml</span><br><span class="line">npm uninstall hexo<span class="literal">-theme-landscape</span></span><br><span class="line"><span class="comment"># 别名 hexo</span></span><br><span class="line"><span class="comment"># 安装 npm scripts 依赖</span></span><br><span class="line">npm install hexo<span class="literal">-cli</span></span><br></pre></td></tr></table></figure>

<h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><ul>
<li><a href="https://docs.microsoft.com/zh-cn/powershell/module/microsoft.powershell.core/about/about_execution_policies#change-the-execution-policy">Set-ExecutionPolicy</a></li>
<li></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>用 Markdown 做笔记</title>
    <url>/2019/05/31/blog-markdown/</url>
    <content><![CDATA[<p>对于一个电脑新手来讲，与其说 Markdown 是一个专门为文档而生的编程语言，还不如是个文档规范，相比 Word 的繁杂，Tex 的晦涩，它就是个非常简单的文字游戏规则。</p>
<span id="more"></span>

<blockquote>
<p>自人类文明诞生以来，我们便离不开文字记录，笔记一直是人类社会发展的重要指导和载体。随着社会的发展，环境意识的增强，越来越多的人开始尝试数字笔记，但数字笔记不想手写一样自由，在书写、阅读、交流、修改等方面存在着重大问题。</p>
</blockquote>
<h3 id=""><a href="#" class="headerlink" title=""></a></h3><p>配以 VScode 等软件可实时的生成便于阅读的文档，是现在人人应当去学的一门编程语言。</p>
]]></content>
      <tags>
        <tag>blog</tag>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>零基础建博客</title>
    <url>/2019/06/07/blog/</url>
    <content><![CDATA[<h3 id="Hexo-博客"><a href="#Hexo-博客" class="headerlink" title="Hexo 博客"></a>Hexo 博客</h3><p>Hexo 不是博客而是快速、简洁且高效的博客框架，适合任何有打字基础的人建立属于自己、完全定制的个人博客，可用于个人生活记录、学习笔记整理、连载个人小说等。</p>
<span id="more"></span>

<hr>
<h3 id="流程简介"><a href="#流程简介" class="headerlink" title="流程简介"></a>流程简介</h3><ul>
<li>前期准备：申请 GitHub 账户、创建 GitPage 仓库、配置 Git 环境、配置 Nodejs 环境</li>
<li>搭建博客：安装 Hexo-cli、搭建博客环境、设置博客主题、部署博客至 GitPage</li>
<li>博客编写：Hexo 命令、安装 VScode 插件、Markdown 编写博客</li>
</ul>
<hr>
<h3 id="申请-GitHub-账户"><a href="#申请-GitHub-账户" class="headerlink" title="申请 GitHub 账户"></a>申请 GitHub 账户</h3><p>访问 GitHub 官网 建立自己的 GitHub 帐号：<a href="https://github.com/join">注册地址</a></p>
<p><img src="/img/blog/1.png" alt="Github 注册界面"></p>
<p>请将自己在图中标记的项目中所填写的内容记录下，以便后期的操作。</p>
<p>建议用户名①尽量使用全英文字母，避免不必要的麻烦</p>
<p>举个例子，我的为：</p>
<ul>
<li>① DukeBode</li>
<li>② <a href="mailto:&#x44;&#x75;&#x6b;&#x65;&#49;&#x32;&#x33;&#64;&#x61;&#108;&#x69;&#121;&#x75;&#x6e;&#x2e;&#99;&#111;&#x6d;">&#x44;&#x75;&#x6b;&#x65;&#49;&#x32;&#x33;&#64;&#x61;&#108;&#x69;&#121;&#x75;&#x6e;&#x2e;&#99;&#111;&#x6d;</a></li>
</ul>
<p>剩余的<code>红色标记</code>请自行记录，此处仅记录重要信息</p>
<h3 id="创建-GitPage-仓库"><a href="#创建-GitPage-仓库" class="headerlink" title="创建 GitPage 仓库"></a>创建 GitPage 仓库</h3><p>登录 GitHub,在相关位置输入上文记录的内容。<a href="https://github.com/login">登录地址</a></p>
<p><img src="/img/blog/2.png" alt="GitHub 登录界面"></p>
<p>如图所示，新建仓库，输入相关信息。仓库名（用户名.github.io）为 GitPage 固定写法。<a href="https://github.com/new">新建仓库地址</a></p>
<p><img src="/img/blog/3.png" alt="仓库创建界面"></p>
<p>说明：<br><code>黄色标记</code>会自动显示对应的个人信息，<code>绿色标记</code>需要自己填写，填写时请勿遗漏点等字母或符号。</p>
<h3 id="配置-Git-环境"><a href="#配置-Git-环境" class="headerlink" title="配置 Git 环境"></a>配置 Git 环境</h3><p>不是<code>中国地区</code>的<code> Windows 系统</code>用户请自行阅读官网文档安装，切记配置 path 环境。 <a href="https://git-scm.com/downloads">git 官方下载地址</a></p>
<p><img src="/img/blog/4.png" alt="Git 下载界面"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;①&quot;</span><br><span class="line"></span><br><span class="line">git config --global user.email ②</span><br><span class="line"></span><br><span class="line">ssh-keygen -t rsa -C &quot;②&quot;</span><br></pre></td></tr></table></figure>

<h3 id="配置-Nodejs-环境"><a href="#配置-Nodejs-环境" class="headerlink" title="配置 Nodejs 环境"></a>配置 Nodejs 环境</h3><p><a href="">NodeJS 官网</a></p>
<h3 id="安装-Hexo-cli"><a href="#安装-Hexo-cli" class="headerlink" title="安装 Hexo-cli"></a>安装 Hexo-cli</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>

<h3 id="搭建博客环境"><a href="#搭建博客环境" class="headerlink" title="搭建博客环境"></a>搭建博客环境</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo init blog</span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line"><span class="comment"># </span></span><br><span class="line">npm install</span><br><span class="line"><span class="comment"># </span></span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure>

<p>git clone -b &lt;指定分支名&gt; &lt;远程仓库地址&gt;</p>
<h3 id="编写博客"><a href="#编写博客" class="headerlink" title="编写博客"></a>编写博客</h3><figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> <span class="built_in">PATH</span>=<span class="variable">%PATH%</span>;</span><br><span class="line">reg add &quot;HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment&quot; /v &quot;<span class="built_in">Path</span>&quot; /t REG_EXPAND_SZ /d &quot;<span class="variable">%PATH%</span>&quot; /f</span><br></pre></td></tr></table></figure>

<blockquote>
<p>参考文章 </p>
</blockquote>
<ul>
<li><a href="https://blog.csdn.net/lucklymm/article/details/89014085">hexo搭建个人博客</a></li>
</ul>
<p>用电脑记笔记<br>让更多人看到自己的笔记<br>备份笔记</p>
]]></content>
      <tags>
        <tag>hexo</tag>
        <tag>VScode</tag>
        <tag>git</tag>
        <tag>nodejs</tag>
        <tag>GitHub</tag>
        <tag>GitPage</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>books</title>
    <url>/2020/01/12/books/</url>
    <content><![CDATA[<p>大学期间在图书馆借的所有书，大一忙的看教科书了，大二没怎么买书，全是图书馆借的看的。每本看完是不可能的，事实是阅读量还没3成。</p>
<span id="more"></span>

<ul>
<li>JAVA从入门到项目实践</li>
<li>基于C#的桌面端开发技术</li>
<li>算法设计与分析</li>
<li>JAVA程序员面试算法宝典</li>
<li>C#从现象到本质</li>
<li>PYSPARK实战指南:利用PYTHON和SPARK构建数据密集型应用并规模化部署</li>
<li>PYTHON标准库</li>
<li>2020版计算机网络高分笔记</li>
<li>编译原理</li>
<li>C程序设计基础</li>
<li>JENKINS 2.X实践指南</li>
<li>2019年全国计算机等级考试一本通:三级网络技术</li>
<li>软件工程</li>
<li>前端程序员面试笔试真题与解析</li>
<li>微软办公软件国际认证MOS OFFICE 2016七合一高分必看:办公软件完全实战案例400+:WORD EXCEL PPT ACCESS、OU</li>
<li>DJANGO 2.0入门与实践</li>
<li>培养计算机类专业学生解决复杂工程问题的能力</li>
<li>程序员面试笔试数据结构深度解析</li>
<li>深入理解MARIADB与MYSQL</li>
<li>JAVA 9编程参考官方大全</li>
<li>JAVA系统化项目开发教程</li>
<li>ALTIUM DESIGNER 18电路设计与仿真:从入门到精通</li>
<li>算法数论:格、数域、曲线和密码学</li>
<li>PYTHON项目案例开发从入门到实战:爬虫、游戏和机器学习</li>
<li>超强大15000英文单词随身带:词根词缀+场景分类记忆法</li>
<li>JAVA JDK 9学习笔记</li>
<li>实战GRADLE</li>
<li>数据结构项目实训</li>
<li>ANIMATE CC 2017中文版入门与提高实例教程</li>
<li>深入浅出DOCKER</li>
<li>操作系统原理</li>
<li>每天用英语读点管理智慧</li>
<li>人工智能</li>
<li>深入理解ANDROID内核设计思想.上册</li>
<li>JAVA工程师修炼之道</li>
<li>英语四六级词根词汇巧记忆</li>
<li>自然拼读背单词:基础英语4000词</li>
<li>数字电子技术名校考研真题详解</li>
<li>程序员面试笔记:C&#x2F;C++、算法、数据结构篇</li>
<li>ES6标准入门</li>
<li>大数据分析与计算</li>
<li>C#应用程序设计教程</li>
<li>PYTHON并行编程手册</li>
<li>中国文化汉英读本</li>
<li>数据挖掘与机器学习:WEKA应用技术与实践</li>
<li>直击招聘:程序员面试笔试C语言深度解析</li>
<li>ALTIUM DESIGNER原理图与PCB设计精讲教程</li>
<li>PYTHON高性能</li>
<li>SPRING BOOT 2企业应用实战</li>
<li>汇编语言:基于LINUX环境</li>
<li>MARIADB从零开始学:视频教学版</li>
<li>动手学深度学习</li>
<li>PYTHON设计模式</li>
<li>ANDROID嵌入式编程</li>
<li>考研专业课真题必练 (含关键考点点评),操作系统</li>
<li>运维工程师成长之路</li>
<li>面试英语口语大典</li>
<li>CENTOS LINUX系统管理与运维</li>
<li>KOTLIN语言实例精解</li>
<li>SPRING BOOT开发实战</li>
<li>操作系统:精髓与设计原理</li>
<li>软件架构:PYTHON语言实现</li>
<li>JAVA程序设计基础</li>
<li>完全学会GIT GITHUB GITSERVER的24堂课</li>
<li>横扫OFFER:程序员招聘真题详解700题</li>
<li>PYTHON 3.6编程实践指南:计算机科学入门</li>
<li>C++编程规范:101条规则、准则与最佳实践</li>
<li>编译原理及实践教程</li>
<li>汇编语言程序设计</li>
<li>程序员面试算法宝典</li>
<li>PHP精粹:编写高效PHP代码</li>
<li>KOTLIN从零到精通ANDROID开发</li>
<li>KOTLIN极简教程</li>
<li>KOTLIN核心编程</li>
<li>深度学习技术图像处理入门</li>
<li>DJANGO开发宝典</li>
<li>PYTHON从菜鸟到高手</li>
<li>高性能JAVASCRIPT</li>
<li>KOTLIN从入门到进阶实战</li>
<li>PYTHON数据可视化之MATPLOTLIB实践</li>
<li>微机原理与接口技术</li>
<li>365天最动人英文情诗放口袋:英汉对照</li>
<li>OPENCV轻松入门:面向PYTHON</li>
<li>JAVA程序设计经典300例</li>
<li>计算机网络技术</li>
<li>JAVA从入门到精通</li>
<li>C语言解惑:指针、数组、函数和多文件编程</li>
<li>全国计算机等级考试二级教程:2017年版,JAVA语言程序设计</li>
<li>深入浅出WEBASSEMBLY</li>
<li>GO语言高级编程</li>
<li>HTML5+CSS3+JAVASCRIPT+JQUERY程序设计基础教程</li>
<li>NGINX完全开发指南:使用C、C++和OPENRESTY</li>
<li>数据库原理及应用:SQL SERVER 2016</li>
<li>JQUERY从零开始学</li>
<li>POSTGRESQL修炼之道:从小工到专家</li>
<li>一个64位操作系统的设计与实现</li>
<li>操作系统之编程观察</li>
<li>嵌入式系统开发:基于ARM CORTEX A8系统</li>
<li>ORACLE数据库技术基础教程</li>
<li>ACM大学生程序设计竞赛在线题库最新精选题解</li>
<li>ARM嵌入式系统原理与开发</li>
<li>HTML5+CSS3从入门到精通:标准版</li>
<li>MYSQL从入门到精通</li>
<li>软件工程习题解答</li>
<li>数据库原理实验指导:SQL SERVER 2016</li>
<li>JAVA高并发编程详解:多线程与架构设计</li>
<li>JAVA程序设计与应用开发</li>
<li>数据库系统原理</li>
<li>数据结构课程设计案例教程</li>
<li>计算机组成原理</li>
<li>JULIA语言程序设计</li>
<li>ACCESS 2016数据库应用与开发</li>
<li>直击招聘:程序员面试笔试C++语言深度解析</li>
<li>PHP 7编程实战</li>
<li>现代JAVASCRIPT编程:经典范例与实践技巧</li>
<li>老蒋带你8天搞定英二真题必考词汇:2020版</li>
<li>HTML 5精粹:利用HTML 5开发令人惊奇的WEB站点和革命性应用</li>
<li>图解数据结构:使用PYTHON</li>
<li>深入浅出SSD:固态存储核心技术、原理与实战</li>
<li>程序员面试笔试真题库</li>
<li>人工智能与大数据技术导论</li>
<li>数学分析讲义.第一册</li>
<li>大学英语四级考试晨读美文</li>
<li>编程的乐趣:用PYTHON解算法谜题</li>
<li>JAVA程序设计案例教程</li>
<li>数据结构与算法分析:C++语言版</li>
<li>编码:隐匿在计算机软硬件背后的语言</li>
<li>C++语法详解</li>
<li>DJANGO企业开发实战</li>
<li>信息安全原理与技术</li>
<li>看《老友记》.第七季</li>
<li>15天学会素描,风景篇</li>
<li>UML基础与建模实用教程</li>
<li>简明数学史.第四卷,近代数学</li>
<li>NOSQL实践指南:基本原则、设计准则及实用技巧</li>
<li>PHP 7从入门到精通:视频教学版</li>
<li>ARM嵌入式LINUX系统开发技术详解</li>
<li>计算机组成原理答疑解惑与典型题解</li>
<li>JULIA数据科学应用</li>
<li>数据结构:用C++语言描述</li>
<li>JAVA EE基础实用教程</li>
<li>数学分析讲义.第二册</li>
<li>KOTLIN程序员面试算法宝典</li>
<li>BLENDER 权威指南</li>
<li>X86 PC 汇编语言、设计与接口:ASSEMBLY LANGUAGE, DESIGN, AND INTERFACING</li>
<li>深度学习实践:计算机视觉</li>
<li>操作系统</li>
<li>JAVA从小白到大牛</li>
<li>信息安全工程</li>
<li>JAVA语言程序设计</li>
<li>深入理解计算机网络</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>产品追溯</title>
    <url>/2023/04/28/box/</url>
    <content><![CDATA[<p>厂商编号 产品编号 生产日期 流水号</p>
]]></content>
  </entry>
  <entry>
    <title>vimium</title>
    <url>/2020/01/08/chrome-vimium/</url>
    <content><![CDATA[<p>Vimium is a Chrome extension that provides keyboard-based navigation and control of the web in the spirit of the Vim editor.</p>
<span id="more"></span>

<h3 id="vimium"><a href="#vimium" class="headerlink" title="vimium"></a>vimium</h3><p><a href="https://github.com/philc/vimium">官网</a></p>
<figure class="highlight plaintext"><figcaption><span>key mappings</span></figcaption><table><tr><td class="code"><pre><span class="line"># Insert your preferred key mappings here.</span><br><span class="line">map h previousTab</span><br><span class="line">map l nextTab</span><br><span class="line"></span><br><span class="line">map H scrollLeft</span><br><span class="line">map J scrollPageDown</span><br><span class="line">map K scrollPageUp</span><br><span class="line">map L scrollRight</span><br><span class="line"></span><br><span class="line">map gh goBack</span><br><span class="line">map gj scrollToBottom</span><br><span class="line">map gk scrollToTop</span><br><span class="line">map gl goForward</span><br><span class="line">map gt Vomnibar.activateTabSelection</span><br><span class="line"></span><br><span class="line">map th firstTab</span><br><span class="line">map tl lastTab</span><br><span class="line"># map tn createTab</span><br><span class="line">map tn Vomnibar.activateInNewTab</span><br><span class="line">map tb Vomnibar.activateBookmarksInNewTab</span><br><span class="line">map tr reload</span><br><span class="line">map tg Vomnibar.activateTabSelection</span><br><span class="line">unmap t</span><br><span class="line"></span><br><span class="line">unmap x</span><br><span class="line">map xx restoreTab</span><br><span class="line">map &#x27; removeTab</span><br><span class="line">map xh&#x27; closeTabsOnLeft</span><br><span class="line">map xl&#x27; closeTabsOnRight</span><br><span class="line">map xo&#x27; closeOtherTabs</span><br><span class="line"></span><br><span class="line">map u Vomnibar.activateEditUrl</span><br><span class="line"></span><br><span class="line">map c LinkHints.activateMode</span><br><span class="line"># map f LinkHints.activateModeToOpenInNewTab</span><br><span class="line">map o LinkHints.activateModeToOpenInNewTab</span><br><span class="line">map mo Vomnibar.activateBookmarksInNewTab</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># w: https://www.wikipedia.org/w/index.php?title=Special:Search&amp;search=%s Wikipedia</span><br><span class="line"></span><br><span class="line"># More examples.</span><br><span class="line">#</span><br><span class="line"># (Vimium supports search completion Wikipedia, as</span><br><span class="line"># above, and for these.)</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line"># l: https://www.google.com/search?q=%s&amp;btnI I&#x27;m feeling lucky...</span><br><span class="line"># y: https://www.youtube.com/results?search_query=%s Youtube</span><br><span class="line"># gm: https://www.google.com/maps?q=%s Google maps</span><br><span class="line">bing: https://www.bing.com/search?q=%s Bing</span><br><span class="line">baidu: https://www.baidu.com/s?wd=%s Baidu</span><br><span class="line">google: https://www.google.com/search?q=%s Google</span><br><span class="line">github: https://github.com/search?q=%s GitHub</span><br><span class="line">weibo: https://s.weibo.com/weibo?q=%s 微博搜索</span><br><span class="line">cqvip: http://www.cqvip.com/main/search.aspx?k=%s 维普期刊</span><br><span class="line">pypi: https://pypi.org/search/?q=%s Python Package Index</span><br><span class="line">te: https://translate.google.cn/#view=home&amp;op=translate&amp;sl=zh-CN&amp;tl=en&amp;text= Google 中译英</span><br><span class="line">x: https://x.cnki.net/kns/brief/Default_Result.aspx?code=SCDB&amp;kw=%s China National Knowledge Infrastructure</span><br><span class="line"># d: https://duckduckgo.com/?q=%s DuckDuckGo</span><br><span class="line"># az: https://www.amazon.com/s/?field-keywords=%s Amazon</span><br><span class="line"># qw: https://www.qwant.com/?q=%s Qwant</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>易班动态</title>
    <url>/2017/06/11/college-app/</url>
    <content><![CDATA[<h1 id="易月动态"><a href="#易月动态" class="headerlink" title="易月动态"></a>易月动态</h1><h2 id="特色学院轻应用"><a href="#特色学院轻应用" class="headerlink" title="特色学院轻应用"></a>特色学院轻应用</h2><ol>
<li><p>导出上月1日至本月1日的轻应用数据</p>
</li>
<li><p>pv改为浏览量，删除创建者ID、应用状态、发布时间等列</p>
</li>
<li><p>筛选数据，浏览量排名</p>
</li>
<li><p>删掉工作站的</p>
</li>
<li><p>将用户姓名改为学院（根据用户姓名及应用名称填写）</p>
</li>
<li><p>整理内容，以序号、学院、轻应用名称、添加人数、浏览量的顺序整理内容</p>
</li>
<li><p>选取前七，一般最终为前五</p>
</li>
</ol>
<h2 id="易班头条"><a href="#易班头条" class="headerlink" title="易班头条"></a>易班头条</h2><ol>
<li>导出数据，确认是从1号开始的</li>
<li>复制至excel，筛选排序</li>
<li>删除红柳快（易）讯、校医等通知</li>
<li>易周说、文青·漫画、游学日记</li>
<li>按照浏览量校级不超过两条</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>git 仓库配置</title>
    <url>/2019/08/15/git/</url>
    <content><![CDATA[<p>Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.</p>
<span id="more"></span>

<h2 id="常用-Git-仓库"><a href="#常用-Git-仓库" class="headerlink" title="常用 Git 仓库"></a>常用 Git 仓库</h2><p>腾讯工蜂 <a href="https://git.code.tencent.com/">https://git.code.tencent.com</a></p>
<h2 id="git"><a href="#git" class="headerlink" title="git"></a>git</h2><p><img src="/img/git/0.png" alt="git 官网"></p>
<p><a href="https://git-scm.com/">官网</a> | <a href="https://github.com/waylau/git-for-win">中国下载</a></p>
<h2 id="安装-git"><a href="#安装-git" class="headerlink" title="安装 git"></a>安装 git</h2><p>蝈蝈强烈要求读者，先读下文，然后再碰安装包。</p>
<h3 id="中国用户问题"><a href="#中国用户问题" class="headerlink" title="中国用户问题"></a>中国用户问题</h3><p>中国地区的 Window 宝宝请访问中国下载地址，最新日期的第一个链接即可</p>
<p><img src="/img/blog/5.png" alt="git 下载页面"></p>
<h3 id="path-环境变量问题"><a href="#path-环境变量问题" class="headerlink" title="path 环境变量问题"></a>path 环境变量问题</h3><p>安装的时候，为了方便以后操作，下面的修改环境变量操作选第二个，其它操作建议选择默认。</p>
<p><img src="/img/git/4.png" alt="git 安装界面"></p>
<h2 id="shell-操作"><a href="#shell-操作" class="headerlink" title="shell 操作"></a>shell 操作</h2><ol>
<li>点击 <code>Windows + R</code> 打开在运行界面</li>
<li>输入powershell 后，打开powershell</li>
</ol>
<p><img src="/img/git/11.png" alt="运行 cmd"></p>
<p>在弹出的软件中输入<code>git version</code>,回车查看 git 版本，确认安装成功</p>
<p><img src="/img/git/12.png" alt="验证 git 安装"></p>
<p>确认成功安装后，依次输入以下命令回车执行，使用前面记录的信息替换相关内容，全程一律回车，直到执行完毕。</p>
<h2 id="设置-git"><a href="#设置-git" class="headerlink" title="设置 git"></a>设置 git</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看 git 版本</span></span><br><span class="line">git version</span><br><span class="line"><span class="comment"># 设置 git 全局用户名</span></span><br><span class="line">git config --global user.name <span class="string">&quot;DukeBode&quot;</span></span><br><span class="line"><span class="comment"># 设置 git 全局邮箱</span></span><br><span class="line">git config --global user.email Duke123@aliyun.com</span><br></pre></td></tr></table></figure>

<h2 id="创建本地仓库"><a href="#创建本地仓库" class="headerlink" title="创建本地仓库"></a>创建本地仓库</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git init  <span class="comment"># 初始化仓库</span></span><br><span class="line">git add * <span class="comment"># 添加全部文件</span></span><br></pre></td></tr></table></figure>

<h2 id="配置远程仓库"><a href="#配置远程仓库" class="headerlink" title="配置远程仓库"></a>配置远程仓库</h2><p>git remote add origin git@。。。。。。。。。。。。。。。<br>git push -u origin –all</p>
<h2 id="配置-SSH-Key"><a href="#配置-SSH-Key" class="headerlink" title="配置 SSH-Key"></a>配置 SSH-Key</h2><h3 id="生成密钥对"><a href="#生成密钥对" class="headerlink" title="生成密钥对"></a>生成密钥对</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 格式 </span></span><br><span class="line"><span class="comment"># ssh-keygen -t rsa -C &quot;通常为邮箱&quot; -f &quot;私钥文件绝对路径&quot;</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;Duke123@aliyun.com&quot;</span> -f <span class="string">&quot;C:\Users\Duke1\.ssh\github&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="配置-ssh-config-文件"><a href="#配置-ssh-config-文件" class="headerlink" title="配置 ssh config 文件"></a>配置 ssh config 文件</h3><p>模板</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 仓库名</span><br><span class="line"># 仓库地址</span><br><span class="line">Host 仓库 git 地址</span><br><span class="line">Host 仓库 git 地址</span><br><span class="line">PreferredAuthentications publickey</span><br><span class="line">IdentityFile 私钥文件绝对路径</span><br></pre></td></tr></table></figure>

<p>config<br><a href="/config/ssh/config">config</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># github</span><br><span class="line"># https://github.com/</span><br><span class="line">Host github.com</span><br><span class="line">    HostName github.com</span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile C:\Users\Duke1\.ssh\github</span><br></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git -T git@github.com</span><br></pre></td></tr></table></figure>

<h2 id="git-撤销已经push的提交"><a href="#git-撤销已经push的提交" class="headerlink" title="git 撤销已经push的提交"></a>git 撤销已经push的提交</h2><ul>
<li><a href="https://git-scm.com/docs/git-branch">git branch</a> 查看分支</li>
<li><a href="https://git-scm.com/docs/git-log/">git log</a> 查看提交日志</li>
<li><a href="https://git-scm.com/docs/git-reset">git reset</a> 重置当前HEAD到指定的状态</li>
<li><a href="https://git-scm.com/docs/git-push">git push</a></li>
</ul>
<ol>
<li><p>git log</p>
</li>
<li><p>git reset –soft </p>
</li>
<li><p>git push origin master –force</p>
</li>
</ol>
<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ol>
<li><a href="https://www.jianshu.com/p/dbb352ea14cf">Git命令备份</a></li>
<li><a href="https://gitee.com/help/articles/4229">Git配置多个SSH-Key</a></li>
<li><a href="https://code.aliyun.com/help/ssh/README">aliyun SSH-Key</a></li>
<li><a href="https://www.cnblogs.com/liuguanglin/p/8351616.html">在Windows下配置多个git账号</a></li>
<li><a href="https://blog.csdn.net/sinat_29963957/article/details/81256227">Linux下安装Git</a></li>
<li><a href="https://www.cnblogs.com/sahara/p/5683066.html">CentOS安装GIT</a></li>
</ol>
]]></content>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>gVim</title>
    <url>/2019/07/08/gvim/</url>
    <content><![CDATA[<p>Vim是从vi发展出来的一个文本编辑器。代码补完、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。和Emacs并列成为类Unix系统用户最喜欢的编辑器。</p>
<span id="more"></span>
<h2 id="显示行号"><a href="#显示行号" class="headerlink" title="显示行号"></a>显示行号</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set nu</span><br><span class="line">设置编码</span><br><span class="line">set encoding=utf-8</span><br><span class="line">空格表示 tab</span><br><span class="line">set noexpandtab</span><br><span class="line">一 tab 四字符</span><br><span class="line">set tabstop=4</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>软件</tag>
        <tag>IDE</tag>
        <tag>编辑器</tag>
      </tags>
  </entry>
  <entry>
    <title>html</title>
    <url>/2017/09/07/html/</url>
    <content><![CDATA[<p>HTML (HyperText Markup Language) is the most basic building block of the Web. It defines the meaning and structure of web content.</p>
<span id="more"></span>

<p>跑马灯</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">marquee</span>&gt;</span>...<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span>普通卷动</span><br><span class="line"><span class="tag">&lt;<span class="name">marquee</span> <span class="attr">behavior</span>=<span class="string">slide</span>&gt;</span>...<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span>滑动</span><br><span class="line"><span class="tag">&lt;<span class="name">marquee</span> <span class="attr">behavior</span>=<span class="string">scroll</span>&gt;</span>...<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span>预设卷动</span><br><span class="line"><span class="tag">&lt;<span class="name">marquee</span> <span class="attr">behavior</span>=<span class="string">alternate</span>&gt;</span>...<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span>来回卷动</span><br><span class="line"><span class="tag">&lt;<span class="name">marquee</span> <span class="attr">direction</span>=<span class="string">down</span>&gt;</span>...<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span>向下卷动</span><br><span class="line"><span class="tag">&lt;<span class="name">marquee</span> <span class="attr">direction</span>=<span class="string">up</span>&gt;</span>...<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span>向上卷动</span><br><span class="line"><span class="tag">&lt;<span class="name">marquee</span> <span class="attr">direction</span>=<span class="string">right</span>&gt;</span><span class="tag">&lt;/<span class="name">marquee</span>&gt;</span>向右卷动</span><br><span class="line"><span class="tag">&lt;<span class="name">marquee</span> <span class="attr">direction</span>=<span class="string">’left’</span>&gt;</span><span class="tag">&lt;/<span class="name">marquee</span>&gt;</span>向左卷动</span><br><span class="line"><span class="tag">&lt;<span class="name">marquee</span> <span class="attr">loop</span>=<span class="string">2</span>&gt;</span>...<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span>卷动次数</span><br><span class="line"><span class="tag">&lt;<span class="name">marquee</span> <span class="attr">width</span>=<span class="string">180</span>&gt;</span>...<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span>设定宽度</span><br><span class="line"><span class="tag">&lt;<span class="name">marquee</span> <span class="attr">height</span>=<span class="string">30</span>&gt;</span>...<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span>设定高度</span><br><span class="line"><span class="tag">&lt;<span class="name">marquee</span> <span class="attr">bgcolor</span>=<span class="string">FF0000</span>&gt;</span>...<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span>设定背景颜色</span><br><span class="line"><span class="tag">&lt;<span class="name">marquee</span> <span class="attr">scrollamount</span>=<span class="string">30</span>&gt;</span>...<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span>设定滚动速度</span><br><span class="line"><span class="tag">&lt;<span class="name">marquee</span> <span class="attr">scrolldelay</span>=<span class="string">300</span>&gt;</span>...<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span>设定卷动时间</span><br><span class="line"><span class="tag">&lt;<span class="name">marquee</span> <span class="attr">onmouseover</span>=<span class="string">&quot;this.stop()&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span>鼠标经过上面时停止滚动</span><br><span class="line"><span class="tag">&lt;<span class="name">marquee</span> <span class="attr">onmouseover</span>=<span class="string">&quot;this.start()&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span>鼠标离开时开始滚动</span><br><span class="line">&lt;!&gt;字体效果</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>...<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>标题字(最大)</span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>...<span class="tag">&lt;/<span class="name">h6</span>&gt;</span>标题字(最小)</span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>...粗体字</span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>...<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>粗体字(强调) （同上效果略同）</span><br><span class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span>...<span class="tag">&lt;/<span class="name">i</span>&gt;</span>斜体字</span><br><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span>...<span class="tag">&lt;/<span class="name">em</span>&gt;</span>斜体字(强调)</span><br><span class="line"><span class="tag">&lt;<span class="name">dfn</span>&gt;</span>...<span class="tag">&lt;/<span class="name">dfn</span>&gt;</span>斜体字(表示定义)</span><br><span class="line"><span class="tag">&lt;<span class="name">u</span>&gt;</span>...<span class="tag">&lt;/<span class="name">u</span>&gt;</span>底线</span><br><span class="line"><span class="tag">&lt;<span class="name">ins</span>&gt;</span>...<span class="tag">&lt;/<span class="name">ins</span>&gt;</span>底线(表示插入文字)</span><br><span class="line"><span class="tag">&lt;<span class="name">strike</span>&gt;</span>...<span class="tag">&lt;/<span class="name">strike</span>&gt;</span>横线</span><br><span class="line"><span class="tag">&lt;<span class="name">s</span>&gt;</span>...<span class="tag">&lt;/<span class="name">s</span>&gt;</span>删除线</span><br><span class="line"><span class="tag">&lt;<span class="name">del</span>&gt;</span>...<span class="tag">&lt;/<span class="name">del</span>&gt;</span>删除线(表示删除)</span><br><span class="line"><span class="tag">&lt;<span class="name">kbd</span>&gt;</span>...<span class="tag">&lt;/<span class="name">kbd</span>&gt;</span>键盘文字</span><br><span class="line"><span class="tag">&lt;<span class="name">tt</span>&gt;</span>...<span class="tag">&lt;/<span class="name">tt</span>&gt;</span> 打字体</span><br><span class="line"><span class="tag">&lt;<span class="name">xmp</span>&gt;</span>...<span class="tag">&lt;/<span class="name">xmp</span>&gt;</span>固定宽度字体(在文件中空白、换行、定位功能有效)</span><br><span class="line"><span class="tag">&lt;<span class="name">plaintext</span>&gt;</span>...<span class="tag">&lt;/<span class="name">plaintext</span>&gt;</span>固定宽度字体(不执行标记符号)</span><br><span class="line"><span class="tag">&lt;<span class="name">listing</span>&gt;</span>...<span class="tag">&lt;/<span class="name">listing</span>&gt;</span> 固定宽度小字体</span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">00ff00</span>&gt;</span>...<span class="tag">&lt;/<span class="name">font</span>&gt;</span>字体颜色</span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">1</span>&gt;</span>...<span class="tag">&lt;/<span class="name">font</span>&gt;</span>最小字体</span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">style</span> =<span class="string">’font-size:100</span> <span class="attr">px</span>’&gt;</span>...<span class="tag">&lt;/<span class="name">font</span>&gt;</span>无限增大</span><br><span class="line">区断标记</span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span>水平线</span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span> <span class="attr">size</span>=<span class="string">’9’</span>&gt;</span>水平线(设定大小)</span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span> <span class="attr">width</span>=<span class="string">’80%’</span>&gt;</span>水平线(设定宽度)</span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span> <span class="attr">color</span>=<span class="string">’ff0000’</span>&gt;</span>水平线(设定颜色)</span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span>(换行)</span><br><span class="line"><span class="tag">&lt;<span class="name">nobr</span>&gt;</span>...<span class="tag">&lt;/<span class="name">nobr</span>&gt;</span>水域(不换行)</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">水域(段落)</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span>...<span class="tag">&lt;/<span class="name">center</span>&gt;</span>置中</span><br><span class="line">&lt;!&gt;连结格式</span><br><span class="line"><span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">位址</span>&gt;</span>(预设好连结路径)</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">位址</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>外部连结</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">位址</span> <span class="attr">target</span>=<span class="string">’_blank’</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>外部连结(另开新视窗)</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">位址</span> <span class="attr">target</span>=<span class="string">’_top’</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>外部连结(全视窗连结)</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">位址</span> <span class="attr">target</span>=<span class="string">’页框名’</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>外部连结(在指定页框连结)</span><br><span class="line">&lt;!&gt;贴图/音乐</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">图片位址</span>&gt;</span>贴图</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">图片位址</span> <span class="attr">width</span>=<span class="string">’180’</span>&gt;</span>设定图片宽度</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">图片位址</span> <span class="attr">height</span>=<span class="string">’30’</span>&gt;</span>设定图片高度</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">图片位址</span> <span class="attr">alt</span>=<span class="string">’提示文字’</span>&gt;</span>设定图片提示文字</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">图片位址’</span> <span class="attr">border</span>=<span class="string">’1’</span>&gt;</span>设定图片边框</span><br><span class="line"><span class="tag">&lt;<span class="name">bgsound</span> <span class="attr">src</span>=<span class="string">MID音乐档位址</span>&gt;</span>背景音乐设定</span><br><span class="line">&lt;!&gt;表格语法</span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">aling</span>=<span class="string">left</span>&gt;</span>...<span class="tag">&lt;/<span class="name">table</span>&gt;</span>表格位置,置左</span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">aling</span>=<span class="string">center</span>&gt;</span>...<span class="tag">&lt;/<span class="name">table</span>&gt;</span>表格位置,置中</span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">background</span>=<span class="string">图片路径</span>&gt;</span>...<span class="tag">&lt;/<span class="name">table</span>&gt;</span>背景图片的URL=就是路径网址</span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">边框大小</span>&gt;</span>...<span class="tag">&lt;/<span class="name">table</span>&gt;</span>设定表格边框大小(使用数字)</span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">bgcolor</span>=<span class="string">颜色码</span>&gt;</span>...<span class="tag">&lt;/<span class="name">table</span>&gt;</span>设定表格的背景颜色</span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">borderclor</span>=<span class="string">颜色码</span>&gt;</span>...<span class="tag">&lt;/<span class="name">table</span>&gt;</span>设定表格边框的颜色</span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">borderclordark</span>=<span class="string">颜色码</span>&gt;</span>...<span class="tag">&lt;/<span class="name">table</span>&gt;</span>设定表格暗边框的颜色</span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">borderclorlight</span>=<span class="string">颜色码</span>&gt;</span>...<span class="tag">&lt;/<span class="name">table</span>&gt;</span>设定表格亮边框的颜色</span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">cellpadding</span>=<span class="string">参数</span>&gt;</span>...<span class="tag">&lt;/<span class="name">table</span>&gt;</span>指定内容与格线之间的间距(使用数字)</span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">cellspacing</span>=<span class="string">参数</span>&gt;</span>...<span class="tag">&lt;/<span class="name">table</span>&gt;</span>指定格线与格线之间的距离(使用数字)</span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">cols</span>=<span class="string">参数</span>&gt;</span>...<span class="tag">&lt;/<span class="name">table</span>&gt;</span>指定表格的栏数</span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">frame</span>=<span class="string">参数</span>&gt;</span>...<span class="tag">&lt;/<span class="name">table</span>&gt;</span>设定表格外框线的显示方式</span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">宽度</span>&gt;</span>...<span class="tag">&lt;/<span class="name">table</span>&gt;</span>指定表格的宽度大小(使用数字)</span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">height</span>=<span class="string">高度</span>&gt;</span>...<span class="tag">&lt;/<span class="name">table</span>&gt;</span>指定表格的高度大小(使用数字)</span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">参数</span>&gt;</span>...<span class="tag">&lt;/<span class="name">td</span>&gt;</span>指定储存格合并栏的栏数(使用数字)</span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">参数</span>&gt;</span>...<span class="tag">&lt;/<span class="name">td</span>&gt;</span>指定储存格合并列的列数(使用数字)</span><br><span class="line">分割视窗</span><br><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">cols</span>=<span class="string">&quot;20%,*&quot;</span>&gt;</span>左右分割,将左边框架分割大小为20%右边框架的大小浏览器会自动调整</span><br><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">rows</span>=<span class="string">&quot;20%,*&quot;</span>&gt;</span>上下分割,将上面框架分割大小为20%下面框架的大小浏览器会自动调整</span><br><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">cols</span>=<span class="string">&quot;20%,*&quot;</span>&gt;</span>分割左右两个框架</span><br><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">cols</span>=<span class="string">&quot;20%,*,20%&quot;</span>&gt;</span>分割左中右三个框架</span><br><span class="line"><span class="tag">&lt;<span class="name">分割上下两个框架</span></span></span><br><span class="line"><span class="tag">&lt;<span class="attr">frameset</span> <span class="attr">rows</span>=<span class="string">&quot;20%,*,20%&quot;</span>&gt;</span>分割上中下三个框架</span><br><span class="line">属性：</span><br><span class="line">cols 垂直切割窗口（如左右分割两个窗口）接受整数值，百分数，*（*代表占用余下空间）数值的个数代表分成的部分数目，要以逗号分隔。例：cols=&quot;30,*,50%&quot;可以 切成三个视窗，第一部分是30像素（pixels）为绝对分割，第二部分是当分配完第一和第三视图后剩下的空间，第三部分则占整个窗口的50%宽度，为相对分割。</span><br><span class="line">rows 就是横向切割，将窗口上下分开，数值设置同上。</span><br><span class="line">以上两属性尽量不要在同一个<span class="tag">&lt;<span class="name">frameset</span>&gt;</span>标记中，因为王井（netscape）不支持，尽量采用多重分割。</span><br><span class="line">frameborder 设置框架的边框，其值有0不要边框，1要边框。</span><br><span class="line">border 设置框架边框厚度</span><br><span class="line">framespacing 表示框架与框架间保留空白的距离</span><br><span class="line">frame 元素（单标签）</span><br><span class="line">语法格式：</span><br><span class="line"><span class="tag">&lt;<span class="name">frame</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">src</span>=<span class="string">&quot;url&quot;</span> <span class="attr">scrolling</span>=<span class="string">&quot;yes/no&quot;</span> <span class="attr">noresize</span>&gt;</span></span><br><span class="line">属性：</span><br><span class="line">name 框架名称，指定框架来做连接的目标窗口。</span><br><span class="line">src 框架中要显示的网页文当url地址，每个个框架要对应一个html文挡。</span><br><span class="line">scrolling 是否显示滚动条，yes/no,auto是自动。</span><br><span class="line">noresize 设置不让使用者改变这个框架的大小，</span><br><span class="line">noframe元素</span><br><span class="line">指定当使用了框架的页面在不支持框架的浏览器中打开时显示的信息</span><br><span class="line">语法格式：</span><br><span class="line"><span class="tag">&lt;<span class="name">noframe</span>&gt;</span></span><br><span class="line">......</span><br><span class="line"><span class="tag">&lt;/<span class="name">noframe</span>&gt;</span></span><br><span class="line"></span><br><span class="line">表单<span class="tag">&lt;<span class="name">form</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">语法格式：</span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;url&quot;</span> <span class="attr">method</span>=<span class="string">&quot;get/post&quot;</span>&gt;</span></span><br><span class="line">....</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">submit</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">reset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">method有两种提交方式get,post</span><br><span class="line">action 是指明处理该表单的程序位置，这样表单所填的资料才能传给cgi做处里，可设定此参数为action=&quot;mailto:lwr8494@163.com&quot; 这样此表单所填的资料将会发送到这个邮箱地址。</span><br><span class="line">method 是指传送信息给cgi等网络程序的方式。可选post方法， get方法，post方法容许传送大量信息。get方法只接受低于1k的信息。</span><br><span class="line">申请表单用的是post搜索引擎用的是get</span><br><span class="line"> </span><br><span class="line">&lt;! - - ... - -&gt; 注解</span><br><span class="line"><span class="tag">&lt;<span class="name">A</span> <span class="attr">HREF</span> <span class="attr">TARGET</span>&gt;</span> 指定超连结的分割视窗</span><br><span class="line"><span class="tag">&lt;<span class="name">A</span> <span class="attr">HREF</span>=<span class="string">#锚的名称</span>&gt;</span> 指定锚名称的超连结</span><br><span class="line"><span class="tag">&lt;<span class="name">A</span> <span class="attr">HREF</span>&gt;</span> 指定超连结</span><br><span class="line"><span class="tag">&lt;<span class="name">A</span> <span class="attr">NAME</span>=<span class="string">锚的名称</span>&gt;</span> 被连结点的名称</span><br><span class="line"><span class="tag">&lt;<span class="name">ADDRESS</span>&gt;</span>....<span class="tag">&lt;/<span class="name">ADDRESS</span>&gt;</span> 用来显示电子邮箱地址</span><br><span class="line"><span class="tag">&lt;<span class="name">B</span>&gt;</span> 粗体字</span><br><span class="line"><span class="tag">&lt;<span class="name">BASE</span> <span class="attr">TARGET</span>&gt;</span> 指定超连结的分割视窗</span><br><span class="line"><span class="tag">&lt;<span class="name">BASEFONT</span> <span class="attr">SIZE</span>&gt;</span> 更改预设字形大小</span><br><span class="line"><span class="tag">&lt;<span class="name">BGSOUND</span> <span class="attr">SRC</span>&gt;</span> 加入背景音乐</span><br><span class="line"><span class="tag">&lt;<span class="name">BIG</span>&gt;</span> 显示大字体</span><br><span class="line"><span class="tag">&lt;<span class="name">BLINK</span>&gt;</span> 闪烁的文字</span><br><span class="line"><span class="tag">&lt;<span class="name">BODY</span> <span class="attr">TEXT</span> <span class="attr">LINK</span> <span class="attr">VLINK</span>&gt;</span> 设定文字颜色</span><br><span class="line"><span class="tag">&lt;<span class="name">BODY</span>&gt;</span> 显示本文</span><br><span class="line"><span class="tag">&lt;<span class="name">BR</span>&gt;</span> 换行</span><br><span class="line"><span class="tag">&lt;<span class="name">CAPTION</span> <span class="attr">ALIGN</span>&gt;</span> 设定表格标题位置</span><br><span class="line"><span class="tag">&lt;<span class="name">CAPTION</span>&gt;</span>...<span class="tag">&lt;/<span class="name">CAPTION</span>&gt;</span> 为表格加上标题</span><br><span class="line"><span class="tag">&lt;<span class="name">CENTER</span>&gt;</span> 向中对齐</span><br><span class="line"><span class="tag">&lt;<span class="name">CITE</span>&gt;</span>...<span class="tag">&lt;<span class="name">CITE</span>&gt;</span> 用於引经据典的文字</span><br><span class="line"><span class="tag">&lt;<span class="name">CODE</span>&gt;</span>...<span class="tag">&lt;/<span class="name">CODE</span>&gt;</span> 用於列出一段程式码</span><br><span class="line"><span class="tag">&lt;<span class="name">COMMENT</span>&gt;</span>...<span class="tag">&lt;/<span class="name">COMMENT</span>&gt;</span> 加上注解</span><br><span class="line"><span class="tag">&lt;<span class="name">DD</span>&gt;</span> 设定定义列表的项目解说</span><br><span class="line"><span class="tag">&lt;<span class="name">DFN</span>&gt;</span>...<span class="tag">&lt;/<span class="name">DFN</span>&gt;</span> 显示&quot;定义&quot;文字</span><br><span class="line"><span class="tag">&lt;<span class="name">DIR</span>&gt;</span>...<span class="tag">&lt;/<span class="name">DIR</span>&gt;</span> 列表文字标签</span><br><span class="line"><span class="tag">&lt;<span class="name">DL</span>&gt;</span>...<span class="tag">&lt;/<span class="name">DL</span>&gt;</span> 设定定义列表的标签</span><br><span class="line"><span class="tag">&lt;<span class="name">DT</span>&gt;</span> 设定定义列表的项目</span><br><span class="line"><span class="tag">&lt;<span class="name">EM</span>&gt;</span> 强调之用</span><br><span class="line"><span class="tag">&lt;<span class="name">FONT</span> <span class="attr">FACE</span>&gt;</span> 任意指定所用的字形</span><br><span class="line"><span class="tag">&lt;<span class="name">FONT</span> <span class="attr">SIZE</span>&gt;</span> 设定字体大小</span><br><span class="line"><span class="tag">&lt;<span class="name">FORM</span> <span class="attr">ACTION</span>&gt;</span> 设定户动式表单的处理方式</span><br><span class="line"><span class="tag">&lt;<span class="name">FORM</span> <span class="attr">METHOD</span>&gt;</span> 设定户动式表单之资料传送方式</span><br><span class="line"><span class="tag">&lt;<span class="name">FRame</span> <span class="attr">MARGINHEIGHT</span>&gt;</span> 设定视窗的上下边界</span><br><span class="line"><span class="tag">&lt;<span class="name">FRame</span> <span class="attr">MARGINWIDTH</span>&gt;</span> 设定视窗的左右边界</span><br><span class="line"><span class="tag">&lt;<span class="name">FRame</span> <span class="attr">NAME</span>&gt;</span> 为分割视窗命名</span><br><span class="line"><span class="tag">&lt;<span class="name">FRame</span> <span class="attr">NORESIZE</span>&gt;</span> 锁住分割视窗的大小</span><br><span class="line"><span class="tag">&lt;<span class="name">FRame</span> <span class="attr">SCROLLING</span>&gt;</span> 设定分割视窗的卷轴</span><br><span class="line"><span class="tag">&lt;<span class="name">FRame</span> <span class="attr">SRC</span>&gt;</span> 将HTML档加入视窗</span><br><span class="line"><span class="tag">&lt;<span class="name">FRameSET</span> <span class="attr">COLS</span>&gt;</span> 将视窗分割成左右的子视窗</span><br><span class="line"><span class="tag">&lt;<span class="name">FRameSET</span> <span class="attr">ROWS</span>&gt;</span> 将视窗分割成上下的子视窗</span><br><span class="line"><span class="tag">&lt;<span class="name">FRameSET</span>&gt;</span>...<span class="tag">&lt;/<span class="name">FRameSET</span>&gt;</span> 划分分割视窗</span><br><span class="line"><span class="tag">&lt;<span class="name">H1</span>&gt;</span>~<span class="tag">&lt;<span class="name">H6</span>&gt;</span> 设定文字大小</span><br><span class="line"><span class="tag">&lt;<span class="name">HEAD</span>&gt;</span> 标示文件资讯</span><br><span class="line"><span class="tag">&lt;<span class="name">HR</span>&gt;</span> 加上分格线</span><br><span class="line"><span class="tag">&lt;<span class="name">HTML</span>&gt;</span> 文件的开始与结束</span><br><span class="line"><span class="tag">&lt;<span class="name">I</span>&gt;</span> 斜体字</span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">ALIGN</span>&gt;</span> 调整图形影像的位置</span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">ALT</span>&gt;</span> 为你的图形影像加注</span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">DYNSRC</span> <span class="attr">LOOP</span>&gt;</span> 加入影片</span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">HEIGHT</span> <span class="attr">WIDTH</span>&gt;</span> 插入图片并预设图形大小</span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">HSPACE</span>&gt;</span> 插入图片并预设图形的左右边界</span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">LOWSRC</span>&gt;</span> 预载图片功能</span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">SRC</span> <span class="attr">BORDER</span>&gt;</span> 设定图片边界</span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">SRC</span>&gt;</span> 插入图片</span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">VSPACE</span>&gt;</span> 插入图片并预设图形的上下边界</span><br><span class="line"><span class="tag">&lt;<span class="name">INPUT</span> <span class="attr">TYPE</span> <span class="attr">NAME</span> <span class="attr">value</span>&gt;</span> 在表单中加入输入栏位</span><br><span class="line"><span class="tag">&lt;<span class="name">ISINDEX</span>&gt;</span> 定义查询用表单</span><br><span class="line"><span class="tag">&lt;<span class="name">KBD</span>&gt;</span>...<span class="tag">&lt;/<span class="name">KBD</span>&gt;</span> 表示使用者输入文字</span><br><span class="line"><span class="tag">&lt;<span class="name">LI</span> <span class="attr">TYPE</span>&gt;</span>...<span class="tag">&lt;/<span class="name">LI</span>&gt;</span> 列表的项目 ( 可指定符号 )</span><br><span class="line"><span class="tag">&lt;<span class="name">MARQUEE</span>&gt;</span> 跑马灯效果</span><br><span class="line"><span class="tag">&lt;<span class="name">MENU</span>&gt;</span>...<span class="tag">&lt;/<span class="name">MENU</span>&gt;</span> 条列文字标签</span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">NAME</span>=<span class="string">&quot;REFRESH&quot;</span> <span class="attr">CONTENT</span> <span class="attr">URL</span>&gt;</span> 自动更新文件内容</span><br><span class="line"><span class="tag">&lt;<span class="name">MULTIPLE</span>&gt;</span> 可同时选择多项的列表栏</span><br><span class="line"><span class="tag">&lt;<span class="name">NOFRame</span>&gt;</span> 定义不出现分割视窗的文字</span><br><span class="line"><span class="tag">&lt;<span class="name">OL</span>&gt;</span>...<span class="tag">&lt;/<span class="name">OL</span>&gt;</span> 有序号的列表</span><br><span class="line"><span class="tag">&lt;<span class="name">OPTION</span>&gt;</span> 定义表单中列表栏的项目</span><br><span class="line"><span class="tag">&lt;<span class="name">P</span> <span class="attr">ALIGN</span>&gt;</span> 设定对齐方向</span><br><span class="line"><span class="tag">&lt;<span class="name">P</span>&gt;</span> 分段</span><br><span class="line"><span class="tag">&lt;<span class="name">PERSON</span>&gt;</span>...<span class="tag">&lt;/<span class="name">PERSON</span>&gt;</span> 显示人名</span><br><span class="line"><span class="tag">&lt;<span class="name">PRE</span>&gt;</span> 使用原有排列</span><br><span class="line"><span class="tag">&lt;<span class="name">SAMP</span>&gt;</span>...<span class="tag">&lt;/<span class="name">SAMP</span>&gt;</span> 用於引用字</span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> &gt;</span>...&lt;/select &gt; 在表单中定义列表栏</span><br><span class="line"><span class="tag">&lt;<span class="name">SMALL</span>&gt;</span> 显示小字体</span><br><span class="line"><span class="tag">&lt;<span class="name">STRIKE</span>&gt;</span> 文字加横线</span><br><span class="line"><span class="tag">&lt;<span class="name">STRONG</span>&gt;</span> 用於加强语气</span><br><span class="line"><span class="tag">&lt;<span class="name">SUB</span>&gt;</span> 下标字</span><br><span class="line"><span class="tag">&lt;<span class="name">SUP</span>&gt;</span> 上标字</span><br><span class="line"><span class="tag">&lt;<span class="name">TABLE</span> <span class="attr">BORDER</span>=<span class="string">n</span>&gt;</span> 调整表格的宽线高度</span><br><span class="line"><span class="tag">&lt;<span class="name">TABLE</span> <span class="attr">CELLPADDING</span>&gt;</span> 调整资料栏位之边界</span><br><span class="line"><span class="tag">&lt;<span class="name">TABLE</span> <span class="attr">CELLSPACING</span>&gt;</span> 调整表格线的宽度</span><br><span class="line"><span class="tag">&lt;<span class="name">TABLE</span> <span class="attr">HEIGHT</span>&gt;</span> 调整表格的高度</span><br><span class="line"><span class="tag">&lt;<span class="name">TABLE</span> <span class="attr">WIDTH</span>&gt;</span> 调整表格的宽度</span><br><span class="line"><span class="tag">&lt;<span class="name">TABLE</span>&gt;</span>...<span class="tag">&lt;/<span class="name">TABLE</span>&gt;</span> 产生表格的标签</span><br><span class="line"><span class="tag">&lt;<span class="name">TD</span> <span class="attr">ALIGN</span>&gt;</span> 调整表格栏位之左右对齐</span><br><span class="line"><span class="tag">&lt;<span class="name">TD</span> <span class="attr">BGCOLOR</span>&gt;</span> 设定表格栏位之背景颜色</span><br><span class="line"><span class="tag">&lt;<span class="name">TD</span> <span class="attr">COLSPAN</span> <span class="attr">ROWSPAN</span>&gt;</span> 表格栏位的合并</span><br><span class="line"><span class="tag">&lt;<span class="name">TD</span> <span class="attr">NOWRAP</span>&gt;</span> 设定表格栏位不换行</span><br><span class="line"><span class="tag">&lt;<span class="name">TD</span> <span class="attr">VALIGN</span>&gt;</span> 调整表格栏位之上下对齐</span><br><span class="line"><span class="tag">&lt;<span class="name">TD</span> <span class="attr">WIDTH</span>&gt;</span> 调整表格栏位宽度</span><br><span class="line"><span class="tag">&lt;<span class="name">TD</span>&gt;</span>...<span class="tag">&lt;/<span class="name">TD</span>&gt;</span> 定义表格的资料栏位</span><br><span class="line"><span class="tag">&lt;<span class="name">TEXTAREA</span> <span class="attr">NAME</span> <span class="attr">ROWS</span> <span class="attr">COLS</span>&gt;</span> 表单中加入多少列的文字输入栏</span><br><span class="line"><span class="tag">&lt;<span class="name">TEXTAREA</span> <span class="attr">WRAP</span>&gt;</span> 决定文字输入栏是自动否换行</span><br><span class="line"><span class="tag">&lt;<span class="name">TH</span>&gt;</span>...<span class="tag">&lt;/<span class="name">TH</span>&gt;</span> 定义表格的标头栏位</span><br><span class="line"><span class="tag">&lt;<span class="name">TITLE</span>&gt;</span> 文件标题</span><br><span class="line"><span class="tag">&lt;<span class="name">TR</span>&gt;</span>...<span class="tag">&lt;/<span class="name">TR</span>&gt;</span> 定义表格美一行</span><br><span class="line"><span class="tag">&lt;<span class="name">TT</span>&gt;</span> 打字机字体</span><br><span class="line"><span class="tag">&lt;<span class="name">U</span>&gt;</span> 文字加底线</span><br><span class="line"><span class="tag">&lt;<span class="name">UL</span> <span class="attr">TYPE</span>&gt;</span>...<span class="tag">&lt;/<span class="name">UL</span>&gt;</span> 无序号的列表 ( 可指定符号 )</span><br><span class="line"><span class="tag">&lt;<span class="name">var</span>&gt;</span>...<span class="tag">&lt;/<span class="name">var</span>&gt;</span> 用於显示变数</span><br><span class="line">BlockQuotc文本缩进</span><br><span class="line">表示颜色的有三种方式；</span><br><span class="line">1，16进制颜色代码</span><br><span class="line">语法：#RRGGBB</span><br><span class="line">例：<span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;#ff0000&quot;</span>&gt;</span>红色<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line">2，10进制RGB码</span><br><span class="line">语法：RGB（RRR，GGG，BBB）</span><br><span class="line">例：<span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;rgb(255,000,000)&quot;</span>&gt;</span>红色<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line">3,直接用颜色的英文名称</span><br><span class="line">例：<span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;red&quot;</span>&gt;</span>红色<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>.....<span class="tag">&lt;/<span class="name">body</span>&gt;</span>属性可分为三种：</span><br><span class="line">1，背景属性</span><br><span class="line">包括：bgcolor,background</span><br><span class="line">2,文字属性：</span><br><span class="line">包括：text,link,alink,vlink,</span><br><span class="line">3,留白属性：</span><br><span class="line">其中分为：leftmargin,topmargin</span><br><span class="line">.bgcolor背景色</span><br><span class="line">语法格式：<span class="tag">&lt;<span class="name">body</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#ff0000&quot;</span>&gt;</span></span><br><span class="line">.background背景图案。</span><br><span class="line">语法格式：<span class="tag">&lt;<span class="name">body</span> <span class="attr">background</span>=<span class="string">&quot;url&quot;</span>&gt;</span></span><br><span class="line">.text文本颜色（非连接文字颜色）</span><br><span class="line">.link连接文字颜色（可连接文字颜色）</span><br><span class="line">.alink活动连接文字颜色（正被点击的可连接文字的颜色）</span><br><span class="line">.vlink已访问连接文字颜色）（已经点击访问过的可连接文字的颜色）</span><br><span class="line"></span><br><span class="line">语法格式：<span class="tag">&lt;<span class="name">body</span> <span class="attr">text</span>=<span class="string">&quot;color&quot;</span> <span class="attr">link</span>=<span class="string">&quot;color&quot;</span> <span class="attr">alink</span>=<span class="string">&quot;color&quot;</span> <span class="attr">vlink</span>=<span class="string">&quot;color&quot;</span>&gt;</span></span><br><span class="line">.leftmargin 页面左侧的留白距离</span><br><span class="line">.topmargin 页面顶部的留白距离</span><br><span class="line"></span><br><span class="line">语法格式：<span class="tag">&lt;<span class="name">body</span> <span class="attr">leftmargin</span>=<span class="string">&quot;value&quot;</span> <span class="attr">topmargin</span>=<span class="string">&quot;value&quot;</span>&gt;</span></span><br><span class="line">注：value为长度值为数字</span><br><span class="line">align 属性</span><br><span class="line">语法：<span class="tag">&lt;<span class="name">h2</span> <span class="attr">align</span>=<span class="string">&quot;?&quot;</span>&gt;</span>文字<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">其属性有三种：left靠左,center居中,right靠右</span><br><span class="line">〈p〉</span><br><span class="line">为段落标记，可利用以上属性对整个段落进行设置</span><br></pre></td></tr></table></figure>

<p><code>&lt;br&gt;</code>为换行标记</p>
<p><nobr></nobr>为不换行标记 放在文字两边即可<br>例：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>江南逢李龟年<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">歧王宅里寻常见<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">催九堂前几度闻<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">正是江南好风景<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">落花时节又逢君</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>ipad</title>
    <url>/2023/04/28/ipad/</url>
    <content><![CDATA[<span id="more"></span>

<h2 id="Apple-pencil"><a href="#Apple-pencil" class="headerlink" title="Apple pencil"></a>Apple pencil</h2><ul>
<li>不支持选区模式，截图很麻烦</li>
</ul>
<h2 id="外接显示器"><a href="#外接显示器" class="headerlink" title="外接显示器"></a>外接显示器</h2><ul>
<li>不能选择由ipad的发声</li>
<li>蓝牙耳机连接时需要选择发声设备，默认外接显示器发声</li>
<li>外接显示器的触摸功能与键鼠操作存在冲突，触摸后键鼠失灵</li>
<li>不支持仅外显使用</li>
<li>ipad必须常亮</li>
<li>播放视频时暂停不方便，平板上也无遥控器功能</li>
<li>不支持主副屏切换</li>
<li>硬件声音在软件上不可调整</li>
<li>默认镜像显示</li>
<li>移除外接显示器后软件需重新打开</li>
<li>视频软件兼容性差，部分全屏难</li>
<li>截图很不方便</li>
<li>发热挺严重</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>json</title>
    <url>/2018/11/08/json/</url>
    <content><![CDATA[<p>JSON(JavaScript Object Notation) 是一种轻量级数据交换格式，可以对复杂数据进行表达和存储，易于阅读和理解。</p>
<span id="more"></span>

<h1 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h1><ol>
<li>数据保存在键值对中</li>
<li>键值对之间由逗号分割</li>
<li>花括号用于保存键值对数据组成的对象</li>
<li>方括号用于保存键值对数据组成的数组</li>
</ol>
<ul>
<li>采用对象、数组方式组织起来的键值对可以表示任何结构的数据</li>
<li>JSON 格式是互联网上主要使用的复杂数据格式之一</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>latex</title>
    <url>/2019/09/06/latex/</url>
    <content><![CDATA[<span id="more"></span>]]></content>
  </entry>
  <entry>
    <title>linux-usr</title>
    <url>/2020/02/01/linux-usr/</url>
    <content><![CDATA[<p>&#x2F;usr&#x2F;src</p>
<span id="more"></span>

<ul>
<li>php <a href="https://www.php.net/downloads">download</a></li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># php</span></span><br><span class="line">wget https://www.php.net/distributions/php-7.4.2.tar.gz</span><br></pre></td></tr></table></figure>

<ul>
<li>mariadb <a href="https://downloads.mariadb.org/mariadb/repositories/">page</a></li>
</ul>
<p>dnf update</p>
<p><a href="http://nginx.org/en/download.html">http://nginx.org/en/download.html</a></p>
<!-- 备份 -->
<p>repo</p>
]]></content>
  </entry>
  <entry>
    <title>mariadb</title>
    <url>/2019/06/07/mariadb/</url>
    <content><![CDATA[<span id="more"></span>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">dnf install MariaDB-server MariaDB-client</span><br></pre></td></tr></table></figure>
<h2 id="附："><a href="#附：" class="headerlink" title="附："></a>附：</h2><p>MariaDB 下载: <a href="https://downloads.mariadb.org/mariadb/repositories/">https://downloads.mariadb.org/mariadb/repositories/</a></p>
]]></content>
  </entry>
  <entry>
    <title>nginx</title>
    <url>/2018/11/08/nginx/</url>
    <content><![CDATA[<span id="more"></span>

<p><a href="https://www.nginx.com/">官网</a></p>
<ul>
<li>expires</li>
</ul>
<p><a href="https://www.cnblogs.com/yuanzai12345/p/5946743.html">Nginx设置expires设定页面缓存时间 不缓存或一直使用缓存</a></p>
<h1 id="版本简介"><a href="#版本简介" class="headerlink" title="版本简介"></a>版本简介</h1><ul>
<li>Mainline 主线开发版本，版本号为奇数</li>
<li>Stable   当前稳定版本，版本号为偶数</li>
<li>Legacy   历年稳定版本</li>
</ul>
<h2 id="源码安装"><a href="#源码安装" class="headerlink" title="源码安装"></a>源码安装</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget http://nginx.org/download/nginx-1.14.0.tar.gz</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tar -zxvf nginx-1.14.0.tar.gz</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> nginx-1.14.0</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">./configure --with-http_ssl_module --with-http_v2_module</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">make</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Configuration summary</span><br><span class="line">  + using system PCRE library</span><br><span class="line">  + OpenSSL library is not used</span><br><span class="line">  + using system zlib library</span><br><span class="line"></span><br><span class="line">  nginx path prefix:          &quot;/usr/local/nginx&quot;</span><br><span class="line">  nginx binary file:          &quot;/usr/local/nginx/sbin/nginx&quot;</span><br><span class="line">  nginx modules path:         &quot;/usr/local/nginx/modules&quot;</span><br><span class="line">  nginx configuration prefix: &quot;/usr/local/nginx/conf&quot;</span><br><span class="line">  nginx configuration file:   &quot;/usr/local/nginx/conf/nginx.conf&quot;</span><br><span class="line">  nginx pid file:             &quot;/usr/local/nginx/logs/nginx.pid&quot;</span><br><span class="line">  nginx error log file:       &quot;/usr/local/nginx/logs/error.log&quot;</span><br><span class="line">  nginx http access log file: &quot;/usr/local/nginx/logs/access.log&quot;</span><br><span class="line">  nginx http client request body temporary files: &quot;client_body_temp&quot;</span><br><span class="line">  nginx http proxy temporary files:   &quot;proxy_temp&quot;</span><br><span class="line">  nginx http fastcgi temporary files: &quot;fastcgi_temp&quot;</span><br><span class="line">  nginx http uwsgi temporary files:   &quot;uwsgi_temp&quot;</span><br><span class="line">  nginx http scgi temporary files:    &quot;scgi_temp&quot;</span><br></pre></td></tr></table></figure>
<h2 id="Nginx-操作命令"><a href="#Nginx-操作命令" class="headerlink" title="Nginx 操作命令"></a>Nginx 操作命令</h2><ul>
<li>nginx -s reload 重新加载配置文件</li>
<li>nginx -s reopen 重新打开日志文件</li>
<li>nginx -t        测试 nginx 配置文件是否正确</li>
<li>nginx -t -c &#x2F;path&#x2F;to&#x2F;nginx.conf 测试 nginx 配置文件是否正确</li>
<li>nginx -s stop 快速停止 nginx</li>
</ul>
<h2 id="附："><a href="#附：" class="headerlink" title="附："></a>附：</h2><blockquote>
<ul>
<li>NGINX 官网      <a href="http://www.nginx.org/">www.nginx.org</a></li>
<li>NGINX docs      nginx.org&#x2F;en&#x2F;docs</li>
<li>NGINX configure nginx.org&#x2F;en&#x2F;docs&#x2F;configure.html</li>
<li>tar 命令 man.linuxde.net&#x2F;tartar</li>
</ul>
</blockquote>
]]></content>
      <tags>
        <tag>linux</tag>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>os-host</title>
    <url>/2020/02/24/os-host/</url>
    <content><![CDATA[<p>The hosts file is one of several system facilities that assists in addressing network nodes in a computer network. It is a common part of an operating system’s Internet Protocol (IP) implementation, and serves the function of translating human-friendly hostnames into numeric protocol addresses, called IP addresses, that identify and locate a host in an IP network.</p>
<span id="more"></span>

<table>
<thead>
<tr>
<th>系统</th>
<th>host 文件路径</th>
</tr>
</thead>
<tbody><tr>
<td>Windows</td>
<td>C:\Windows\System32\drivers\etc\hosts</td>
</tr>
<tr>
<td>Linux&#x2F;Mac</td>
<td>&#x2F;etc&#x2F;hosts</td>
</tr>
</tbody></table>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>加快域名解析</li>
<li>重定向恶意域名</li>
<li>虚拟域名</li>
</ul>
<p><a href="https://github.com/googlehosts/hosts">https://github.com/googlehosts/hosts</a></p>
<p>添加下面两行内容到hosts文件中</p>
<p>151.101.72.249 github.global.ssl.fastly.net</p>
<p>192.30.253.112 github.com</p>
]]></content>
  </entry>
  <entry>
    <title>开源镜像站</title>
    <url>/2019/09/01/os-mirror/</url>
    <content><![CDATA[<p>Mirror sites or mirrors are replicas of other websites or any network node. Such sites have different URLs than the original site, but host identical or near-identical content. Mirror sites are often located in a different geographic region than the original, or upstream site. The purpose of mirrors is to reduce network traffic, improve access speed, ensure availability of the original site for technical or political reasons, or provide a real-time backup of the original site. </p>
<span id="more"></span>

<ul>
<li><a href="https://mirrors.tuna.tsinghua.edu.cn/">清华大学开源软件镜像站</a></li>
<li><a href="http://mirrors.163.com/">网易开源镜像站</a></li>
<li><a href="https://mirrors.cloud.tencent.com/">腾讯云软件源站</a></li>
<li><a href="https://mirrors.huaweicloud.com/">华为开源镜像站</a></li>
<li><a href="https://mirrors.aliyun.com/">阿里巴巴开源镜像站</a></li>
<li><a href="http://mirrors.ustc.edu.cn/">中国科学技术大学开源软件镜像</a></li>
<li><a href="http://mirrors.neusoft.edu.cn/">东软信息学院开源镜像站</a></li>
<li><a href="https://mirror.bjtu.edu.cn/">北京交通大学自由与开源软件镜像站</a></li>
<li><a href="http://mirrors.zju.edu.cn/">浙江大学开源镜像站</a></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>System Variables Path</title>
    <url>/2020/02/19/os-path/</url>
    <content><![CDATA[<p>The PATH variable makes it easy to run commonly used programs located in their own folders. If used unwisely, however, the value of the PATH variable can slow down the operating system by searching too many locations, or invalid locations.</p>
<span id="more"></span>

<h2 id="Linux-命令"><a href="#Linux-命令" class="headerlink" title="Linux 命令"></a>Linux 命令</h2><ol>
<li>date 时间</li>
<li>useradd 用户添加</li>
<li>whoami 当前登录用户</li>
<li>chmod -R 777 dirname 将dirname授权给所有用户</li>
<li>echo $PS1 显示提示符格式</li>
<li>ls 深蓝色：文件夹&#x2F;目录 点开头：隐藏文件</li>
<li>ls -a</li>
<li>alias 起别名</li>
<li>type -a 查看本质</li>
</ol>
<p>! 调用历史</p>
<h3 id="设置-path"><a href="#设置-path" class="headerlink" title="设置 path"></a>设置 path</h3><p><code>.profile</code> 记录了 bash 会在哪些目录查找命令。 bash 会根据 PATH 变量的设置自动寻找输入的命令。如果有同名的命令，按照路径顺序找到后返回执行，不再继续寻找。有同名的指令可以输入路径运行。</p>
<p>默认的路径：</p>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">~/bin</span><br><span class="line">~/.local/bin</span><br><span class="line">/usr/local/sbin</span><br><span class="line">/usr/local/bin</span><br><span class="line">/usr/sbin</span><br><span class="line">/usr/bin</span><br><span class="line">/sbin</span><br><span class="line">/bin</span><br><span class="line">/usr/games</span><br><span class="line">/usr/local/games</span><br></pre></td></tr></table></figure>

<h2 id="Windows-运行常用的命令"><a href="#Windows-运行常用的命令" class="headerlink" title="Windows 运行常用的命令"></a>Windows 运行常用的命令</h2><table>
<thead>
<tr>
<th>命令</th>
<th>含义</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>appwiz.cpl</td>
<td>程序和功能</td>
<td>常用于卸载软件</td>
</tr>
<tr>
<td>logoff</td>
<td>注销</td>
<td>注销计算机</td>
</tr>
<tr>
<td>shutdown</td>
<td>60秒倒计时关机命令</td>
<td></td>
</tr>
<tr>
<td>cmd</td>
<td>cmd</td>
<td>命令提示符</td>
</tr>
<tr>
<td>calc</td>
<td>计算器</td>
<td></td>
</tr>
<tr>
<td>cleanmgr</td>
<td>磁盘清理</td>
<td></td>
</tr>
<tr>
<td>msconfig</td>
<td>系统配置实用程序</td>
<td></td>
</tr>
<tr>
<td>osk</td>
<td>屏幕键盘</td>
<td></td>
</tr>
<tr>
<td>psr</td>
<td>步骤记录器</td>
<td></td>
</tr>
<tr>
<td>snippingtool</td>
<td>截图工具</td>
<td>已被截图和草图取代</td>
</tr>
<tr>
<td>winver</td>
<td>关于”Windows”</td>
<td>查看 Windows 版本</td>
</tr>
<tr>
<td>explorer</td>
<td>资源管理器</td>
<td></td>
</tr>
<tr>
<td>regedit</td>
<td>注册表编辑器</td>
<td></td>
</tr>
<tr>
<td>taskmgr</td>
<td>任务管理器</td>
<td></td>
</tr>
<tr>
<td>compmgmt.msc</td>
<td>计算机管理</td>
<td></td>
</tr>
<tr>
<td>devmgmt.msc</td>
<td>设备管理器</td>
<td></td>
</tr>
</tbody></table>
<h3 id="设置-path-1"><a href="#设置-path-1" class="headerlink" title="设置 path"></a>设置 path</h3><p>$Env:path&#x3D;”.&#x2F;.venv&#x2F;Scripts&#x2F;;”+$Env:path</p>
]]></content>
  </entry>
  <entry>
    <title>OS Setting</title>
    <url>/2019/06/07/os-setting/</url>
    <content><![CDATA[<h2 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h2><p>暴力删除废弃文件夹</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">DEL</span> /F /A /Q \\?\%<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">RD</span> /S /Q \\?\%<span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>&#x2F;P 删除每一个文件之前提示确认。<br>&#x2F;F 强制删除只读文件。<br>&#x2F;S 从所有子目录删除指定文件。<br>&#x2F;Q 安静模式。删除全局通配符时，不要求确认。<br>&#x2F;A 根据属性选择要删除的文件。</p>
<p>cmd &#x2F;c dir：是执行完dir命令后关闭命令窗口；</p>
<p>cmd &#x2F;k dir：是执行完dir命令后不关闭命令窗口。</p>
]]></content>
  </entry>
  <entry>
    <title>Chrome的使用</title>
    <url>/2019/06/11/os-software-chrome/</url>
    <content><![CDATA[<span id="more"></span>

<ol>
<li>设置搜索引擎</li>
</ol>
<h3 id="vimium"><a href="#vimium" class="headerlink" title="vimium"></a>vimium</h3><p><a href="https://github.com/philc/vimium">官网</a></p>
<h3 id="油猴（Tampermonkey）"><a href="#油猴（Tampermonkey）" class="headerlink" title="油猴（Tampermonkey）"></a>油猴（Tampermonkey）</h3><p><a href="http://www.tampermonkey.net/">官网</a></p>
<ul>
<li><p><a href="https://greasyfork.org/">https://greasyfork.org/</a></p>
</li>
<li><p><a href="https://greasyfork.org/zh-CN">Greasy Fork</a></p>
</li>
</ul>
<h3 id="图片助手（ImageAssistant）"><a href="#图片助手（ImageAssistant）" class="headerlink" title="图片助手（ImageAssistant）"></a>图片助手（ImageAssistant）</h3><p><a href="https://www.pullywood.com/ImageAssistant/">官网</a></p>
]]></content>
  </entry>
  <entry>
    <title>Most Used Software</title>
    <url>/2019/12/16/os-software/</url>
    <content><![CDATA[<p>常用的软件官网</p>
<span id="more"></span>

<h2 id="Windows-环境下常用的软件"><a href="#Windows-环境下常用的软件" class="headerlink" title="Windows 环境下常用的软件"></a>Windows 环境下常用的软件</h2><table>
<thead>
<tr>
<th>软件</th>
<th>类别</th>
<th>官网</th>
</tr>
</thead>
<tbody><tr>
<td>VScode</td>
<td>文本编辑</td>
<td><a href="https://code.visualstudio.com/">https://code.visualstudio.com/</a></td>
</tr>
<tr>
<td>7-zip</td>
<td>压缩</td>
<td><a href="https://www.7-zip.org/">https://www.7-zip.org/</a></td>
</tr>
<tr>
<td>Chrome</td>
<td>浏览器</td>
<td><a href="https://google.cn/chrome/">https://google.cn/chrome/</a></td>
</tr>
<tr>
<td>Snipaste</td>
<td>截图</td>
<td><a href="https://zh.snipaste.com/">https://zh.snipaste.com/</a></td>
</tr>
<tr>
<td>AHK</td>
<td>快捷键</td>
<td><a href="https://www.autohotkey.com/">https://www.autohotkey.com/</a></td>
</tr>
<tr>
<td>百度网盘</td>
<td>资源</td>
<td><a href="https://yun.baidu.com/">https://yun.baidu.com/</a></td>
</tr>
<tr>
<td>TIM</td>
<td>即时通讯</td>
<td><a href="https://im.qq.com/">https://im.qq.com/</a></td>
</tr>
<tr>
<td>企业微信</td>
<td>即时通讯</td>
<td><a href="https://work.weixin.qq.com/">https://work.weixin.qq.com/</a></td>
</tr>
<tr>
<td>微信</td>
<td>即时通讯</td>
<td><a href="https://weixin.qq.com/">https://weixin.qq.com/</a></td>
</tr>
<tr>
<td>Dism++</td>
<td>清理</td>
<td><a href="https://www.chuyu.me/">https://www.chuyu.me</a></td>
</tr>
<tr>
<td>GifCam</td>
<td>动图制作</td>
<td><a href="http://blog.bahraniapps.com/gifcam/">http://blog.bahraniapps.com/gifcam/</a></td>
</tr>
<tr>
<td>GiF Resizer</td>
<td>图片处理</td>
<td><a href="http://www.ashongsoft.com/product/gif-resizer.html">http://www.ashongsoft.com/</a></td>
</tr>
<tr>
<td>Image Converter One</td>
<td>图片处理</td>
<td><a href="http://www.ashongsoft.com/product/image-converter-one.html">http://www.ashongsoft.com/</a></td>
</tr>
<tr>
<td>Rufus</td>
<td>U盘启动</td>
<td><a href="https://rufus.ie/zh_CN.html">https://rufus.ie/zh_CN.html</a></td>
</tr>
<tr>
<td>Lantern</td>
<td>翻墙</td>
<td><a href="https://github.com/getlantern/">https://github.com/getlantern/</a></td>
</tr>
<tr>
<td>DiskGenius</td>
<td>分区</td>
<td><a href="http://www.diskgenius.cn/">http://www.diskgenius.cn/</a></td>
</tr>
<tr>
<td>火绒</td>
<td>安全</td>
<td><a href="https://www.huorong.cn/">https://www.huorong.cn/</a></td>
</tr>
<tr>
<td>微PE工具箱</td>
<td>系统运维</td>
<td><a href="http://www.wepe.com.cn/">http://www.wepe.com.cn/</a></td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>Eclipse</title>
    <url>/2018/11/08/os-tool-eclipse/</url>
    <content><![CDATA[<span id="more"></span>

<h2 id="Eclipse-下载"><a href="#Eclipse-下载" class="headerlink" title="Eclipse 下载"></a>Eclipse 下载</h2><ul>
<li><a href="http://www.eclipse.org/downloads/packages/">Eclipse Packages</a></li>
<li><a href="https://wiki.eclipse.org/Eclipse/Installation#Install_a_JVM">Eclipse &#x2F;安装-Eclipsepedia</a></li>
</ul>
<h2 id="JAVA-SE-下载（Eclipse-4-7-之后-jdk-版本最低为-1-8）"><a href="#JAVA-SE-下载（Eclipse-4-7-之后-jdk-版本最低为-1-8）" class="headerlink" title="JAVA SE 下载（Eclipse 4.7 之后 jdk 版本最低为 1.8）"></a>JAVA SE 下载（Eclipse 4.7 之后 jdk 版本最低为 1.8）</h2><ul>
<li><a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">Java SE - Downloads | Oracle Technology Network | Oracle</a></li>
<li><a href="http://openjdk.java.net/">OpenJDK</a></li>
<li><a href="http://www.loongnix.org/index.php/Java">龙芯OpenJDK</a></li>
</ul>
<h2 id="Eclipse-安装语言包"><a href="#Eclipse-安装语言包" class="headerlink" title="Eclipse 安装语言包"></a>Eclipse 安装语言包</h2><ul>
<li><p><a href="https://archive.eclipse.org/technology/babel/">Babel Archived downloads</a><br>使用“”&gt;Help“Install New Software…”打开安装向导<br>添加Babel p2存储库：<a href="http://download.eclipse.org/technology/babel/update-site/R0.16.0/photon/">http://download.eclipse.org/technology/babel/update-site/R0.16.0/photon/</a><br>选择&#x2F;安装您选择的语言包（Babel Language Packs in Chinese (Simplified)），一路同意<br>完成后，重启Eclipse，你应该得到一个翻译的Eclipse</p>
</li>
<li><p><a href="https://wiki.eclipse.org/Eclipse.ini">eclipse.ini-Eclipsepedia</a></p>
</li>
</ul>
]]></content>
      <tags>
        <tag>软件</tag>
        <tag>IDE</tag>
      </tags>
  </entry>
  <entry>
    <title>java</title>
    <url>/2019/12/16/os-tool-java/</url>
    <content><![CDATA[<span id="more"></span>

<p><a href="https://www.oracle.com/java/technologies/javase-downloads.html">Java SE Downloads</a><br><a href="https://docs.oracle.com/en/java/">Java Documentation</a><br><a href="https://jakarta.ee/">Jakarta® EE Software</a></p>
<p>yum install java-latest-openjdk</p>
<p>java 中文显示不正常</p>
<blockquote>
<p>JAVA_TOOL_OPTIONS -Dfile.encoding&#x3D;UTF-8</p>
</blockquote>
<p>jlink 部署</p>
]]></content>
  </entry>
  <entry>
    <title>Nodejs</title>
    <url>/2019/08/06/os-tool-node/</url>
    <content><![CDATA[<span id="more"></span>

<p><a href="https://nodejs.org/">官网</a></p>
<p><a href="https://github.com/nvm-sh/nvm#node-version-manager---">nvm</a></p>
<p><a href="https://github.com/nodesource/distributions#enterprise-linux-based-distributions">nodesource</a></p>
<h2 id="切换-npm-源"><a href="#切换-npm-源" class="headerlink" title="切换 npm 源"></a>切换 npm 源</h2><p>Node 的官方模块仓库网速太慢，模块仓库需要切换到阿里的源。</p>
<p>不安装 cnpm 只用<a href="https://npm.taobao.org/">淘宝镜像</a>，设置 npm 的镜像：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org/</span><br></pre></td></tr></table></figure>

<p>执行下面的命令，确认是否切换成功。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm config get registry</span><br></pre></td></tr></table></figure>

<h2 id="yarn"><a href="#yarn" class="headerlink" title="yarn"></a>yarn</h2><p><a href="https://yarnpkg.com/">官网</a></p>
<p><a href="https://mirrors.huaweicloud.com/yarn/v1.19.1/yarn-1.19.1.msi">https://mirrors.huaweicloud.com/yarn/v1.19.1/yarn-1.19.1.msi</a><br><a href="https://mirrors.huaweicloud.com/yarn/">https://mirrors.huaweicloud.com/yarn/</a></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 若经常网络异常，执行此句</span></span><br><span class="line">yarn config <span class="built_in">set</span> registry https://registry.npm.taobao.org/ -g</span><br><span class="line">yarn config <span class="built_in">set</span> registry https://mirrors.huaweicloud.com/repository/npm/</span><br></pre></td></tr></table></figure>

<p><a href="https://www.linuxidc.com/Linux/2018-05/152389.htm">如何在CentOS Linux 7.5上安装Node.js</a></p>
]]></content>
      <tags>
        <tag>node</tag>
        <tag>yarn</tag>
        <tag>npm</tag>
      </tags>
  </entry>
  <entry>
    <title>oracle</title>
    <url>/2020/03/02/os-tool-oracle/</url>
    <content><![CDATA[<span id="more"></span>
<ul>
<li><p><a href="https://www.oracle.com/database/technologies/oracle-database-software-downloads.html">Database Software Downloads | Oracle</a></p>
</li>
<li><p><a href="https://docs.oracle.com/en/database/oracle/oracle-database/index.html">Oracle Database Documentation - Oracle Database</a></p>
</li>
<li><p>Oracle Enterprise Manager Database Express</p>
</li>
</ul>
<p><a href="https://localhost:5500/em">https://localhost:5500/em</a></p>
<ul>
<li>lsnrctl 监听服务管理</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看运行状态</span></span><br><span class="line">lsnrctl status</span><br><span class="line"><span class="comment"># 启动监听</span></span><br><span class="line">lsnrctl start</span><br><span class="line"><span class="comment"># 关闭监听</span></span><br><span class="line">lsnrctl stop</span><br></pre></td></tr></table></figure>

<ul>
<li>sqlplus</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sqlplus -H</span><br><span class="line"><span class="comment"># 不登录</span></span><br><span class="line">sqlplus /nolog</span><br><span class="line"><span class="comment"># 超级管理员</span></span><br><span class="line">conn / as sysdba <span class="comment"># 操作系统身份认证</span></span><br><span class="line">conn sys as sysdba</span><br><span class="line"><span class="comment"># 普通管理员</span></span><br><span class="line">conn system</span><br><span class="line"><span class="comment"># 普通用户(用户名无效)</span></span><br><span class="line">conn scott</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><figcaption><span>plus</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 启动实例并打开数据库</span></span><br><span class="line">startup</span><br><span class="line"><span class="comment">-- 关闭实例</span></span><br><span class="line">shutdown</span><br><span class="line"><span class="comment">-- 查看当前登录用户</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">user</span>;</span><br><span class="line"><span class="comment">-- 查看当前登录的用户信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> user_users;</span><br><span class="line"><span class="comment">-- 查询用户</span></span><br><span class="line"><span class="keyword">select</span> username <span class="keyword">from</span> dba_users;</span><br><span class="line"><span class="comment">-- 执行 sql 文件，导入 scott 用户</span></span><br><span class="line"><span class="variable">@oracle</span>_installer_path\rdbms\admin\scott.sql</span><br><span class="line"><span class="comment">-- 解锁 scott 用户</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">user</span> scott account unlock ; </span><br><span class="line"><span class="comment">-- 设置 scott 用户的密码为 tiger</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">user</span> scott identified <span class="keyword">by</span> tiger;</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>Python 3.x</title>
    <url>/2018/11/17/os-tool-python-env/</url>
    <content><![CDATA[<h2 id="Python-3-安装"><a href="#Python-3-安装" class="headerlink" title="Python 3 安装"></a>Python 3 安装</h2><span id="more"></span>

<h2 id="pypi-源配置"><a href="#pypi-源配置" class="headerlink" title="pypi 源配置"></a>pypi 源配置</h2><h3 id="常见在线-pypi-repository"><a href="#常见在线-pypi-repository" class="headerlink" title="常见在线 pypi repository"></a>常见在线 pypi repository</h3><ul>
<li>华为云 <a href="https://mirrors.huaweicloud.com/repository/pypi/simple">https://mirrors.huaweicloud.com/repository/pypi/simple</a></li>
<li>清华 <a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a></li>
</ul>
<h3 id="配置-pypi-镜像源"><a href="#配置-pypi-镜像源" class="headerlink" title="配置 pypi 镜像源"></a>配置 pypi 镜像源</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 更新 pip 至最新版</span></span><br><span class="line">pip install -i &lt;pypi repository&gt; pip -U</span><br><span class="line"><span class="comment"># 配置 pypi 镜像源</span></span><br><span class="line">pip config <span class="built_in">set</span> global.index-url &lt;pypi repository&gt;</span><br></pre></td></tr></table></figure>

<h2 id="Pip-包管理"><a href="#Pip-包管理" class="headerlink" title="Pip 包管理"></a>Pip 包管理</h2><p><a href="https://pip.pypa.io/">官网</a></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 导出依赖包名至 requirements.txt</span></span><br><span class="line">pip freeze &gt; requirements.txt</span><br><span class="line"><span class="comment"># 安装 requirements.txt 中列出的包</span></span><br><span class="line">pip install -r requirements.txt</span><br><span class="line"><span class="comment"># 卸载包</span></span><br><span class="line">pip uninstall [options] &lt;package&gt;</span><br><span class="line"><span class="comment"># 卸载 requirements.txt 中列出的包</span></span><br><span class="line">pip uninstall [options] -r &lt;requirements file&gt;</span><br><span class="line"><span class="comment"># Options:</span></span><br><span class="line"><span class="comment"># -r, --requirement &lt;file&gt;</span></span><br><span class="line"><span class="comment"># -y, --yes  不询问，直接卸载</span></span><br></pre></td></tr></table></figure>

<h2 id="conda-包管理"><a href="#conda-包管理" class="headerlink" title="conda 包管理"></a>conda 包管理</h2><ul>
<li><a href="https://docs.conda.io/en/latest/">conda 官网</a><br><a href="https://docs.conda.io/en/latest/miniconda.html">https://docs.conda.io/en/latest/miniconda.html</a></li>
</ul>
<h2 id=""><a href="#" class="headerlink" title=""></a></h2><ul>
<li><a href="https://www.python.org/">官网</a> </li>
<li><a href="https://docs.python.org/">文档</a> </li>
<li><a href="https://pip.pypa.io/">包管理工具 pip</a></li>
</ul>
<h2 id="切片"><a href="#切片" class="headerlink" title="切片"></a>切片</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="type">List</span>[start:end:step]</span><br><span class="line"><span class="comment"># 反转列表</span></span><br><span class="line"><span class="type">List</span>[::-<span class="number">1</span>]</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>python</tag>
        <tag>Django</tag>
        <tag>框架</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows</title>
    <url>/2020/03/24/os-windows/</url>
    <content><![CDATA[<span id="more"></span>

<p>备忘录</p>
<ul>
<li>选 管理员配置符号链接<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># google C:\Program Files (x86)\Google</span></span><br><span class="line"><span class="comment"># C:\Program Files\Microsoft Office</span></span><br><span class="line"><span class="comment"># C:\Program Files\Microsoft Office 15</span></span><br><span class="line">mklink /d 默认安装位置 用户指定的安装位置</span><br><span class="line"></span><br><span class="line">New-Item -ItemType SymbolicLink -Path E:\DukePath\path3 -Target E:\DukePath\julia.lnk</span><br></pre></td></tr></table></figure></li>
</ul>
<table>
<thead>
<tr>
<th>文件类型</th>
<th>文件类型</th>
<th>路径</th>
<th>空间占用</th>
<th>适用类型</th>
<th>特点</th>
</tr>
</thead>
<tbody><tr>
<td>符号链接</td>
<td>symlink</td>
<td>可相对</td>
<td>很小</td>
<td>文件</td>
<td>可跨磁盘</td>
</tr>
<tr>
<td>符号链接</td>
<td>symlinkd</td>
<td>可相对</td>
<td>很小</td>
<td>目录</td>
<td>可跨磁盘</td>
</tr>
<tr>
<td>目录联接</td>
<td>junction</td>
<td>绝对</td>
<td>很小</td>
<td>目录</td>
<td>只能跨本地磁盘</td>
</tr>
<tr>
<td>硬链接</td>
<td>同源文件</td>
<td>绝对</td>
<td>与源文件大小相同</td>
<td>文件</td>
<td>不可跨分区</td>
</tr>
<tr>
<td>快捷方式</td>
<td>lnk</td>
<td>绝对</td>
<td>几百字节，与源文件大小无关</td>
<td>文件、目录、网站、命令</td>
<td>仅人使用舒服</td>
</tr>
</tbody></table>
<ul>
<li>Windows 10 环境下，删除任何链接均不会对源文件造成影响。</li>
<li>快捷方式可携带参数使用，程序读写一般是对快捷方式文件操作，而其它方式会直接对源文件操作，或同步操作至源文件。</li>
<li>符号链接使用相对路径会导致移动后失效，而其它方式则不会。</li>
<li>将源文件移除后，只有硬链接依然可以访问，其它方式则将失效。</li>
<li>相比快捷方式，使用符号链接尽管可以节约空间，但无法完全取代快捷方式。</li>
<li>符号链接多用于分离系统和软件分区，解除路径依赖、空间占用问题；整合 path 环境，便于系统的重装和维护。</li>
<li>Windows操作系统启动时不支持符号链接。所以不应该对系统盘下系统目录、根目录的系统配置文件、隐藏文件进行操作。</li>
</ul>
<p>Link    指定新的符号链接名称。</p>
<p>Target  指定新链接引用的路径<br>                (相对或绝对)。</p>
<p>cmd | <a href="https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/mklink">mklink</a></p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"><span class="comment">rem 符号链接-文件</span></span><br><span class="line">mklink Link Target</span><br><span class="line"><span class="comment">rem 符号链接-目录</span></span><br><span class="line">mklink /d Link Target </span><br><span class="line"><span class="comment">rem 目录联接</span></span><br><span class="line">mklink /j Link Target</span><br><span class="line"><span class="comment">rem 硬链接</span></span><br><span class="line">mklink /h Link Target</span><br></pre></td></tr></table></figure>

<p>PowerShell | <a href="https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/new-item">new-item</a></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 符号链接</span></span><br><span class="line"><span class="built_in">New-Item</span> <span class="literal">-ItemType</span> SymbolicLink <span class="literal">-Path</span> Link <span class="literal">-Target</span> Target</span><br><span class="line"><span class="comment"># 目录联接</span></span><br><span class="line"><span class="built_in">New-Item</span> <span class="literal">-ItemType</span> Junction <span class="literal">-Path</span> Link <span class="literal">-Target</span> Target</span><br><span class="line"><span class="comment"># 硬链接</span></span><br><span class="line"><span class="built_in">New-Item</span> <span class="literal">-ItemType</span> HardLink <span class="literal">-Path</span> Link <span class="literal">-Target</span> Target</span><br></pre></td></tr></table></figure>


<ul>
<li><p>选 配置快捷键（带参数）</p>
</li>
<li><p>选 删除 OneDrive、自带游戏</p>
</li>
<li><p>选 配置打开文件资源管理器时打开此电脑</p>
</li>
<li><p>选 取消隐私选项</p>
</li>
<li><p>选 默认显示后缀名</p>
</li>
<li><p>选 关闭传递优化</p>
</li>
<li><p>配置用户文件路径</p>
</li>
<li><p>放置配置文件</p>
</li>
<li><p>配置 环境变量</p>
</li>
<li><p>更新驱动</p>
</li>
<li><p>选 安装 <a href="http://www.wepe.com.cn/">wepe</a></p>
</li>
<li><p>选 下载 <a href="https://www.microsoft.com/zh-cn/software-download/windows10">windows 10</a></p>
</li>
<li><p>更新 uwp 应用</p>
</li>
<li><p>安装&#x2F;配置 压缩软件</p>
</li>
<li><p>安装 浏览器</p>
</li>
<li><p>选 关闭虚拟内存</p>
</li>
</ul>
<p>备份</p>
<ul>
<li>环境变量 set path</li>
<li>配置文件 wifi、ssh、gradle<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 显示配置文件</span></span><br><span class="line">netsh wlan show profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导出 WiFi 文件</span></span><br><span class="line">netsh wlan <span class="built_in">export</span> profile folder=D:\ key=clear</span><br></pre></td></tr></table></figure></li>
<li>软件安装包</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>CentOS 下安装 PHP7</title>
    <url>/2019/07/08/php-env/</url>
    <content><![CDATA[<p>PHP Frequently Asked Questions</p>
<span id="more"></span>

<h2 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h2><ul>
<li>CentOS 7</li>
</ul>
<h2 id="源码安装-libiconv"><a href="#源码安装-libiconv" class="headerlink" title="源码安装 libiconv"></a>源码安装 libiconv</h2><p><a href="http://www.gnu.org/software/libiconv/">官网</a></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 切换至程序源代码目录</span></span><br><span class="line"><span class="built_in">cd</span> /usr/src</span><br><span class="line"><span class="comment"># 下载 libiconv</span></span><br><span class="line">wget https://ftp.gnu.org/pub/gnu/libiconv/libiconv-1.16.tar.gz</span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar -zxvf libiconv-1.16.tar.gz </span><br><span class="line"><span class="comment"># 配置</span></span><br><span class="line">./configure --prefix=/usr/local/libiconv</span><br><span class="line"><span class="comment"># 编译并安装</span></span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<h2 id="源码安装-php7"><a href="#源码安装-php7" class="headerlink" title="源码安装 php7"></a>源码安装 php7</h2><p><a href="https://www.php.net/">官网</a></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 切换至程序源代码目录</span></span><br><span class="line"><span class="built_in">cd</span> /usr/src</span><br><span class="line"><span class="comment"># 删除旧版本</span></span><br><span class="line"><span class="built_in">rm</span> -rf php-7.*</span><br><span class="line"><span class="comment"># 下载 php</span></span><br><span class="line">wget https://www.php.net/distributions/php-7.3.8.tar.gz</span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar -zxvf php-7.3.8.tar.gz</span><br><span class="line"><span class="comment"># 删除压缩包</span></span><br><span class="line"><span class="built_in">rm</span> php-7.3.8.tar.gz</span><br><span class="line"><span class="comment"># 切换至 php 目录</span></span><br><span class="line"><span class="built_in">cd</span> php-7.3.8</span><br><span class="line"><span class="comment"># 配置 makefile 脚本</span></span><br><span class="line">./configure</span><br><span class="line">--prefix=/usr/local/php <span class="comment"># 程序目录</span></span><br><span class="line">--with-iconv=/usr/local/libiconv</span><br><span class="line">--enable-fpm <span class="comment"># fastcgi 方式运行</span></span><br><span class="line">--with-pdo-mysql <span class="comment"># mysql 数据库</span></span><br><span class="line">--with-curl</span><br><span class="line">--with-zlib</span><br></pre></td></tr></table></figure>

<p>脚本配置成功</p>
<p><img src="/img/php/1.png" alt="脚本配置成功界面"></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># make 检查，可省略</span></span><br><span class="line">make <span class="built_in">test</span></span><br><span class="line"><span class="comment"># 杀死全部 php-fpm 进程</span></span><br><span class="line">killall php-fpm</span><br><span class="line"><span class="comment"># 编译并安装</span></span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="comment"># 切换 php 目录</span></span><br><span class="line"><span class="built_in">cd</span> /usr/local/php/</span><br><span class="line"><span class="comment"># 复制 php.ini 配置文件</span></span><br><span class="line"><span class="built_in">cp</span> /usr/src/php-7.3.8/php.ini-production lib/php.ini</span><br><span class="line"><span class="comment"># 复制 nginx 配置文件</span></span><br><span class="line"><span class="built_in">cp</span> etc/php-fpm.conf.default etc/php-fpm.conf</span><br><span class="line"><span class="comment"># 复制配置文件</span></span><br><span class="line"><span class="built_in">cp</span> etc/php-fpm.d/www.conf.default etc/php-fpm.d/www.conf</span><br><span class="line"><span class="comment"># 启动php-fpm</span></span><br><span class="line">./sbin/php-fpm</span><br><span class="line"><span class="comment"># 确认php-fpm成功</span></span><br><span class="line">ps aux | grep php</span><br><span class="line"><span class="comment"># 查看占用端口</span></span><br><span class="line">netstat -anpo | grep php</span><br></pre></td></tr></table></figure>

<h3 id="phpinfo-php"><a href="#phpinfo-php" class="headerlink" title="phpinfo.php"></a>phpinfo.php</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="title function_ invoke__">phpinfo</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="nginx-conf"><a href="#nginx-conf" class="headerlink" title="nginx.conf"></a>nginx.conf</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> <span class="regexp">~ \.php$</span> &#123;</span><br><span class="line">  <span class="attribute">root</span> /www/php; <span class="comment">#指定php的根目录</span></span><br><span class="line">  <span class="attribute">fastcgi_pass</span> <span class="number">127.0.0.1:9000</span>;<span class="comment">#php-fpm的默认端口是9000</span></span><br><span class="line">  <span class="attribute">fastcgi_index</span> index.php;</span><br><span class="line">  <span class="attribute">fastcgi_param</span> SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">  <span class="attribute">include</span> fastcgi_params;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="配置-php-模块"><a href="#配置-php-模块" class="headerlink" title="配置 php 模块"></a>配置 php 模块</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看当前已加载模块</span></span><br><span class="line">/usr/local/php/bin/php -m</span><br><span class="line"><span class="comment"># 切换至相应的模块源码目录</span></span><br><span class="line"><span class="built_in">cd</span> /usr/src/php-7.3.8/ext/curl/</span><br><span class="line"><span class="comment">#  设置软链接，防止头文件找不到的问题（类似问题同解）</span></span><br><span class="line"><span class="built_in">ln</span> -s /usr/src/php-7.3.8/ext/ ./ext</span><br><span class="line"><span class="comment"># 执行 phpize</span></span><br><span class="line">/usr/local/php/bin/phpize</span><br><span class="line"><span class="comment"># 配置</span></span><br><span class="line">./configure -with-php-config=/usr/local/php/bin/php-config</span><br><span class="line"><span class="comment"># 编译</span></span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="comment"># 查看对应的 so 文件</span></span><br><span class="line"><span class="built_in">ls</span> /usr/local/php/lib/php/extensions/no-debug-non-zts-20180731/</span><br><span class="line"><span class="comment"># 编辑配置文件，可通过 phpinfo 函数查找文件位置</span></span><br><span class="line">vi /usr/local/php/lib/php.ini</span><br><span class="line"><span class="comment"># 重启 php</span></span><br><span class="line">/usr/local/php/sbin/php-fpm restart</span><br></pre></td></tr></table></figure>

<p>编译安装可指定php.ini的路劲(多PHP版本共存的情况)<br>–with-config-file-path&#x3D;&#x2F;usr&#x2F;local&#x2F;php&#x2F;etc</p>
<h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><hr>
<ul>
<li>wget 的使用</li>
<li>tar 的使用</li>
<li>configure 的使用</li>
<li>make 的使用</li>
</ul>
<hr>
<p>.&#x2F;configure<br>–prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;php –with-iconv&#x3D;&#x2F;usr&#x2F;local&#x2F;libiconv –enable-fpm –with-pdo-mysql </p>
]]></content>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>php Web Server</title>
    <url>/2019/07/31/php-run/</url>
    <content><![CDATA[<blockquote>
<p>PHP 5.4.0起， CLI SAPI 提供了一个内置的Web服务器。主要用于本地开发使用，不可用于线上产品环境。</p>
</blockquote>
<span id="more"></span>

<h2 id="php-Web-Server"><a href="#php-Web-Server" class="headerlink" title="php Web Server"></a>php Web Server</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 方式一，仅配置端口启动，以当前目录为服务器根目录</span></span><br><span class="line">php -S localhost:8000</span><br><span class="line"><span class="comment"># 方式二，配置端口，并指定根目录</span></span><br><span class="line">php -S localhost:8000 -t foo/</span><br><span class="line"><span class="comment"># 方式三，配置端口，调用路由（router）脚本</span></span><br><span class="line">php -S localhost:8000 router.php</span><br></pre></td></tr></table></figure>

<p>URI请求会被发送到PHP所在的的工作目录（Working Directory）进行处理，除非你使用了-t参数来自定义不同的目录。</p>
<p>如果请求未指定执行哪个PHP文件，则默认执行目录内的index.php 或者 index.html。如果这两个文件都不存在，服务器会返回404错误。</p>
<p>当你在命令行启动这个Web Server时，如果指定了一个PHP文件，则这个文件会作为一个“路由”脚本，意味着每次请求都会先执行这个脚本。如果这个脚本返回 FALSE ，那么直接返回请求的文件（例如请求静态文件不作任何处理）。否则会把输出返回到浏览器。</p>
<h3 id="router-php-示例代码"><a href="#router-php-示例代码" class="headerlink" title="router.php 示例代码"></a>router.php 示例代码</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// router.php</span></span><br><span class="line"><span class="comment">// 请求图片直接显示图片，请求HTML则显示“Welcome to PHP”</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\.(?:png|jpg|jpeg|gif)$/&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&quot;REQUEST_URI&quot;</span>]))</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;    <span class="comment">// 直接返回请求的文件</span></span><br><span class="line"><span class="keyword">else</span> &#123; </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;p&gt;Welcome to PHP&lt;/p&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>


<blockquote>
<p>参考文章 </p>
</blockquote>
<ul>
<li><a href="https://www.php.net/manual/zh/features.commandline.webserver.php">内置Web Server</a></li>
</ul>
]]></content>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>PowerShell笔记</title>
    <url>/2018/06/03/powershell/</url>
    <content><![CDATA[<h2 id="shell-语法"><a href="#shell-语法" class="headerlink" title="shell 语法"></a>shell 语法</h2><ul>
<li>变量声明以“$”开头后跟变量名</li>
<li>变量名不区分大小写，可包含数字、字母和下划线</li>
<li>预定义变量</li>
<li>$null（空值）$true（真值为真）$false（真值为假）$_（当前处理的元素）</li>
</ul>
<table>
<thead>
<tr>
<th>命令</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>net share</td>
<td>查看共享文件</td>
</tr>
</tbody></table>
<h2 id="脚本运行"><a href="#脚本运行" class="headerlink" title="脚本运行"></a>脚本运行</h2><h3 id="运行权限"><a href="#运行权限" class="headerlink" title="运行权限"></a>运行权限</h3><p>Windows 默认不允许任何脚本运行，可以使用”Set-ExecutionPolicy” cmdlet 来改变的你PowerShell环境。例如，你可以使用如下命令让PowerShell运行在无限制的环境之下：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看当前脚本运行权限</span></span><br><span class="line">ExecutionPolicy</span><br><span class="line"><span class="comment"># 设置脚本运行权限，允许任何脚本运行</span></span><br><span class="line"><span class="built_in">Set-ExecutionPolicy</span> Unrestricted;</span><br></pre></td></tr></table></figure>

<ul>
<li>Restricted——默认的设置， 不允许任何script运行</li>
<li>AllSigned——只能运行经过数字证书签名的script</li>
<li>RemoteSigned——运行本地的script不需要数字签名，但是运行从网络上下载的script就必须要有- 数字签名</li>
<li>Unrestricted——允许所有的script运行</li>
</ul>
<p>如果报错，使用管理员的权限启动命令命令行重试。</p>
<h3 id="java-调用脚本"><a href="#java-调用脚本" class="headerlink" title="java 调用脚本"></a>java 调用脚本</h3><p>使用 java 调用 powershell 脚本，可以使用以下命令：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> <span class="string">&quot;cmd /c powershell </span></span><br><span class="line"><span class="string">-ExecutionPolicy RemoteSigned -noprofile </span></span><br><span class="line"><span class="string">-noninteractive -file \&quot;&quot;</span>+ scriptFilename + <span class="string">&quot;\&quot;&quot;</span>;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>Django 部署</title>
    <url>/2018/07/18/python-Django/</url>
    <content><![CDATA[<span id="more"></span>

<h2 id="阅读基础"><a href="#阅读基础" class="headerlink" title="阅读基础"></a>阅读基础</h2><ul>
<li><a href="Python3.md">Python3 安装</a></li>
</ul>
<h2 id="配置虚拟环境"><a href="#配置虚拟环境" class="headerlink" title="配置虚拟环境"></a>配置虚拟环境</h2><blockquote>
<p>表中命令从上往下执行即可，部分需要先切换目录，下同。本文为学习笔记，仅供参照，详细流程请阅读参考文章和官方文档。</p>
</blockquote>
<table>
<thead>
<tr>
<th></th>
<th>操作</th>
<th>命令</th>
</tr>
</thead>
<tbody><tr>
<td>-</td>
<td>创建虚拟环境</td>
<td><code>python3 -m venv /www/venv</code></td>
</tr>
<tr>
<td>-</td>
<td>激活虚拟环境</td>
<td><code>source /www/venv/bin/activate</code></td>
</tr>
<tr>
<td>-</td>
<td>Windows下激活</td>
<td><code>.\venv\Scripts\activate</code></td>
</tr>
<tr>
<td>-</td>
<td>使用 uwsgi 部署</td>
<td><code>pip install uwsgi</code></td>
</tr>
<tr>
<td>-</td>
<td>使用 Gunicorn 部署</td>
<td><code>pip install gunicorn</code></td>
</tr>
<tr>
<td>-</td>
<td>安装环境包</td>
<td><code>pip install -r requirements</code></td>
</tr>
<tr>
<td>-</td>
<td>生成环境包</td>
<td><code>pip freeze &gt; requirements.txt</code></td>
</tr>
<tr>
<td>-</td>
<td>退出环境</td>
<td><code>deactivate</code></td>
</tr>
</tbody></table>
<h2 id="Django-项目开发"><a href="#Django-项目开发" class="headerlink" title="Django 项目开发"></a>Django 项目开发</h2><table>
<thead>
<tr>
<th></th>
<th>操作</th>
<th>命令</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>-</td>
<td>创建 django 项目 web</td>
<td><code>django-admin startproject web</code></td>
<td>生成项目目录</td>
</tr>
<tr>
<td>-</td>
<td>创建应用 count</td>
<td><code>python manage.py startapp count</code></td>
<td>开发使用</td>
</tr>
<tr>
<td>-</td>
<td>创建超级账户</td>
<td><code>python manage.py createsuperuser</code></td>
<td>开发、部署使用</td>
</tr>
<tr>
<td>-</td>
<td>生成迁移文件</td>
<td><code>python manage.py makemigrations</code></td>
<td>在 migrations 生成文件</td>
</tr>
<tr>
<td>-</td>
<td>执行迁移</td>
<td><code>python manage.py migrate</code></td>
<td></td>
</tr>
<tr>
<td>-</td>
<td>同步静态文件</td>
<td><code>python manage.py collectstatic</code></td>
<td>部署使用</td>
</tr>
<tr>
<td>-</td>
<td>启动开发服务器</td>
<td><code>python manage.py runserver</code></td>
<td>开发、测试使用</td>
</tr>
</tbody></table>
<h2 id="配置-setting-py"><a href="#配置-setting-py" class="headerlink" title="配置 setting.py"></a>配置 setting<code>.</code>py</h2><pre><code>- LANGUAGE_CODE = &#39;zh-Hans&#39;
- TIME_ZONE = &#39;Asia/Shanghai&#39;（视情况配置）
- ALLOWED_HOSTS = [&#39;公网ip&#39;,域名&#39;]（部署前配置）
- DEBUG = False（NGINX 后配置）
</code></pre>
<h2 id="部署准备"><a href="#部署准备" class="headerlink" title="部署准备"></a>部署准备</h2><pre><code>- 删除 migrations 下数字开头的所有 python 文件
- uwsgi.ini
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[uwsgi]</span></span><br><span class="line"><span class="attr">chdir</span> = /www/web</span><br><span class="line"><span class="attr">module</span> = web.wsgi:applocation</span><br><span class="line"><span class="attr">home</span> = /www/venv</span><br><span class="line"><span class="attr">socket</span> = <span class="number">172.18</span>.<span class="number">173.33</span>:<span class="number">8099</span></span><br><span class="line"><span class="attr">stats</span> = <span class="number">172.18</span>.<span class="number">173.33</span>:<span class="number">9191</span></span><br><span class="line"><span class="attr">master</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">processes</span> = <span class="number">5</span></span><br><span class="line"><span class="attr">vacuum</span> = <span class="literal">true</span></span><br></pre></td></tr></table></figure>
</code></pre>
<h2 id="部署测试"><a href="#部署测试" class="headerlink" title="部署测试"></a>部署测试</h2><pre><code>- 开发服务器测试 `python36 manage.py runserver 172.18.173.33:80`
- uwsgi 部署测试 `uwsgi uwsgi.ini`
- Gunicorn 部署测试 `gunicorn -b 172.18.173.33:80 web.wsgi`
</code></pre>
<h2 id="配置-nginx"><a href="#配置-nginx" class="headerlink" title="配置 nginx"></a>配置 nginx</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 安装 uwsgi</span><br><span class="line">pip3 install uwsgi</span><br><span class="line"># 安装 nginx</span><br><span class="line">yum install nginx</span><br></pre></td></tr></table></figure>

<p>测试</p>
<p>nginx -t</p>
<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul>
<li><a href="https://www.jianshu.com/p/e13417a8bb7f">Django+Ubuntu WEB部署（超详细版）</a></li>
<li><a href="https://www.cnblogs.com/qingspace/p/6838747.html">跨过Nginx上基于uWSGI部署Django项目的坑</a></li>
<li><a href="https://www.jianshu.com/p/d6f9138fab7b">Django快速部署简约版 v3.0</a></li>
</ul>
]]></content>
      <tags>
        <tag>python</tag>
        <tag>Django</tag>
        <tag>框架</tag>
      </tags>
  </entry>
  <entry>
    <title>Jupyter</title>
    <url>/2019/07/16/python-Jupyter/</url>
    <content><![CDATA[<span id="more"></span>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">pip install jupyterlab</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ol>
<li><a href="https://jupyter.org/install">Installing the Jupyter Software</a></li>
<li><a href="https://github.com/jupyter/jupyter/wiki/Jupyter-kernels">Jupyter kernels</a></li>
</ol>
<h2 id="配置内核"><a href="#配置内核" class="headerlink" title="配置内核"></a>配置内核</h2><h2 id="设置默认起始目录"><a href="#设置默认起始目录" class="headerlink" title="设置默认起始目录"></a>设置默认起始目录</h2><ol>
<li>使用 shell 打开配置文件</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 获取默认配置文件路径，有配置的同学请按 N。</span></span><br><span class="line">jupyter notebook --generate-config</span><br><span class="line"><span class="comment"># vim 编辑配置文件，Windows下没有也可以用 start。</span></span><br><span class="line">vim ~/.jupyter/jupyter_notebook_config.py</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>取消<code>c.NotebookApp.notebook_dir</code>注释，即删除行前<code>#</code>符号</li>
<li>将要设置的默认起始目录填入后面的引号之中。</li>
</ol>
]]></content>
      <tags>
        <tag>IDE</tag>
        <tag>编辑器</tag>
      </tags>
  </entry>
  <entry>
    <title>python 组合数</title>
    <url>/2020/01/05/python-combinations/</url>
    <content><![CDATA[<p>组合是数学的重要概念之一。从 n 个不同元素中每次取出 m 个不同元素 ，不管其顺序合成一组，称为从 n 个元素中不重复地选取 m 个元素的一个组合。所有这样的组合的种数称为组合数。</p>
<span id="more"></span>
<p>$$ C_n^m&#x3D;\frac{A_n^m}{m!}&#x3D;\frac{n!}{(n-m)!m!}&#x3D;\frac{\prod_{i&#x3D;n-m+1}^{n}i}{m!}&#x3D;C_n^{n-m} \quad (n \geq m \geq 1)$$</p>
<p>结论：</p>
<ol>
<li>从n个不同元素中取出m个元素的组合数即n的阶乘除以除以(n-m)的阶乘与m的阶乘的积的商。</li>
</ol>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> factorial</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">combinations</span>(<span class="params">n,m</span>):</span><br><span class="line">    <span class="keyword">return</span> factorial(n)//factorial(m)//factorial(n-m)</span><br></pre></td></tr></table></figure>

<ol>
<li>化简可得，从n个不同元素中取出m个元素的组合数即出现一次的偏大整数的积除以出现三次的偏小整数的积的商。</li>
</ol>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">combinations</span>(<span class="params">n,m</span>):</span><br><span class="line">    result = <span class="number">1</span></span><br><span class="line">    <span class="built_in">min</span>,<span class="built_in">max</span>=<span class="built_in">sorted</span>((m,n-m))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n,<span class="number">0</span>,-<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> i&gt;<span class="built_in">max</span>:</span><br><span class="line">            result *= i</span><br><span class="line">        <span class="keyword">elif</span> i &lt;= <span class="built_in">min</span>:</span><br><span class="line">            result = result // i</span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure>

<ol>
<li>n个连续整数的积可被n的阶乘整除。</li>
</ol>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">combinations</span>(<span class="params">n,m</span>):</span><br><span class="line">    result = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">        result=result*(n-i)//(i+<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure>

<ol>
<li>从n个不同元素中取出m个元素的组合数与从n个不同元素中取出(n-m)个元素的组合数相等。</li>
</ol>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">combinations</span>(<span class="params">n,m</span>):</span><br><span class="line">    result = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">min</span>(n-m,m)):</span><br><span class="line">        result=result*(n-i)//(i+<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure>

<p><a href="https://mp.weixin.qq.com/s?__biz=MzI4MzM2MDgyMQ==&mid=2247484700&idx=1&sn=a92cd5b572f3426215c5077edd911566&chksm=eb8aae46dcfd27504c6c32c3c2b7d12756b97b2850354366e7841ca71df38e9590891dea9c5f&mpshare=1&scene=1&srcid=0105CnjEy8AVCvacDDGmaD2l&sharer_sharetime=1578196700974&sharer_shareid=3726fbb92179608ce6915a88bf3209c9&exportkey=AeVJmUCXvaPlGzrSnNstWZE=&pass_ticket=BTWnZASExfQ2s44l/aa1gGcF8st07sk22Ohh+QylaMjuas6mCV6xn8HzMRrOrhta#rd">Python版组合数计算方法优化思路和源码</a></p>
]]></content>
  </entry>
  <entry>
    <title>Python DataBase</title>
    <url>/2019/10/25/python-database/</url>
    <content><![CDATA[<p>DataBase</p>
<span id="more"></span>

<h2 id="DataBase"><a href="#DataBase" class="headerlink" title="DataBase"></a>DataBase</h2><table>
<thead>
<tr>
<th>DATABASE</th>
<th>Python DB-API</th>
<th>INSTALL</th>
<th>WEBPAGE</th>
</tr>
</thead>
<tbody><tr>
<td>CockroachDB</td>
<td>import psycopg2</td>
<td>pip install psycopg2</td>
<td><a href="https://www.cockroachlabs.com/">Site</a> <a href="https://github.com/cockroachdb/cockroach">Github</a> <a href="https://cockroachlabs.com/docs/stable/">Docs</a></td>
</tr>
<tr>
<td>DB2</td>
<td>import ibm_db_dbi</td>
<td>pip install ibm-db</td>
<td><a href="https://github.com/ibmdb/python-ibmdb">Docs</a></td>
</tr>
<tr>
<td>MariaDB</td>
<td>import mariadb</td>
<td>pip install mariadb</td>
<td><a href="https://github.com/mariadb-corporation/mariadb-connector-python/wiki">Docs</a></td>
</tr>
<tr>
<td>MongoDB</td>
<td>import pymongo</td>
<td>pip install pymongo</td>
<td><a href="https://api.mongodb.com/python/current">Docs</a></td>
</tr>
<tr>
<td>MongoDB</td>
<td>import motor.motor_tornado</td>
<td>pip install motor</td>
<td><a href="https://motor.readthedocs.io/">Docs</a></td>
</tr>
<tr>
<td>MySQL</td>
<td>import mysql.connector</td>
<td>pip install mysql-connector-python</td>
<td><a href="https://dev.mysql.com/doc/connector-python/en/">Docs</a></td>
</tr>
<tr>
<td>Oracle</td>
<td>import cx_Oracle</td>
<td>pip install cx-Oracle</td>
<td><a href="https://oracle.github.io/python-cx_Oracle/">Docs</a></td>
</tr>
<tr>
<td>PostgreSQL</td>
<td>import psycopg2</td>
<td>pip install psycopg2</td>
<td><a href="http://initd.org/psycopg/docs/">Docs</a></td>
</tr>
<tr>
<td>PostgreSQL</td>
<td>from pg import DB</td>
<td>pip install PyGreSQL</td>
<td><a href="http://www.pygresql.org/contents/index.html">Docs</a></td>
</tr>
<tr>
<td>SQL Server</td>
<td>import pymssql</td>
<td>pip install pymssql</td>
<td><a href="https://pymssql.readthedocs.io/en/latest/">Dosc</a></td>
</tr>
<tr>
<td>SQLite</td>
<td>import sqlite3</td>
<td>installed</td>
<td><a href="https://docs.python.org/3/library/sqlite3.html">Docs</a></td>
</tr>
</tbody></table>
<h2 id="Object-Relational-Mapping"><a href="#Object-Relational-Mapping" class="headerlink" title="Object Relational Mapping"></a>Object Relational Mapping</h2><table>
<thead>
<tr>
<th>ORM</th>
<th>INSTALL</th>
<th>WEBPAGE</th>
</tr>
</thead>
<tbody><tr>
<td>Peewee</td>
<td>pip install peewee</td>
<td><a href="https://github.com/coleifer/peewee">Github</a> <a href="http://docs.peewee-orm.com/en/latest/">Docs</a></td>
</tr>
<tr>
<td>SQLAlchemy</td>
<td>pip install SQLAlchemy</td>
<td><a href="https://www.sqlalchemy.org/">Site</a> <a href="https://docs.sqlalchemy.org/">Docs</a></td>
</tr>
<tr>
<td>SQLObject</td>
<td>pip install sqlobject</td>
<td><a href="http://www.sqlobject.org/">Site</a></td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>python-functions</title>
    <url>/2020/03/27/python-functions/</url>
    <content><![CDATA[<span id="more"></span>]]></content>
  </entry>
  <entry>
    <title>Python 3.x</title>
    <url>/2018/11/17/python-linux/</url>
    <content><![CDATA[<h2 id="Python-3-安装"><a href="#Python-3-安装" class="headerlink" title="Python 3 安装"></a>Python 3 安装</h2><span id="more"></span>

<h3 id="源码安装（推荐）"><a href="#源码安装（推荐）" class="headerlink" title="源码安装（推荐）"></a>源码安装（推荐）</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下载安装包</span></span><br><span class="line">wget https://www.python.org/ftp/python/3.7.1/Python-3.7.1.tgz</span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar -xzvf Python-3.7.1.tgz</span><br><span class="line"><span class="comment"># 切换目录</span></span><br><span class="line"><span class="built_in">cd</span> Python-3.7.1</span><br><span class="line"><span class="comment"># 生成 makefile 文件</span></span><br><span class="line">./configure --prefix=/usr/local/Python --enable-optimizations</span><br><span class="line"><span class="comment"># 编译安装</span></span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"><span class="built_in">hash</span> -r</span><br><span class="line"><span class="built_in">ln</span> -s /usr/local/Python/bin/python3.7 /usr/bin/python3</span><br><span class="line"><span class="built_in">ln</span> -s /usr/local/Python/bin/pip /usr/bin/pip3</span><br></pre></td></tr></table></figure>

<h3 id="CentOS-软件包方式安装"><a href="#CentOS-软件包方式安装" class="headerlink" title="CentOS 软件包方式安装"></a>CentOS 软件包方式安装</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装 python3</span></span><br><span class="line">yum install python36</span><br><span class="line"><span class="comment"># 安装 pip3</span></span><br><span class="line">python36 get-pip.py</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>python</tag>
        <tag>Django</tag>
        <tag>框架</tag>
      </tags>
  </entry>
  <entry>
    <title>Python Web</title>
    <url>/2020/02/06/python-web/</url>
    <content><![CDATA[<p>Python Web Frequently Asked Questions</p>
<span id="more"></span>


<ul>
<li><a href="https://weppy.org/">weppy</a></li>
</ul>
<h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><table>
<thead>
<tr>
<th>模板</th>
<th>pip</th>
<th>page</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.makotemplates.org/">Mako</a></td>
<td><code>pip install Mako</code></td>
<td><a href="https://docs.makotemplates.org/en/latest/">Docs</a></td>
</tr>
<tr>
<td><a href="https://mustache.github.io/">mustache</a></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="flask-基础操作"><a href="#flask-基础操作" class="headerlink" title="flask 基础操作"></a>flask 基础操作</h2><ul>
<li><a href="https://www.jianshu.com/p/44d88abb9515">Flask中request请求、make_response响应、redirect跳转</a></li>
</ul>
<h2 id="flask-的request-full-path当链接无参数时末尾会自动添加一个"><a href="#flask-的request-full-path当链接无参数时末尾会自动添加一个" class="headerlink" title="flask 的request.full_path当链接无参数时末尾会自动添加一个?"></a>flask 的request.full_path当链接无参数时末尾会自动添加一个?</h2><h2 id="uwsgi-下载"><a href="#uwsgi-下载" class="headerlink" title="uwsgi 下载"></a>uwsgi 下载</h2><ul>
<li><a href="https://uwsgi-docs.readthedocs.io/en/latest/Download.html">https://uwsgi-docs.readthedocs.io/en/latest/Download.html</a></li>
<li><a href="https://uwsgi-docs.readthedocs.io/en/latest/Install.html">https://uwsgi-docs.readthedocs.io/en/latest/Install.html</a></li>
<li><a href="https://uwsgi-docs.readthedocs.io/en/latest/WSGIquickstart.html">https://uwsgi-docs.readthedocs.io/en/latest/WSGIquickstart.html</a></li>
</ul>
<h2 id="uwsgi部署flask测试"><a href="#uwsgi部署flask测试" class="headerlink" title="uwsgi部署flask测试"></a>uwsgi部署flask测试</h2><ul>
<li><a href="https://flask.palletsprojects.com/en/1.1.x/deploying/wsgi-standalone/#uwsgi">https://flask.palletsprojects.com/en/1.1.x/deploying/wsgi-standalone/#uwsgi</a></li>
<li><a href="https://flask.palletsprojects.com/en/1.1.x/deploying/uwsgi/">https://flask.palletsprojects.com/en/1.1.x/deploying/uwsgi/</a></li>
</ul>
<h2 id="部署测试，uwsgi-中-http、http-socket、socket-区别，unix套字节"><a href="#部署测试，uwsgi-中-http、http-socket、socket-区别，unix套字节" class="headerlink" title="部署测试，uwsgi 中 http、http-socket、socket 区别，unix套字节"></a>部署测试，uwsgi 中 http、http-socket、socket 区别，unix套字节</h2><ul>
<li><a href="https://www.cnblogs.com/BlueFire-py/p/11381494.html?tdsourcetag=s_pctim_aiomsg">https://www.cnblogs.com/BlueFire-py/p/11381494.html?tdsourcetag=s_pctim_aiomsg</a></li>
</ul>
<h2 id="uwsgi-中-root-部署，指定uid、gid、chmod-socket"><a href="#uwsgi-中-root-部署，指定uid、gid、chmod-socket" class="headerlink" title="uwsgi 中 root 部署，指定uid、gid、chmod-socket"></a>uwsgi 中 root 部署，指定uid、gid、chmod-socket</h2><ul>
<li><a href="https://www.cnblogs.com/BlueFire-py/p/11381494.html?tdsourcetag=s_pctim_aiomsg">https://www.cnblogs.com/BlueFire-py/p/11381494.html?tdsourcetag=s_pctim_aiomsg</a></li>
</ul>
<h2 id="nginx-配置"><a href="#nginx-配置" class="headerlink" title="nginx 配置"></a>nginx 配置</h2><ul>
<li><a href="https://www.cnblogs.com/BlueFire-py/p/11380439.html">https://www.cnblogs.com/BlueFire-py/p/11380439.html</a></li>
</ul>
<h2 id="nginx-通过-uwsgi-部署-flask"><a href="#nginx-通过-uwsgi-部署-flask" class="headerlink" title="nginx 通过 uwsgi 部署 flask"></a>nginx 通过 uwsgi 部署 flask</h2><ul>
<li><a href="http://www.pythondoc.com/flask/deploying/uwsgi.html#nginx">http://www.pythondoc.com/flask/deploying/uwsgi.html#nginx</a></li>
<li><a href="https://www.missshi.cn/api/view/blog/5b1511a213d85b1251000000">https://www.missshi.cn/api/view/blog/5b1511a213d85b1251000000</a></li>
<li><a href="https://www.jianshu.com/p/76b28c7e71cc">https://www.jianshu.com/p/76b28c7e71cc</a></li>
<li><a href="https://my.oschina.net/zhaojunhui/blog/3045805?tdsourcetag=s_pctim_aiomsg">https://my.oschina.net/zhaojunhui/blog/3045805?tdsourcetag=s_pctim_aiomsg</a></li>
</ul>
<h2 id="nginx-部署后-链接中的-x2F-x2F-会自动变为一个-x2F"><a href="#nginx-部署后-链接中的-x2F-x2F-会自动变为一个-x2F" class="headerlink" title="nginx 部署后 链接中的&#x2F;&#x2F;会自动变为一个&#x2F;"></a>nginx 部署后 链接中的&#x2F;&#x2F;会自动变为一个&#x2F;</h2><ul>
<li><a href="https://blog.csdn.net/github_33644920/article/details/52914932">https://blog.csdn.net/github_33644920/article/details/52914932</a></li>
</ul>
<h2 id="uwsgi-systemctl"><a href="#uwsgi-systemctl" class="headerlink" title="uwsgi systemctl"></a>uwsgi systemctl</h2><ul>
<li><a href="https://uwsgi-docs-zh.readthedocs.io/zh_CN/latest/Emperor.html?tdsourcetag=s_pctim_aiomsg">https://uwsgi-docs-zh.readthedocs.io/zh_CN/latest/Emperor.html?tdsourcetag=s_pctim_aiomsg</a></li>
<li><a href="https://uwsgi-docs-zh.readthedocs.io/zh_CN/latest/Systemd.html">https://uwsgi-docs-zh.readthedocs.io/zh_CN/latest/Systemd.html</a></li>
</ul>
]]></content>
      <tags>
        <tag>FAQ</tag>
      </tags>
  </entry>
  <entry>
    <title>python wheel 打包</title>
    <url>/2019/11/09/python-wheel/</url>
    <content><![CDATA[<p><a href="https://packaging.python.org/">官方教程</a><br><a href="https://packaging.python.org/overview/">概述</a><br><a href="https://packaging.python.org/tutorials/">教程</a><br><a href="https://packaging.python.org/guides/">指南</a></p>
<span id="more"></span>

<h3 id="github-action"><a href="#github-action" class="headerlink" title="github action"></a>github action</h3><ol>
<li>创建 GitHub 仓库</li>
<li>配置 pypi token</li>
<li>配置 action 脚本</li>
<li>配置本地 git 环境</li>
<li>配置 本地仓库</li>
<li>配置打包及开发环境</li>
</ol>
<h3 id="最小pypi包"><a href="#最小pypi包" class="headerlink" title="最小pypi包"></a>最小pypi包</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">.gitignore</span><br><span class="line">LICENSE</span><br><span class="line">README.md</span><br><span class="line">setup.py</span><br><span class="line">docs/</span><br><span class="line">    /README.md</span><br><span class="line">module/</span><br><span class="line">    /__init__.py <span class="comment"># python 包标志</span></span><br><span class="line">    /__main__.py</span><br></pre></td></tr></table></figure>

<h3 id="打包环境"><a href="#打包环境" class="headerlink" title="打包环境"></a>打包环境</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># bdist</span></span><br><span class="line"><span class="comment"># bdist_wheel</span></span><br><span class="line">pip install setuptools wheel twine</span><br><span class="line"><span class="comment"># twine upload dist/*</span></span><br></pre></td></tr></table></figure>

<h3 id="init-py"><a href="#init-py" class="headerlink" title="init.py"></a><strong>init</strong>.py</h3><blockquote>
<p><strong>init</strong>.py 文件表明当前文件夹为 Python 模块,模块被导入时实际为此文件，模块方式运行时先执行此文件。</p>
</blockquote>
<h4 id="init-py-中常配置的模块参数"><a href="#init-py-中常配置的模块参数" class="headerlink" title="init.py 中常配置的模块参数"></a><strong>init</strong>.py 中常配置的模块参数</h4><ul>
<li><strong>all</strong> 指定 <code>form package import *</code> 的内容</li>
<li><strong>version</strong> 指定版本</li>
</ul>
<h3 id="main-py"><a href="#main-py" class="headerlink" title="main.py"></a><strong>main</strong>.py</h3><blockquote>
<p><strong>main</strong>.py 文件表明当前文件夹可作为模块运行，可以文件夹、模块方式运行时执行此文件，相当于依赖模块的示例程序。</p>
</blockquote>
<h3 id="setup-py"><a href="#setup-py" class="headerlink" title="setup.py"></a>setup.py</h3><blockquote>
<p>setup.py 文件是 setuptools 打包的脚本文件，文件内应当写明包相关信息，以及其它的附属操作。</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 官方示例</span></span><br><span class="line"><span class="comment"># https://github.com/pypa/sampleproject/blob/master/setup.py</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># read the contents of README file</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;README.md&quot;</span>, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> fh:</span><br><span class="line">    long_description = fh.read()</span><br><span class="line"></span><br><span class="line">setuptools.setup(</span><br><span class="line">    <span class="comment"># https://packaging.python.org/guides/distributing-packages-using-setuptools/</span></span><br><span class="line">    name=<span class="string">&quot;example-pkg-YOUR-USERNAME-HERE&quot;</span>, <span class="comment"># Replace with your own username</span></span><br><span class="line">    version=<span class="string">&quot;0.0.1&quot;</span>,</span><br><span class="line">    author=<span class="string">&quot;Example Author&quot;</span>,</span><br><span class="line">    author_email=<span class="string">&quot;author@example.com&quot;</span>,</span><br><span class="line">    description=<span class="string">&quot;A small example package&quot;</span>,</span><br><span class="line">    long_description=long_description,</span><br><span class="line">    long_description_content_type=<span class="string">&quot;text/markdown&quot;</span>,</span><br><span class="line">    url=<span class="string">&quot;https://github.com/pypa/sampleproject&quot;</span>,</span><br><span class="line">    packages=setuptools.find_packages(),</span><br><span class="line">    classifiers=[</span><br><span class="line">        <span class="comment"># https://pypi.org/classifiers/</span></span><br><span class="line">        <span class="string">&quot;Programming Language :: Python :: 3&quot;</span>,</span><br><span class="line">        <span class="string">&quot;License :: OSI Approved :: MIT License&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Operating System :: OS Independent&quot;</span>,</span><br><span class="line">    ],</span><br><span class="line">    python_requires=<span class="string">&#x27;&gt;=3.6&#x27;</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Python Windows</title>
    <url>/2019/10/21/python-win/</url>
    <content><![CDATA[<span id="more"></span>

<h3 id="Window-下-Python-多版本问题"><a href="#Window-下-Python-多版本问题" class="headerlink" title="Window 下 Python 多版本问题"></a>Window 下 Python 多版本问题</h3><ul>
<li>python 2 使用 python</li>
<li>python 3 使用 py</li>
<li>python x.y 使用 py -x.y</li>
</ul>
<h3 id="项目虚拟运行环境"><a href="#项目虚拟运行环境" class="headerlink" title="项目虚拟运行环境"></a>项目虚拟运行环境</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 指定 python 版本 x.y 创建虚拟环境</span></span><br><span class="line">py -x.y -m venv <span class="built_in">env</span></span><br><span class="line"><span class="comment"># 激活环境</span></span><br><span class="line">.\<span class="built_in">env</span>\Scripts\activate</span><br><span class="line"><span class="comment"># 更新 pip</span></span><br><span class="line">python -m pip install --upgrade pip</span><br><span class="line"><span class="comment"># 退出环境</span></span><br><span class="line">deactivate</span><br></pre></td></tr></table></figure>

<h3 id="搭建本地-pypi-服务器"><a href="#搭建本地-pypi-服务器" class="headerlink" title="搭建本地 pypi 服务器"></a>搭建本地 pypi 服务器</h3><p><a href="https://pypi.org/project/pypiserver/">pypi-server</a></p>
<ul>
<li>服务器端</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装 pypiserver</span></span><br><span class="line">pip install pypiserver [passlib，watchdog]</span><br><span class="line"><span class="comment"># 创建包目录</span></span><br><span class="line"><span class="built_in">mkdir</span> packages</span><br><span class="line"><span class="comment"># 启动 pypiserver</span></span><br><span class="line">pypi-server -p 8080 --fallback-url https://pypi.tuna.tsinghua.edu.cn/simple -d packages packages</span><br></pre></td></tr></table></figure>

<ul>
<li>客户端</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">pip config <span class="built_in">set</span> global.index-url http://localhost:8080/simple</span><br></pre></td></tr></table></figure>


<h2 id="python-内存"><a href="#python-内存" class="headerlink" title="python 内存"></a>python 内存</h2><h3 id="变量-id-相等，即-a-is-b"><a href="#变量-id-相等，即-a-is-b" class="headerlink" title="变量 id() 相等，即 a is b"></a>变量 id() 相等，即 a is b</h3><ul>
<li>整数范围在[-5,256]的变量，即小整数</li>
<li>没有空格等特殊字符的字符串，应用 账号</li>
</ul>
<h3 id="gc（garbage-collection）垃圾回收机制"><a href="#gc（garbage-collection）垃圾回收机制" class="headerlink" title="gc（garbage collection）垃圾回收机制"></a>gc（garbage collection）垃圾回收机制</h3><ul>
<li>引用计数机制<br>  sys.getrefcount(obj) 获取引用计数<br>  增加引用计数<br>  对象赋值<br>  对象作为形参<br>  对象计入到列表<br>  减少引用计数<br>  从列表删除<br>  del obj</li>
<li>gc.disable() 关闭垃圾回收机制，测试使用，开发不要用<br>gc.get_threshold() 获取gc模块中自动执行垃圾回收的频率<br>gc.get_count() 获取当店自动执行垃圾回收的计算器<br>gc.set_threshold() 设置自动执行垃圾回收的频率<br>gc.collect() 手动调用</li>
<li>隔代回收机制<br>  相互引用。。。</li>
</ul>
<h3 id="内置属性"><a href="#内置属性" class="headerlink" title="内置属性"></a>内置属性</h3><p><strong>dict</strong> 类属性 由类属性构成的字典<br><strong>doc</strong> 类文档<br><strong>name</strong> 类名<br><strong>module</strong> 类所在模块<br><strong>bases</strong>  类的父类构成元素，由所有父类组成的元组<br><strong>getattribute</strong> 属性拦截器</p>
<h3 id="内建函数"><a href="#内建函数" class="headerlink" title="内建函数"></a>内建函数</h3><p>range(start&#x3D;0,end,step&#x3D;1)<br>map(function,iterable)迭代器处理可迭代对象<br>filter(function,iterable) function 返回true保留<br>functools.reduce(function,iterable)累function处理<br>sorted() reverse为ture 则从大到小，自定义对象需要指定key&#x3D;lambda obj:obj.属性<br>lambda x:x*2</p>
]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>人民币转大写</title>
    <url>/2022/03/19/rmb/</url>
    <content><![CDATA[<span id="more"></span>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">decimal v = decimal.Parse(&quot;123.00&quot;);</span><br><span class="line">            var s = v.ToString(&quot;#L#E#D#C#K#E#D#C#J#E#D#C#I#E#D#C#H#E#D#C#G#E#D#C#F#E#D#C0.0B0A/&quot;);</span><br><span class="line">            var d = Regex.Replace(s, @&quot;(((?&lt;=^-)|(^[^-]))[^1-9]*((?=[1-9])|((?&lt;c&gt;0\.)[^1-9]*(?=/$))))|((?&lt;=[1-9]A)/)|((?&lt;z&gt;0)[0A-E]*((?=[1-9])|(?&lt;-z&gt;(?=[F-L\./]|$))))|((?&lt;b&gt;[F-L])(?&lt;z&gt;0)[0A-L]*(?=[1-9]|(?&lt;-z&gt;(?=[\./]|$))))&quot;, &quot;$&#123;b&#125;$&#123;z&#125;$&#123;c&#125;&quot;);</span><br><span class="line">            var r = Regex.Replace(d, &quot;.&quot;, m =&gt; &quot;正，负元整零壹贰叁肆伍陆柒捌玖拾屲亗岌岄岪峘分角拾佰仟万亿兆京垓秭穰沟涧正载极&quot;[m.Value[0] - &#x27;+&#x27;].ToString());</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>shell</title>
    <url>/2018/08/22/shell/</url>
    <content><![CDATA[<span id="more"></span>

<h2 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h2><p>在 shell 中输入命令运行程序，程序的正常输出信息（标准输出）和一些出错信息（标准错误）会通过 shell 显示在屏幕上。</p>
<p>有时候我们并不需要把这些输出信息（包括标准输出和标准错误）显示在屏幕上，或需要把这些输出信息保存在一个文件中，这时就需要进行输出重定向。输入重定向也是如此。</p>
<p>执行重定向操作的是 shell ，而不是程序。 shell 把重定向符号解释成指令，将标准输出（或标准错误）指向文件，而不是当前显示设备。输入重定向也是如此。</p>
<p>shell将&lt;、&gt;、&gt;&gt;解释成指令，用来把一条命令的输入或输出重定向到一个文件。</p>
<table>
<thead>
<tr>
<th>类型</th>
<th>操作符</th>
<th>用途</th>
</tr>
</thead>
<tbody><tr>
<td>重定向标准输入</td>
<td>&lt;</td>
<td>将命令中接收输入的途径由默认的键盘更改为指定的文件</td>
</tr>
<tr>
<td>重定向标准输出</td>
<td>&gt;</td>
<td>以替换的方式将命令的执行结果输出到指定的文件，而不是直接显示在屏幕上</td>
</tr>
</tbody></table>
<ul>
<li>| &gt;&gt; | 将命令执行的结果追加输出到指定文件<br>重定向标准错误 | 2&gt; | 清空指定文件的内容，并将标准错误信息保存到该文件中</li>
<li>| 2&gt;&gt; | 将标准错误信息追加输出到指定的文件中<br>重定向标准输出和标准错误 | &amp;&gt;或&gt;&amp; | 将标准输出、标准错误的内容全部保存到指定的文件中，而不是直接显示在屏幕上</li>
</ul>
<h2 id="管道"><a href="#管道" class="headerlink" title="管道"></a>管道</h2><p>shell在解释命令遇到 | 时会创建管道，并创建两个进程，把标准输入输出重<br>定向到管道，前一个进程向管道写数据，后一个进程从管道读数据。</p>
<p>查找名称含有gcc的文件并使用wc计数<br>sudo find &#x2F; -name gcc | wc –l</p>
<p>查找名称含有ssh的进程<br>ps -ef | grep ssh</p>
<p>分页查看内容<br>ls –l –R &#x2F;usr&#x2F;share | less</p>
<p>排序文件<br>ls | sort –r</p>
<h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><h2 id="bash快捷键"><a href="#bash快捷键" class="headerlink" title="bash快捷键"></a>bash快捷键</h2><table>
<thead>
<tr>
<th align="right">按键</th>
<th align="left">含义</th>
</tr>
</thead>
<tbody><tr>
<td align="right">^A</td>
<td align="left">光标移到行首</td>
</tr>
<tr>
<td align="right">^B</td>
<td align="left">光标非破坏退格</td>
</tr>
<tr>
<td align="right">^C</td>
<td align="left">中断前台程序</td>
</tr>
<tr>
<td align="right">^D</td>
<td align="left">退出shell</td>
</tr>
<tr>
<td align="right">^E</td>
<td align="left">光标移到行尾</td>
</tr>
<tr>
<td align="right">^F</td>
<td align="left">光标右移</td>
</tr>
<tr>
<td align="right">^G</td>
<td align="left"></td>
</tr>
<tr>
<td align="right">^H</td>
<td align="left"></td>
</tr>
<tr>
<td align="right">^I</td>
<td align="left"></td>
</tr>
<tr>
<td align="right">^J</td>
<td align="left">新行</td>
</tr>
<tr>
<td align="right">^K</td>
<td align="left">删除光标后所有字符</td>
</tr>
<tr>
<td align="right">^L</td>
<td align="left">清屏</td>
</tr>
<tr>
<td align="right">^U</td>
<td align="left">删除光标前所有字符</td>
</tr>
<tr>
<td align="right">^R</td>
<td align="left">搜索历史命令，利用关键字</td>
</tr>
<tr>
<td align="right">ALT+.</td>
<td align="left">引用上一个命令的最后一个参数</td>
</tr>
<tr>
<td align="right">ESC+.</td>
<td align="left">引用上一个命令的最后一个参数</td>
</tr>
<tr>
<td align="right">!$</td>
<td align="left">引用上一个命令的最后一个参数</td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>Visual Studio Code</title>
    <url>/2019/07/29/vscode/</url>
    <content><![CDATA[<p>Visual Studio Code是简化的代码编辑器，支持诸如调试，任务运行和版本控制之类的开发操作。</p>
<span id="more"></span>

<h3 id="正则匹配"><a href="#正则匹配" class="headerlink" title="正则匹配"></a>正则匹配</h3><p>匹配HTML单行注释：<code>&lt;!--(.*?)--&gt;</code><br>匹配HTML多行注释：<code>&lt;!--([\s\S|\r]*?)--&gt;</code>或<code>&lt;!--([\w\W]*?)--&gt;</code></p>
]]></content>
  </entry>
  <entry>
    <title>web-Redirect</title>
    <url>/2021/07/26/web-Redirect/</url>
    <content><![CDATA[<span id="more"></span>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 避免缓存 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Pragma&quot;</span> <span class="attr">content</span>=<span class="string">&quot;no-cache&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Cache-Control&quot;</span> <span class="attr">content</span>=<span class="string">&quot;no-cache&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Expires&quot;</span> <span class="attr">content</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        location.<span class="property">href</span>=<span class="string">&quot;http://www.baidu.com&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">        location.<span class="title function_">replace</span>(<span class="string">&quot;http://www.baidu.com&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>Ctrl + F5 强制刷新  </p>
]]></content>
  </entry>
  <entry>
    <title>Cascading Style Sheets</title>
    <url>/2020/01/21/web-css/</url>
    <content><![CDATA[<p>Cascading Style Sheets (CSS) is a stylesheet language used to describe the presentation of a document written in HTML or XML (including XML dialects such as SVG, MathML or XHTML). CSS describes how elements should be rendered on screen, on paper, in speech, or on other media.</p>
<span id="more"></span>

<p>引入层叠样式表的方法包括：<br>外联式样式表<br>例：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/default.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>属性：rel 用来说明<link>元素在这里要完成的任务是连接一个独立的css文件。而href属性给出了所要连接css文件的url地址</p>
<p>内嵌式样式表：<br>例：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">td</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font</span>:<span class="number">9pt</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>:red</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.font105</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font</span>:<span class="number">10.5pt</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>:blue</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>元素内定<br>格式：<code>&lt;p style=&quot;font-size:10.5pt&quot;&gt;</code><br>导入式样式表</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">〈html&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="comment">&lt;!--</span></span></span><br><span class="line"><span class="comment"><span class="language-xml">@import url(css/home.css);</span></span></span><br><span class="line"><span class="comment"><span class="language-xml">--&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">....</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>css的优先级<br>越接近目标的样式定义优先级越高，高优先级样式将继承低优先级样式的未重叠定义但覆盖重叠的定义<br>如果4种样式表对同一元素定义了不同的样式，那么他们的优先级顺序从高到低是，元素内定，内嵌样式表，导入样式表，外联样式表。<br>css结构<br>例：td{font-size:10.5pt;color:#666666}<br>css样式包含两个基础部分，<br>选择符<td>和声明{font-size:10.5pt;color:#666666}<br>声明也有两部分组成：<br>属性font-size,color和值10.5pt,#666666<br>选择符分为6种<br>1元素选择符<br>当页面上多个元素的样式相同时，可以将多个元素放在一起定义，中间以逗号分开 例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">td</span>,<span class="selector-tag">p</span>,<span class="selector-tag">li</span>,<span class="selector-tag">input</span>,select&#123;<span class="attribute">font-size</span>:<span class="number">12px</span>;&#125;</span><br></pre></td></tr></table></figure>

<p>2class(类)选择符<br>例：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>.....<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="comment">&lt;!--</span></span></span><br><span class="line"><span class="comment"><span class="language-xml">.red&#123;font-size:10.5pt;color:#ff0000&#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-xml">--&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">body</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#ffffff&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span>士大夫井冈山地方官</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>还有一种方法就是限定可以应用它的页面元素<br>例：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>.....<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="comment">&lt;!--</span></span></span><br><span class="line"><span class="comment"><span class="language-xml">h1.red&#123;color:#ff0000&#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-xml">--&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">body</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#ffffff&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span>士大夫井冈山地方官</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span>九连环离开计划<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>3 id选择符<br>与class选择附类似，只是把’.’换成’#’<br>例：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-id">#select</span>&#123;<span class="attribute">font-size</span>:<span class="number">18px</span>;<span class="attribute">color</span>:<span class="number">#0000ff</span>&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">&quot;250&quot;</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">height</span>=<span class="string">&quot;50&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">id</span>=<span class="string">&quot;select&quot;</span>&gt;</span>id选择符<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>我们看到在调用ID选择附时与CLASS选择附类似，只是将class&#x3D;””换成了id&#x3D;””，方便页面脚本语言的调用<br>关联选择符</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="comment">&lt;!--</span></span></span><br><span class="line"><span class="comment"><span class="language-xml">td p&#123;font-size:18px;color:#0000ff&#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-xml">--&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">&quot;250&quot;</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">height</span>=<span class="string">&quot;50&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">关联选择符</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">关联选择符</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>我们设定了在元素中<td>的元素所包含文字的样式，只有在两个条件都满足是，样式在会起作用，</p>
<p>伪类选择符<br>是只能用在css选择符里，而不能用在html代码中的选择符<br>例：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span>&#123;<span class="attribute">color</span>:<span class="number">#000000</span>&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>&#123;<span class="attribute">color</span>:<span class="number">#cccccc</span>&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">color</span>:<span class="number">#ff0000</span>&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span>&#123;<span class="attribute">color</span>:#ooooff&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>关联选择符<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>关联选择符<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>关联选择符<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>关联选择符<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">〈/body&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>正确的顺序是a:link\a:visited\a:hover否则会引起页面上连接颜色混乱</p>
<p>伪元素选择符<br>与伪类选择符定义类似，目前被大多数浏览器支持的有两个：首行伪元素（first-line）和首字符伪元素(first-letter)是用来实现首行大写和首行下沉效果的<br>例：首行</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">p:first-line&#123;color:red;font-size:20pt&#125;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">dfgsadfgsdfgsdfgsdfgsdfgsdfgsdfgsdfgsdfgsdf...</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>长度随浏览器窗口大小而改变<br>首字</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">p:first-letter&#123;color:red;font-size:50pt;float:left;&#125;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">dfgsadfgsdfgsdfgsdfgsdfgsdfgsdfgsdfgsdfgsdf...</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>以上两种都只能应用于块状元素上</p>
<p>css规则<br>1.继承</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="comment">&lt;!--</span></span></span><br><span class="line"><span class="comment"><span class="language-xml">td&#123;font-size:12pt&#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-xml">p&#123;color:red&#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-xml">--&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">hesd</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">&quot;300&quot;</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">height</span>=<span class="string">&quot;150&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span>css规则<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>为最高级<td>次一级两种css用在一个属性元素上，相同的覆盖，不同的继承，</p>
<p>2.组合</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">td</span>&#123;<span class="attribute">font-size</span>:<span class="number">12pt</span>&#125;</span><br><span class="line"><span class="selector-class">.p1</span>&#123;<span class="attribute">font-size</span>:<span class="number">12pt</span>&#125;</span><br></pre></td></tr></table></figure>

<p>组合后</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">td</span>,<span class="selector-class">.p1</span>&#123;<span class="attribute">font-size</span>:<span class="number">12pt</span>&#125;</span><br></pre></td></tr></table></figure>

<p>3.层叠<br>在样式里定义过后，在表格属性中又定义一次</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="comment">&lt;!--</span></span></span><br><span class="line"><span class="comment"><span class="language-xml">red&#123;color:#ff0000 limportant&#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-xml">--&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">hesd</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">&quot;300&quot;</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">height</span>=<span class="string">&quot;150&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color:#0000ff&quot;</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span>决撒地方官<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<ul>
<li>css单位<br>分四大类：</li>
</ul>
<ol>
<li>长度单位<br>数值可以是整数，小数，正数，负数，0，后加单位（负值不要轻易使用）<br>换算关系：<br>1in(英寸)&#x3D;6pc(派)<br>1in(英寸)&#x3D;72pt(磅)<br>1in(英寸)&#x3D;2.54(厘米)<br>1cm(厘米)&#x3D;10mm(毫米)<br>1cm(厘米)&#x3D;0.3937(英寸)<br>1pt(磅)&#x3D;1&#x2F;72in(英寸)&#x3D;0.2478mm(毫米)<br>1pc(派)&#x3D;1&#x2F;6in(英寸)&#x3D;我国新四号铅字的尺寸</li>
<li>百分比单位</li>
<li>颜色单位</li>
<li>url单位<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-tag">div</span>属性</span><br><span class="line"><span class="attribute">color</span> : <span class="number">#999999</span>   文字颜色</span><br><span class="line">font-family : 宋体 文字字型</span><br><span class="line">font-size : <span class="number">10pt</span> 文字大小</span><br><span class="line">font-style:itelic 文字斜体育</span><br><span class="line">font-variant:small-caps 小字体</span><br><span class="line">letter-spacing : <span class="number">1pt</span> 文字间距</span><br><span class="line">line-height : <span class="number">200%</span> 设定行高</span><br><span class="line">font-weight:bold 文字粗体</span><br><span class="line">vertical-align:sub 下标字</span><br><span class="line">vertical-align:super 上标字</span><br><span class="line">text-decoration:line-through 加?h除线</span><br><span class="line">text-decoration:overline 加顶线</span><br><span class="line">text-decoration:underline 加底线</span><br><span class="line">text-decoration:none ?h除连接底线</span><br><span class="line">text-transform : capitalize 首字大写</span><br><span class="line">text-transform : uppercase 英文大写</span><br><span class="line">text-transform : lowercase 英文写</span><br><span class="line">text-align:right 文字*右对齐</span><br><span class="line">text-align:left 文字*左对齐</span><br><span class="line">text-align:center 文字置中对齐</span><br><span class="line">这些是一些简单的文字效果，可以应用到css的页面中。　</span><br><span class="line">背景</span><br><span class="line">background-color:black 背景颜色</span><br><span class="line">background-image : none 背景图片</span><br><span class="line">background-attachment : fixed 固定背景</span><br><span class="line">background-repeat : repeat 重复排列-网页预设</span><br><span class="line">background-repeat : no-repeat 不重复排列</span><br><span class="line">background-repeat : repeat-x 在x轴重复排列</span><br><span class="line">background-repeat : repeat-y 在y轴重复排列</span><br><span class="line">background-position : <span class="number">90%</span> <span class="number">90%</span> 背景图片x与y轴的位置 　</span><br><span class="line">链接</span><br><span class="line">A 所有超连接</span><br><span class="line">A:link 超连接文字格式</span><br><span class="line">A:visited 浏览过的连接文字格式</span><br><span class="line">A:active 按下连接的格式</span><br><span class="line">A:hover 鼠标移至连接</span><br><span class="line">边框</span><br><span class="line">border-top : <span class="number">1px</span> solid black 上框</span><br><span class="line">border-bottom : <span class="number">1px</span> solid <span class="number">#6699cc</span> 下框</span><br><span class="line">border-left : <span class="number">1px</span> solid <span class="number">#6699cc</span> 左框</span><br><span class="line">border-right : <span class="number">1px</span> solid <span class="number">#6699cc</span> 右框</span><br><span class="line">border: <span class="number">1px</span> solid <span class="number">#6699cc</span> 四边框</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>web-html-meta</title>
    <url>/2020/01/22/web-html-meta/</url>
    <content><![CDATA[<p>The HTML <code>&lt;meta&gt;</code> element represents metadata that cannot be represented by other HTML meta-related elements, like <code>&lt;base&gt;</code>, <code>&lt;link&gt;</code>, <code>&lt;script&gt;</code>, <code>&lt;style&gt;</code> or <code>&lt;title&gt;</code>.</p>
<span id="more"></span>

<p>viewport </p>
<p>使用元视口代码控制浏览器视口的宽度和缩放比例。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>添加 width&#x3D;device-width 以便与屏幕宽度（以设备无关像素为单位）进行匹配。</li>
<li>添加 initial-scale&#x3D;1 以便将 CSS 像素与设备无关像素的比例设为 1:1。</li>
<li>确保在不停用用户缩放功能的情况下，您的网页也可以访问。</li>
</ul>
<p>除了设置 initial-scale 外，您还可以在视口上设置以下属性：</p>
<ul>
<li>minimum-scale</li>
<li>maximum-scale</li>
<li>user-scalable</li>
</ul>
<p>但是，设置后，这些属性可以停用用户缩放视口的功能，可能会造成网页访问方面的问题。</p>
]]></content>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Hyper Text Markup Language</title>
    <url>/2020/01/21/web-html/</url>
    <content><![CDATA[<p>HTML (HyperText Markup Language) is the most basic building block of the Web. It defines the meaning and structure of web content.</p>
<span id="more"></span>

<p>预格式化：</p>
<p><code>&lt;pre&gt;......&lt;/pre&gt;</code> </p>
<p>浏览是效果和编写是效果格式一样</p>
<p>列表</p>
<p>1无序列表又称符号列表</p>
<p>语法格式：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">type</span>=<span class="string">&quot;&quot;</span>&gt;</span>type的属性可选直disc实心圆点,clrcle空心圆点,square实心方框</span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>文字<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>文字<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>2有序列表</p>
<p>语法格式：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">&quot;?&quot;</span> <span class="attr">start</span>&quot;?&quot;&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>文字<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>文字<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>type的值是编号字符可选的有1…,a…,A…,i… ,I…</li>
<li>start为起始值例：如果start为3是那么将从3开始，而且必须是数字。</li>
</ul>
<p>3定义列表<br><code>&lt;dl&gt;</code>定义列表标记<br><code>&lt;dt&gt;</code>标示定义条目<br><code>&lt;dd&gt;</code>标示定义内容<br>语法格式：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dt</span>&gt;</span>文字<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>文字内容<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>连接和图像<br>语法格式：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;url&quot;</span> <span class="attr">name</span>=<span class="string">&quot;?&quot;</span> <span class="attr">target</span>=<span class="string">&quot;?&quot;</span> <span class="attr">title</span>=<span class="string">&quot;?&quot;</span>&gt;</span>....<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>属性：href 连接目标 值可以是url地址也可以是连接锚点<br><code>&lt;a href=&quot;url&quot;&gt;...&lt;/a&gt;</code>或者<br><code>&lt;a href=&quot;锚点&quot;&gt;...&lt;/a&gt;</code></p>
<p>name 连接名称<br>语法格式：<code>&lt;a name=&quot;锚点名称&quot;&gt;...&lt;/a&gt;</code><br>例：<br><code>&lt;a name=&quot;abcdcf&quot;&gt;...&lt;/a&gt;</code><br>连接到该锚点的连接则应是：<br><code>&lt;a name=&quot;#abcdef&quot;&gt;....&lt;/a&gt;</code><br>target目标窗口语法格式：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;url&quot;</span><span class="attr">target</span>=<span class="string">&quot;_blank|_self|_farent|_top|windowname&quot;</span>&gt;</span>....<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>-blank打开新窗口</li>
<li>_self当前窗口打开<br>一下两个仅在框架叶面中应用</li>
<li>_parent当前窗口的父级窗口（上一级）打开</li>
<li>_top在最高一级的窗口打开</li>
<li>windowname已命名的窗口或框架中打开连接<br>title连接提示</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.jcwcn.com&quot;</span> <span class="attr">title</span>=<span class="string">&quot;打开中国教程网的首页&quot;</span>&gt;</span>中国教程网<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>图像<code>&lt;img&gt;</code><br>语法格式：<br><code>&lt;img src=&quot;url&quot; alt=&quot;?&quot; width=&quot;?&quot; height=&quot;?&quot; border=&quot;?&quot; align=&quot;?&quot;&gt;</code></p>
<ul>
<li>border属性定义图片边框的宽度，默认值为0</li>
<li>align属性设置图片旁边文字的位置</li>
</ul>
<p>语法格式：<code>&lt;img src=&quot;&quot; align&quot;&quot;&gt;</code><br>可选值有：</p>
<ul>
<li>top图片和文字顶部对齐</li>
<li>middle图片和文字居中对齐</li>
<li>bottom图片和文字底边对齐（默认）</li>
<li>left图片居左对齐，文字沿图片绕排</li>
<li>right图片居右对齐，文字沿图片绕排</li>
<li>absmiddle图片对齐到目前文字行绝对中央</li>
<li>absbottom图片对齐到目前文字行绝对底部<br>文字的排版<br>不换行空白标记</li>
</ul>
<p>font元素<br>语法格式：<br><code>&lt;font face=&quot;字体名称&quot; size=&quot;字体大小&quot; color=&quot;字体颜色&quot;&gt;</code><br>字体大小可选值为1——7，默认为3<br>例：<code>&lt;font face=&quot;黑体&quot; size=&quot;4&quot; color=&quot;#ff00ff&quot;&gt;....&lt;/font&gt;</code></p>
<p>水平线<code>&lt;hr&gt;</code><br>语法格式：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hr</span> <span class="attr">width</span>=<span class="string">&quot;宽度&quot;</span> <span class="attr">align</span>=<span class="string">&quot;对齐方式默认居中center&quot;</span> <span class="attr">size</span>=<span class="string">&quot;水平线厚度默认为2&quot;</span> <span class="attr">color</span>=<span class="string">&quot;颜色&quot;</span> <span class="attr">noshade</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>noshade无阴影，既实线层<div><span>两种元素<div>是块级元素，和段落元素相似，不同的是两个<div>元素之间不会产生两个元素之间的空行，<code>&lt;span&gt;</code>是行内元素，可以定义段落中部分文字的属性<br>语法格式：<br><code>&lt;div align=&quot;&quot; style=&quot;&quot;&gt;...&lt;/div&gt;</code><br>align设置层中元素的水平对齐方式<br>stule设置元素应用css规范的属性<br><code>&lt;div&gt;兼容性比&lt;span&gt;要好一点，最好使用&lt;div&gt;</code><br>表格语法格式：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">&quot;&quot;</span> <span class="attr">bgcolor</span>=<span class="string">&quot;&quot;</span> <span class="attr">background</span>=<span class="string">&quot;&quot;</span> <span class="attr">border</span>=<span class="string">&quot;&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span>...<span class="tag">&lt;<span class="name">td</span>&gt;</span>....<span class="tag">&lt;/<span class="name">td</span>&gt;</span>....<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>border边框宽度默认值为0，既没有边框</li>
<li>cellspacing表格中单元格的边距大小，默认值为两个像素</li>
<li>cellpadding表格中单元格之间的间距大小，默认值为两个像素</li>
</ul>
<p>tr元素<br>语法格式：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">align</span>=<span class="string">&quot;&quot;</span> <span class="attr">bgcolor</span>=<span class="string">&quot;&quot;</span>&gt;</span>....<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>align属性对齐方式可选值如下：left,center,tight,默认为left<br>bgcolor指定该行的背景颜色<br>td元素<br>语法格式：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">&quot;宽度&quot;</span> <span class="attr">height</span>=<span class="string">&quot;高度&quot;</span> <span class="attr">align</span>=<span class="string">&quot;水平对齐方式&quot;</span> <span class="attr">valign</span>=<span class="string">&quot;垂直对齐方式&quot;</span> <span class="attr">bgcolor</span>=<span class="string">&quot;&quot;</span> <span class="attr">background</span>=<span class="string">&quot;&quot;</span> <span class="attr">rowspan</span>=<span class="string">&quot;单元格的行跨度&quot;</span> <span class="attr">colapan</span>=<span class="string">&quot;单元格的列跨度&quot;</span>&gt;</span>.....<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>align属性的可选值有：left,center,right<br>valign属性的可选值有：top,middle,bottom<br>rowspan和colapan跨行和跨列的数量，默认为1</p>
<p>input元素 语法格式：<br><code>&lt;input type=&quot;&quot;&gt;</code></p>
<p>type属性的可选值有：</p>
<ul>
<li>text 单行文本框</li>
</ul>
<p>属性：name 文本框名称</p>
<ul>
<li>value 文本框的初始值</li>
<li>size 文本框的长度</li>
<li>maxlength 可输入字符串最大的长度</li>
<li>radio 单选框</li>
</ul>
<p>属性：name 单选框名称</p>
<ul>
<li>value 内部值</li>
<li>checked 默认选定</li>
<li>checkbox 复选框</li>
</ul>
<p>属性：name 复选框名称</p>
<ul>
<li>value 内部值</li>
<li>checked 默认选定</li>
<li>reset 重置按钮</li>
<li>submit 确定按钮</li>
</ul>
<p>属性：name 按钮名称</p>
<ul>
<li>value 显示在按钮上的文字</li>
<li>password 密码框<br>属性与文本框的属性完全相同<br>file 文件域</li>
</ul>
<p>属性：name文件域名称</p>
<ul>
<li>size 文件域的长度</li>
<li>maxlength 文件域可接受的字符数量的上限</li>
<li>hidden 隐藏域</li>
</ul>
<p>属性：name 隐藏域名称</p>
<ul>
<li>value 内定值</li>
<li>image 图片域</li>
</ul>
<p>属性：name 所要代表的按钮，可以是submit,reset,或其他.<br>src 按钮图片的url 地址</p>
<p>列表框 <code>&lt;select&gt;</code><br>语法格式：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">.....</span><br><span class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>....<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">.....</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>select元素<br>语法格式：<code>&lt;select name=&quot;&quot; size=&quot;&quot;multiple&gt;&lt;/select&gt;</code></p>
<ul>
<li>name 指定列表框的名字</li>
<li>size 指定列表框显示列表项的条数，如果指定了该参数，select元素是个列表，否则是一个下拉列表框</li>
<li>multiple 指定了这个参数，则表示该列表框可选择多项，否则只可选择一项</li>
</ul>
<p>option属性</p>
<p>语法格式：<br><code>&lt;option value=&quot;&quot; selected&gt;&lt;/option&gt;</code></p>
<ul>
<li>value 该列表项的值</li>
<li>selected 如果设定了这个参数，默认为选定这一项</li>
</ul>
<p>多行文本框<code>&lt;textarea&gt;</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;&quot;</span> <span class="attr">wrap</span>=<span class="string">&quot;off/physical/virtual&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>属性：</p>
<ul>
<li>name文本框的名称</li>
<li>cols文本框的宽度</li>
<li>rows文本框的高度</li>
<li>wrap文本框的折行方式可选值有：</li>
<li>off不保存换行信息</li>
<li>physical强迫浏览器在发送信息到web服务器端时必须将多行文本框的文字一行一行的送出，</li>
<li>virtual送出连续成串的字除非使用者按回车。</li>
</ul>
<p>虚线</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">STYLE</span>=<span class="string">&quot;border:1px dashed pink&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>实线</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">STYLE</span>=<span class="string">&quot;border:1px solid pink&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure>




<p>网页结构一般都包含文档声明DOCTYPE，并且在head中的meta应该包含编码格式、关键字、网页描述信息。</p>
<h3 id="网页结构"><a href="#网页结构" class="headerlink" title="网页结构"></a>网页结构</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>（1）结构化元素包括：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt; header &gt;, &lt; nav &gt;, &lt; article &gt;, &lt; section &gt;, &lt; aside &gt;, &lt; footer &gt;。</span><br></pre></td></tr></table></figure>

<p>（2）元素级别：都是block级别元素，不包含样式，只用于结构化，每个页面可多次使用。<br>（3）元素说明：</p>
<blockquote>
<p>header描述头部信息，<br>nav用于导航模块，<br>article用于可重新覆盖的新闻类内容块，section模块化，<br>aside页面左或右模块，<br>footer底脚模块。</p>
</blockquote>
<h2 id="常用布局元素"><a href="#常用布局元素" class="headerlink" title="常用布局元素"></a>常用布局元素</h2><p>div：流布局使用；</p>
<p>span：文字块使用。</p>
<p>JD首页的meta声明包含：</p>
<ul>
<li>charset 编码格式</li>
<li>description网站描述</li>
<li>Keywords关键字</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt; meta charset=&quot;gbk&quot; /&gt;</span><br><span class="line">&lt; meta name=&quot;description&quot; content=&quot;京东JD.COM-专业的综合网上购物商城,销售家电等数万个品牌优质商品.便捷、诚信的服务，为您提供愉悦的网上购物体验!&quot;&gt;</span><br><span class="line">&lt; meta name=&quot;Keywords&quot; content=&quot;网上购物,网上商城,手机,笔记本,电脑&quot;&gt;</span><br></pre></td></tr></table></figure>

<h2 id="文字类元素"><a href="#文字类元素" class="headerlink" title="文字类元素"></a>文字类元素</h2><p>（1）加粗元素：strong、b。例如：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt; p&gt;&lt; strong&gt;Caution:&lt; /strong&gt; Falling rocks.&lt; /p&gt;&lt; p&gt;This recipe calls for &lt; b&gt;bacon&lt; /b&gt; and &lt; b&gt;baconnaise&lt; /b&gt;.&lt; /p&gt;</span><br></pre></td></tr></table></figure>

<p>（2）倾斜元素：和。例如：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt; !-- Stressed emphasis -- &gt;</span><br><span class="line">&lt; p&gt;I &lt; em&gt;love&lt; /em&gt; Chicago!&lt; /p&gt;</span><br><span class="line">&lt; !-- Alternative voice or tone --&gt;</span><br><span class="line">&lt; p&gt;The name &lt; i&gt;Shay&lt; /i&gt; means a gift.&lt; /p&gt;</span><br></pre></td></tr></table></figure>

<h2 id="自关闭元素"><a href="#自关闭元素" class="headerlink" title="自关闭元素"></a>自关闭元素</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt; br&gt;</span><br><span class="line">&lt; embed&gt;</span><br><span class="line">&lt; hr&gt;</span><br><span class="line">&lt; img&gt;</span><br><span class="line">&lt; input&gt;</span><br><span class="line">&lt; link&gt;</span><br><span class="line">&lt; meta&gt;</span><br><span class="line">&lt; param&gt;</span><br><span class="line">&lt; source&gt;</span><br><span class="line">&lt; wbr&gt;</span><br></pre></td></tr></table></figure>

<h2 id="页面内跳转"><a href="#页面内跳转" class="headerlink" title="页面内跳转"></a>页面内跳转</h2><p>如果需要跳转到页面指定的位置，可在该位置设置元素的id属性，然后为链接添加href&#x3D;”#id”。例如：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt; body id=&quot;top&quot; &gt;</span><br><span class="line">...</span><br><span class="line">&lt; a href=&quot;#top&quot; &gt;Back to top&lt; /a &gt;</span><br><span class="line">...</span><br><span class="line">&lt; /body &gt;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>windows 快捷方式</title>
    <url>/2021/08/10/windows-lnk/</url>
    <content><![CDATA[<span id="more"></span>

<p>C#</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 创建桌面快捷键</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;LnkName&quot;&gt;</span>快捷键名称<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;AssemblyFullPath&quot;&gt;</span>程序集的完整路径<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;IconLocation&quot;&gt;</span>图标位置<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;Description&quot;&gt;</span>描述<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">bool</span> <span class="title">CreateDesktopShortcut</span>(<span class="params"><span class="built_in">string</span> LnkName, <span class="built_in">string</span> AssemblyFullPath, <span class="built_in">string</span> IconLocation = <span class="literal">null</span>, <span class="built_in">string</span> Description = <span class="literal">null</span></span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> DesktopLnkPath = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), <span class="string">$&quot;<span class="subst">&#123;LnkName&#125;</span>.lnk&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (File.Exists(DesktopLnkPath)) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    IWshRuntimeLibrary.IWshShortcut shortcut = <span class="keyword">new</span> IWshRuntimeLibrary.WshShell().CreateShortcut(DesktopLnkPath);</span><br><span class="line">    shortcut.WorkingDirectory = Path.GetDirectoryName(AssemblyFullPath);</span><br><span class="line">    shortcut.TargetPath = AssemblyFullPath;</span><br><span class="line">    shortcut.WindowStyle = <span class="number">1</span>;</span><br><span class="line">    shortcut.Description = Description;</span><br><span class="line">    shortcut.IconLocation = IconLocation ?? AssemblyFullPath;</span><br><span class="line">    shortcut.Save();</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>wordpress</title>
    <url>/2019/08/07/wordpress/</url>
    <content><![CDATA[<span id="more"></span>

<ul>
<li><a href="https://codex.wordpress.org/zh-cn:%E5%AE%89%E8%A3%85_WordPress">官方教程-安装 WordPress</a></li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下载最新版 wordpress</span></span><br><span class="line">wget https://wordpress.org/latest.tar.gz</span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar -zxvf latest.tar.gz</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>易班 APP</title>
    <url>/2018/05/26/yiban/</url>
    <content><![CDATA[<p>基于 AppInvento 技术对兰州理工大学及易班服务的封装。</p>
<span id="more"></span>

<blockquote>
<p>为避免腾讯等安全软件误报，强烈建议大家先使用浏览器打开此页</p>
</blockquote>
<h2 id="软件简介"><a href="#软件简介" class="headerlink" title="软件简介"></a>软件简介</h2><ul>
<li>兰理工专用版易班，裁掉了部分原有功能</li>
<li>集成易班、微信、QQ、支付宝等优秀功能，方便大家的使用</li>
<li>为保证服务，仅提供最新版，所以谨慎升级</li>
<li>软件本身无毒，如有误报请默认允许（如果怕不合适，装上后再扫下病毒）</li>
<li>业余研究产物，仅作研究，不深入开发</li>
</ul>
<h2 id="最新版已知问题"><a href="#最新版已知问题" class="headerlink" title="最新版已知问题"></a>最新版已知问题</h2><ul>
<li>精品课程无法播放</li>
<li>暂不支持分享</li>
</ul>
<h2 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h2><p>2018年05月26日 <a href="/lab/LUT_yiban/LUT_yiban180526.apk">下载</a></p>
<ol>
<li>取消原有的“我的订阅”功能</li>
<li>加入新增的易班熊</li>
<li>新增考试资料、天气查询、快递查询、景点门票、净网中心等功能<br><img src="/img/yiban/180526a.png" alt="功能截图"></li>
</ol>
<p>2018年05月05日 </p>
<ol>
<li>闲的没事造了这么个玩的，还能用</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>电脑新手指南</title>
    <url>/2018/06/07/%E7%94%B5%E8%84%91%E6%96%B0%E6%89%8B%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<p>0 系统的选择及安装<br>1 联网，请备好网线<br>2 浏览器的使用<br>3 我的电脑，配置系统文件<br>4 软件安装及卸载<br>5 拒绝广告和病毒<br>6 快捷键及shell基础<br>7 浅谈自学知识<br>8 电脑是工具，不是玩具<br>9 必经之路，交流经验</p>
<ul>
<li>电脑的保养及维护技巧</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>程序执行环境</title>
    <url>/2019/06/07/%E7%A8%8B%E5%BA%8F%E6%89%A7%E8%A1%8C%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<h2 id="参数列表"><a href="#参数列表" class="headerlink" title="参数列表"></a>参数列表</h2><p>linux 命令行规范</p>
<ol>
<li>短参数：以单横开头，后跟单一字符，例如：<code>ls -h</code></li>
<li>长参数：以双横开头，后跟字符串，例如：<code>ls -help</code></li>
</ol>
<p>程序访问参数列表的方法</p>
<ol>
<li>主函数的参数<code>argc</code>和<code>argv</code></li>
<li>程序接受命令行的输入参数，并解释</li>
</ol>
<h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><ul>
<li>程序推出码</li>
<li>系统调用错误处理</li>
<li>资源管理</li>
<li>系统日志</li>
<li>用户信息</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>什么是传感器</title>
    <url>/2018/01/14/%E9%9B%86%E6%88%90%E4%BC%A0%E6%84%9F%E5%99%A8/1_%E4%BB%80%E4%B9%88%E6%98%AF%E4%BC%A0%E6%84%9F%E5%99%A8/</url>
    <content><![CDATA[<h1 id="什么是传感器"><a href="#什么是传感器" class="headerlink" title="什么是传感器"></a>什么是传感器</h1><blockquote>
<p><code>传感器</code>：能够感受<code>规定的被测量</code>，并按照<code>一定的规律</code>转换成可用输出信号的<code>器件</code>或<code>装置</code>。</p>
</blockquote>
<h2 id="传感器的特点"><a href="#传感器的特点" class="headerlink" title="传感器的特点"></a>传感器的特点</h2><ol>
<li>传感器是<code>器件</code>或<code>测量装置</code>，能完成检测任务；</li>
<li>输入量是某一被测量，可能是<code>物理量</code>，也可能是<code>化学量、生物量</code>；</li>
<li>输出量是某种<code>物理量，便于传输、转换、处理、显示</code>等，可以是光、电物理量，主要是电物理量；</li>
<li>输入输出有<code>对应关系</code>，且应有<code>一定的精确程度</code>。</li>
</ol>
<h2 id="传感器的分类"><a href="#传感器的分类" class="headerlink" title="传感器的分类"></a>传感器的分类</h2><table>
<thead>
<tr>
<th>分类方法</th>
<th>种类</th>
</tr>
</thead>
<tbody><tr>
<td>输入信息特征</td>
<td>物理量传感器、化学量传感器、生物量传感器</td>
</tr>
<tr>
<td>敏感的能量域</td>
<td>力敏、电敏、磁敏、光敏、热敏、声敏、气敏、离子敏</td>
</tr>
<tr>
<td>信息转换原理</td>
<td>压电、压阻、光电、热电等</td>
</tr>
<tr>
<td>技术发展阶段</td>
<td>分立传感器、集成传感器、智能传感器</td>
</tr>
</tbody></table>
<h2 id="传感器的别称"><a href="#传感器的别称" class="headerlink" title="传感器的别称"></a>传感器的别称</h2><ul>
<li>发送器、传送器、变送器、检测器、探头……</li>
<li>Sensor,Transducer,Detector,Guage……</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>什么是集成传感器</title>
    <url>/2018/01/14/%E9%9B%86%E6%88%90%E4%BC%A0%E6%84%9F%E5%99%A8/2_%E4%BB%80%E4%B9%88%E6%98%AF%E9%9B%86%E6%88%90%E4%BC%A0%E6%84%9F%E5%99%A8/</url>
    <content><![CDATA[<h1 id="集成传感器"><a href="#集成传感器" class="headerlink" title="集成传感器"></a>集成传感器</h1><blockquote>
<p>把<code>敏感元件</code>和<code>放大电路、运算电路、补偿电路</code>等模块，集成在<code>一个芯片</code>、或<code>同一个封装</code>上的传感器成为集成传感器。</p>
</blockquote>
<ul>
<li>本课程论及范围<blockquote>
<p>利用<code>微加工</code>和<code>集成工艺</code>，把一个或多个传感器及其信号处理、补偿电路集成在同一个芯片（<code>SoC，System-on-Chip</code>）</p>
</blockquote>
</li>
</ul>
]]></content>
  </entry>
</search>
